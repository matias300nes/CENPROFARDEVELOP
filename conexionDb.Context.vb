'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class CENPROFAREntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=CENPROFAREntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub


    <DbFunction("CENPROFAREntities", "fn_Stock_Material_Almacen")>
    Public Overridable Function fn_Stock_Material_Almacen(idalmacen As Nullable(Of Long)) As IQueryable(Of fn_Stock_Material_Almacen_Result)
        Dim idalmacenParameter As ObjectParameter = If(idalmacen.HasValue, New ObjectParameter("idalmacen", idalmacen), New ObjectParameter("idalmacen", GetType(Long)))

         Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fn_Stock_Material_Almacen_Result)("[CENPROFAREntities].[fn_Stock_Material_Almacen](@idalmacen)", idalmacenParameter)
    End Function

    <DbFunction("CENPROFAREntities", "fn_Stock_Material_Almacen_Lote")>
    Public Overridable Function fn_Stock_Material_Almacen_Lote(idalmacen As Nullable(Of Long), lote As Nullable(Of Long)) As IQueryable(Of fn_Stock_Material_Almacen_Lote_Result)
        Dim idalmacenParameter As ObjectParameter = If(idalmacen.HasValue, New ObjectParameter("idalmacen", idalmacen), New ObjectParameter("idalmacen", GetType(Long)))

        Dim loteParameter As ObjectParameter = If(lote.HasValue, New ObjectParameter("lote", lote), New ObjectParameter("lote", GetType(Long)))

         Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fn_Stock_Material_Almacen_Lote_Result)("[CENPROFAREntities].[fn_Stock_Material_Almacen_Lote](@idalmacen, @lote)", idalmacenParameter, loteParameter)
    End Function

    <DbFunction("CENPROFAREntities", "fn_Stock_Material_Unidad")>
    Public Overridable Function fn_Stock_Material_Unidad() As IQueryable(Of fn_Stock_Material_Unidad_Result)
         Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fn_Stock_Material_Unidad_Result)("[CENPROFAREntities].[fn_Stock_Material_Unidad]()")
    End Function

    <DbFunction("CENPROFAREntities", "fnGastos_IVA")>
    Public Overridable Function fnGastos_IVA() As IQueryable(Of fnGastos_IVA_Result)
         Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnGastos_IVA_Result)("[CENPROFAREntities].[fnGastos_IVA]()")
    End Function

    <DbFunction("CENPROFAREntities", "fnMateriales_Proveedor")>
    Public Overridable Function fnMateriales_Proveedor() As IQueryable(Of fnMateriales_Proveedor_Result)
         Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnMateriales_Proveedor_Result)("[CENPROFAREntities].[fnMateriales_Proveedor]()")
    End Function

    Public Overridable Function HistorialCta_SelectByIdFarmacia(idFarmacia As Nullable(Of Long)) As ObjectResult(Of HistorialCta_SelectByIdFarmacia_Result)
        Dim idFarmaciaParameter As ObjectParameter = If(idFarmacia.HasValue, New ObjectParameter("IdFarmacia", idFarmacia), New ObjectParameter("IdFarmacia", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of HistorialCta_SelectByIdFarmacia_Result)("HistorialCta_SelectByIdFarmacia", idFarmaciaParameter)
    End Function

    Public Overridable Function sp_actualizar_stock_acumulado() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_actualizar_stock_acumulado")
    End Function

    Public Overridable Function sp_alterdiagram(diagramname As String, owner_id As Nullable(Of Integer), version As Nullable(Of Integer), definition As Byte()) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Dim versionParameter As ObjectParameter = If(version.HasValue, New ObjectParameter("version", version), New ObjectParameter("version", GetType(Integer)))

        Dim definitionParameter As ObjectParameter = If(definition IsNot Nothing, New ObjectParameter("definition", definition), New ObjectParameter("definition", GetType(Byte())))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter)
    End Function

    Public Overridable Function sp_Clasificaciones_Insert(id As ObjectParameter, codigo As String, idcentrocosto As Nullable(Of Long), idgerencia As Nullable(Of Long), idmaterial As Nullable(Of Long), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim idcentrocostoParameter As ObjectParameter = If(idcentrocosto.HasValue, New ObjectParameter("idcentrocosto", idcentrocosto), New ObjectParameter("idcentrocosto", GetType(Long)))

        Dim idgerenciaParameter As ObjectParameter = If(idgerencia.HasValue, New ObjectParameter("idgerencia", idgerencia), New ObjectParameter("idgerencia", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Clasificaciones_Insert", id, codigoParameter, idcentrocostoParameter, idgerenciaParameter, idmaterialParameter, useraddParameter, res)
    End Function

    Public Overridable Function sp_Clasificaciones_Select_All() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Clasificaciones_Select_All")
    End Function

    Public Overridable Function sp_Clasificaciones_Update(id As Nullable(Of Long), codigo As String, idcentrocosto As Nullable(Of Long), idgerencia As Nullable(Of Long), idmaterial As Nullable(Of Long), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim idcentrocostoParameter As ObjectParameter = If(idcentrocosto.HasValue, New ObjectParameter("idcentrocosto", idcentrocosto), New ObjectParameter("idcentrocosto", GetType(Long)))

        Dim idgerenciaParameter As ObjectParameter = If(idgerencia.HasValue, New ObjectParameter("idgerencia", idgerencia), New ObjectParameter("idgerencia", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Clasificaciones_Update", idParameter, codigoParameter, idcentrocostoParameter, idgerenciaParameter, idmaterialParameter, userupdParameter, res)
    End Function

    Public Overridable Function sp_Consumos_Delete(idconsumo As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim idconsumoParameter As ObjectParameter = If(idconsumo.HasValue, New ObjectParameter("idconsumo", idconsumo), New ObjectParameter("idconsumo", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Consumos_Delete", idconsumoParameter, userdelParameter, res, mensaje)
    End Function

    Public Overridable Function sp_Consumos_Delete_All(idconsumo As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim idconsumoParameter As ObjectParameter = If(idconsumo.HasValue, New ObjectParameter("idconsumo", idconsumo), New ObjectParameter("idconsumo", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Consumos_Delete_All", idconsumoParameter, userdelParameter, res, mensaje)
    End Function

    Public Overridable Function sp_Consumos_Det_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Consumos_Det_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function sp_Consumos_Det_Insert(idConsumo As Nullable(Of Long), idmaterial As Nullable(Of Long), qty As Nullable(Of Decimal), idunidad As Nullable(Of Long), precioUni As Nullable(Of Decimal), ganancia As Nullable(Of Decimal), gananciaorig As Nullable(Of Decimal), precioVta As Nullable(Of Decimal), precioVtaorig As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), nota_Det As String, recargoDesc_Det As Nullable(Of Boolean), porcRecargo_Det As Nullable(Of Decimal), ordenItem As Nullable(Of Short), useradd As Nullable(Of Long), mensaje As ObjectParameter, res As ObjectParameter) As Integer
        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("idConsumo", idConsumo), New ObjectParameter("idConsumo", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim precioUniParameter As ObjectParameter = If(precioUni.HasValue, New ObjectParameter("PrecioUni", precioUni), New ObjectParameter("PrecioUni", GetType(Decimal)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("ganancia", ganancia), New ObjectParameter("ganancia", GetType(Decimal)))

        Dim gananciaorigParameter As ObjectParameter = If(gananciaorig.HasValue, New ObjectParameter("gananciaorig", gananciaorig), New ObjectParameter("gananciaorig", GetType(Decimal)))

        Dim precioVtaParameter As ObjectParameter = If(precioVta.HasValue, New ObjectParameter("PrecioVta", precioVta), New ObjectParameter("PrecioVta", GetType(Decimal)))

        Dim precioVtaorigParameter As ObjectParameter = If(precioVtaorig.HasValue, New ObjectParameter("PrecioVtaorig", precioVtaorig), New ObjectParameter("PrecioVtaorig", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim nota_DetParameter As ObjectParameter = If(nota_Det IsNot Nothing, New ObjectParameter("Nota_Det", nota_Det), New ObjectParameter("Nota_Det", GetType(String)))

        Dim recargoDesc_DetParameter As ObjectParameter = If(recargoDesc_Det.HasValue, New ObjectParameter("RecargoDesc_Det", recargoDesc_Det), New ObjectParameter("RecargoDesc_Det", GetType(Boolean)))

        Dim porcRecargo_DetParameter As ObjectParameter = If(porcRecargo_Det.HasValue, New ObjectParameter("PorcRecargo_Det", porcRecargo_Det), New ObjectParameter("PorcRecargo_Det", GetType(Decimal)))

        Dim ordenItemParameter As ObjectParameter = If(ordenItem.HasValue, New ObjectParameter("OrdenItem", ordenItem), New ObjectParameter("OrdenItem", GetType(Short)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Consumos_Det_Insert", idConsumoParameter, idmaterialParameter, qtyParameter, idunidadParameter, precioUniParameter, gananciaParameter, gananciaorigParameter, precioVtaParameter, precioVtaorigParameter, subtotalParameter, nota_DetParameter, recargoDesc_DetParameter, porcRecargo_DetParameter, ordenItemParameter, useraddParameter, mensaje, res)
    End Function

    Public Overridable Function sp_Consumos_Det_Select_All() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Consumos_Det_Select_All")
    End Function

    Public Overridable Function sp_Consumos_Det_Select_By_IDConsumo(idConsumo As Nullable(Of Long)) As ObjectResult(Of sp_Consumos_Det_Select_By_IDConsumo_Result)
        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("IdConsumo", idConsumo), New ObjectParameter("IdConsumo", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Consumos_Det_Select_By_IDConsumo_Result)("sp_Consumos_Det_Select_By_IDConsumo", idConsumoParameter)
    End Function

    Public Overridable Function sp_Consumos_Det_Update(id As Nullable(Of Long), idConsumo As Nullable(Of Long), idmaterial As Nullable(Of Long), qty As Nullable(Of Decimal), idunidad As Nullable(Of Long), precioUni As Nullable(Of Decimal), ganancia As Nullable(Of Decimal), gananciaorig As Nullable(Of Decimal), precioVta As Nullable(Of Decimal), precioVtaorig As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), nota_Det As String, recargoDesc_Det As Nullable(Of Boolean), porcRecargo_Det As Nullable(Of Decimal), userupd As Nullable(Of Long), orden As Nullable(Of Short), mensaje As ObjectParameter, res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("idConsumo", idConsumo), New ObjectParameter("idConsumo", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim precioUniParameter As ObjectParameter = If(precioUni.HasValue, New ObjectParameter("PrecioUni", precioUni), New ObjectParameter("PrecioUni", GetType(Decimal)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("ganancia", ganancia), New ObjectParameter("ganancia", GetType(Decimal)))

        Dim gananciaorigParameter As ObjectParameter = If(gananciaorig.HasValue, New ObjectParameter("gananciaorig", gananciaorig), New ObjectParameter("gananciaorig", GetType(Decimal)))

        Dim precioVtaParameter As ObjectParameter = If(precioVta.HasValue, New ObjectParameter("PrecioVta", precioVta), New ObjectParameter("PrecioVta", GetType(Decimal)))

        Dim precioVtaorigParameter As ObjectParameter = If(precioVtaorig.HasValue, New ObjectParameter("PrecioVtaorig", precioVtaorig), New ObjectParameter("PrecioVtaorig", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim nota_DetParameter As ObjectParameter = If(nota_Det IsNot Nothing, New ObjectParameter("Nota_Det", nota_Det), New ObjectParameter("Nota_Det", GetType(String)))

        Dim recargoDesc_DetParameter As ObjectParameter = If(recargoDesc_Det.HasValue, New ObjectParameter("RecargoDesc_Det", recargoDesc_Det), New ObjectParameter("RecargoDesc_Det", GetType(Boolean)))

        Dim porcRecargo_DetParameter As ObjectParameter = If(porcRecargo_Det.HasValue, New ObjectParameter("PorcRecargo_Det", porcRecargo_Det), New ObjectParameter("PorcRecargo_Det", GetType(Decimal)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Dim ordenParameter As ObjectParameter = If(orden.HasValue, New ObjectParameter("Orden", orden), New ObjectParameter("Orden", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Consumos_Det_Update", idParameter, idConsumoParameter, idmaterialParameter, qtyParameter, idunidadParameter, precioUniParameter, gananciaParameter, gananciaorigParameter, precioVtaParameter, precioVtaorigParameter, subtotalParameter, nota_DetParameter, recargoDesc_DetParameter, porcRecargo_DetParameter, userupdParameter, ordenParameter, mensaje, res)
    End Function

    Public Overridable Function sp_Consumos_Insert(id As ObjectParameter, fecha As Nullable(Of Date), codigo As ObjectParameter, idCliente As Nullable(Of Long), oCAbiertaAsociada As String, subtotal As Nullable(Of Decimal), iva As Nullable(Of Decimal), montoIva As Nullable(Of Decimal), total As Nullable(Of Decimal), facturado As Nullable(Of Boolean), cerrado As Nullable(Of Boolean), cancelado As Nullable(Of Boolean), userVendedor As Nullable(Of Long), recDescGobal As Nullable(Of Boolean), recargoDesc As Nullable(Of Boolean), porcRecargo As Nullable(Of Decimal), deuda As Nullable(Of Decimal), nota As String, presupuesto As Nullable(Of Boolean), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim oCAbiertaAsociadaParameter As ObjectParameter = If(oCAbiertaAsociada IsNot Nothing, New ObjectParameter("OCAbiertaAsociada", oCAbiertaAsociada), New ObjectParameter("OCAbiertaAsociada", GetType(String)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim ivaParameter As ObjectParameter = If(iva.HasValue, New ObjectParameter("Iva", iva), New ObjectParameter("Iva", GetType(Decimal)))

        Dim montoIvaParameter As ObjectParameter = If(montoIva.HasValue, New ObjectParameter("MontoIva", montoIva), New ObjectParameter("MontoIva", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim facturadoParameter As ObjectParameter = If(facturado.HasValue, New ObjectParameter("facturado", facturado), New ObjectParameter("facturado", GetType(Boolean)))

        Dim cerradoParameter As ObjectParameter = If(cerrado.HasValue, New ObjectParameter("Cerrado", cerrado), New ObjectParameter("Cerrado", GetType(Boolean)))

        Dim canceladoParameter As ObjectParameter = If(cancelado.HasValue, New ObjectParameter("Cancelado", cancelado), New ObjectParameter("Cancelado", GetType(Boolean)))

        Dim userVendedorParameter As ObjectParameter = If(userVendedor.HasValue, New ObjectParameter("userVendedor", userVendedor), New ObjectParameter("userVendedor", GetType(Long)))

        Dim recDescGobalParameter As ObjectParameter = If(recDescGobal.HasValue, New ObjectParameter("RecDescGobal", recDescGobal), New ObjectParameter("RecDescGobal", GetType(Boolean)))

        Dim recargoDescParameter As ObjectParameter = If(recargoDesc.HasValue, New ObjectParameter("RecargoDesc", recargoDesc), New ObjectParameter("RecargoDesc", GetType(Boolean)))

        Dim porcRecargoParameter As ObjectParameter = If(porcRecargo.HasValue, New ObjectParameter("PorcRecargo", porcRecargo), New ObjectParameter("PorcRecargo", GetType(Decimal)))

        Dim deudaParameter As ObjectParameter = If(deuda.HasValue, New ObjectParameter("Deuda", deuda), New ObjectParameter("Deuda", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim presupuestoParameter As ObjectParameter = If(presupuesto.HasValue, New ObjectParameter("Presupuesto", presupuesto), New ObjectParameter("Presupuesto", GetType(Boolean)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Consumos_Insert", id, fechaParameter, codigo, idClienteParameter, oCAbiertaAsociadaParameter, subtotalParameter, ivaParameter, montoIvaParameter, totalParameter, facturadoParameter, cerradoParameter, canceladoParameter, userVendedorParameter, recDescGobalParameter, recargoDescParameter, porcRecargoParameter, deudaParameter, notaParameter, presupuestoParameter, useraddParameter, res)
    End Function

    Public Overridable Function sp_Consumos_Notas_Delete(idConsumo As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("idConsumo", idConsumo), New ObjectParameter("idConsumo", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Consumos_Notas_Delete", idConsumoParameter, res)
    End Function

    Public Overridable Function sp_Consumos_Notas_Insert(idConsumo As Nullable(Of Long), nota As String, res As ObjectParameter) As Integer
        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("idConsumo", idConsumo), New ObjectParameter("idConsumo", GetType(Long)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Consumos_Notas_Insert", idConsumoParameter, notaParameter, res)
    End Function

    Public Overridable Function sp_Consumos_Select_All() As ObjectResult(Of sp_Consumos_Select_All_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Consumos_Select_All_Result)("sp_Consumos_Select_All")
    End Function

    Public Overridable Function sp_Consumos_Update(id As Nullable(Of Long), fecha As Nullable(Of Date), idCliente As Nullable(Of Long), oCAbiertaAsociada As String, subtotal As Nullable(Of Decimal), iva As Nullable(Of Decimal), montoIva As Nullable(Of Decimal), total As Nullable(Of Decimal), facturado As Nullable(Of Boolean), cerrado As Nullable(Of Boolean), cancelado As Nullable(Of Boolean), userVendedor As Nullable(Of Long), recDescGobal As Nullable(Of Boolean), recargoDesc As Nullable(Of Boolean), porcRecargo As Nullable(Of Decimal), deuda As Nullable(Of Decimal), nota As String, presupuesto As Nullable(Of Boolean), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim oCAbiertaAsociadaParameter As ObjectParameter = If(oCAbiertaAsociada IsNot Nothing, New ObjectParameter("OCAbiertaAsociada", oCAbiertaAsociada), New ObjectParameter("OCAbiertaAsociada", GetType(String)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim ivaParameter As ObjectParameter = If(iva.HasValue, New ObjectParameter("Iva", iva), New ObjectParameter("Iva", GetType(Decimal)))

        Dim montoIvaParameter As ObjectParameter = If(montoIva.HasValue, New ObjectParameter("MontoIva", montoIva), New ObjectParameter("MontoIva", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim facturadoParameter As ObjectParameter = If(facturado.HasValue, New ObjectParameter("facturado", facturado), New ObjectParameter("facturado", GetType(Boolean)))

        Dim cerradoParameter As ObjectParameter = If(cerrado.HasValue, New ObjectParameter("Cerrado", cerrado), New ObjectParameter("Cerrado", GetType(Boolean)))

        Dim canceladoParameter As ObjectParameter = If(cancelado.HasValue, New ObjectParameter("Cancelado", cancelado), New ObjectParameter("Cancelado", GetType(Boolean)))

        Dim userVendedorParameter As ObjectParameter = If(userVendedor.HasValue, New ObjectParameter("userVendedor", userVendedor), New ObjectParameter("userVendedor", GetType(Long)))

        Dim recDescGobalParameter As ObjectParameter = If(recDescGobal.HasValue, New ObjectParameter("RecDescGobal", recDescGobal), New ObjectParameter("RecDescGobal", GetType(Boolean)))

        Dim recargoDescParameter As ObjectParameter = If(recargoDesc.HasValue, New ObjectParameter("RecargoDesc", recargoDesc), New ObjectParameter("RecargoDesc", GetType(Boolean)))

        Dim porcRecargoParameter As ObjectParameter = If(porcRecargo.HasValue, New ObjectParameter("PorcRecargo", porcRecargo), New ObjectParameter("PorcRecargo", GetType(Decimal)))

        Dim deudaParameter As ObjectParameter = If(deuda.HasValue, New ObjectParameter("Deuda", deuda), New ObjectParameter("Deuda", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim presupuestoParameter As ObjectParameter = If(presupuesto.HasValue, New ObjectParameter("Presupuesto", presupuesto), New ObjectParameter("Presupuesto", GetType(Boolean)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Consumos_Update", idParameter, fechaParameter, idClienteParameter, oCAbiertaAsociadaParameter, subtotalParameter, ivaParameter, montoIvaParameter, totalParameter, facturadoParameter, cerradoParameter, canceladoParameter, userVendedorParameter, recDescGobalParameter, recargoDescParameter, porcRecargoParameter, deudaParameter, notaParameter, presupuestoParameter, userupdParameter, res)
    End Function

    Public Overridable Function sp_creatediagram(diagramname As String, owner_id As Nullable(Of Integer), version As Nullable(Of Integer), definition As Byte()) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Dim versionParameter As ObjectParameter = If(version.HasValue, New ObjectParameter("version", version), New ObjectParameter("version", GetType(Integer)))

        Dim definitionParameter As ObjectParameter = If(definition IsNot Nothing, New ObjectParameter("definition", definition), New ObjectParameter("definition", GetType(Byte())))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter)
    End Function

    Public Overridable Function sp_dropdiagram(diagramname As String, owner_id As Nullable(Of Integer)) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter)
    End Function

    Public Overridable Function sp_helpdiagramdefinition(diagramname As String, owner_id As Nullable(Of Integer)) As ObjectResult(Of sp_helpdiagramdefinition_Result)
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_helpdiagramdefinition_Result)("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter)
    End Function

    Public Overridable Function sp_helpdiagrams(diagramname As String, owner_id As Nullable(Of Integer)) As ObjectResult(Of sp_helpdiagrams_Result)
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_helpdiagrams_Result)("sp_helpdiagrams", diagramnameParameter, owner_idParameter)
    End Function

    Public Overridable Function sp_Insert_To_Log(table_Name As String) As Integer
        Dim table_NameParameter As ObjectParameter = If(table_Name IsNot Nothing, New ObjectParameter("Table_Name", table_Name), New ObjectParameter("Table_Name", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Insert_To_Log", table_NameParameter)
    End Function

    Public Overridable Function sp_MateriaPrima_Select_All_For_Ensayos() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_MateriaPrima_Select_All_For_Ensayos")
    End Function

    Public Overridable Function sp_Motivos_Mov_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Motivos_Mov_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function sp_Motivos_Mov_Insert(id As ObjectParameter, codigo As String, nombre As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Motivos_Mov_Insert", id, codigoParameter, nombreParameter, useraddParameter, res)
    End Function

    Public Overridable Function sp_Motivos_Mov_Select_All() As ObjectResult(Of sp_Motivos_Mov_Select_All_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Motivos_Mov_Select_All_Result)("sp_Motivos_Mov_Select_All")
    End Function

    Public Overridable Function sp_Motivos_Mov_Update(id As Nullable(Of Long), codigo As String, nombre As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Motivos_Mov_Update", idParameter, codigoParameter, nombreParameter, userupdParameter, res)
    End Function

    Public Overridable Function sp_renamediagram(diagramname As String, owner_id As Nullable(Of Integer), new_diagramname As String) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Dim new_diagramnameParameter As ObjectParameter = If(new_diagramname IsNot Nothing, New ObjectParameter("new_diagramname", new_diagramname), New ObjectParameter("new_diagramname", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter)
    End Function

    Public Overridable Function sp_rpt_BajaRotacion(desde As Nullable(Of Date), hasta As Nullable(Of Date)) As Integer
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_BajaRotacion", desdeParameter, hastaParameter)
    End Function

    Public Overridable Function sp_rpt_EtiquetaCentroCosto(id_centrocosto As String) As Integer
        Dim id_centrocostoParameter As ObjectParameter = If(id_centrocosto IsNot Nothing, New ObjectParameter("id_centrocosto", id_centrocosto), New ObjectParameter("id_centrocosto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_EtiquetaCentroCosto", id_centrocostoParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroAjustes_Det(codigo_Ajustes_Det As String) As ObjectResult(Of sp_rpt_MaestroAjustes_Det_Result)
        Dim codigo_Ajustes_DetParameter As ObjectParameter = If(codigo_Ajustes_Det IsNot Nothing, New ObjectParameter("codigo_Ajustes_Det", codigo_Ajustes_Det), New ObjectParameter("codigo_Ajustes_Det", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_rpt_MaestroAjustes_Det_Result)("sp_rpt_MaestroAjustes_Det", codigo_Ajustes_DetParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroAlmacenes(codigo_Almacenes As String) As ObjectResult(Of sp_rpt_MaestroAlmacenes_Result)
        Dim codigo_AlmacenesParameter As ObjectParameter = If(codigo_Almacenes IsNot Nothing, New ObjectParameter("codigo_Almacenes", codigo_Almacenes), New ObjectParameter("codigo_Almacenes", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_rpt_MaestroAlmacenes_Result)("sp_rpt_MaestroAlmacenes", codigo_AlmacenesParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroCentrosCostos(codigo_CentrosCostos As String) As ObjectResult(Of sp_rpt_MaestroCentrosCostos_Result)
        Dim codigo_CentrosCostosParameter As ObjectParameter = If(codigo_CentrosCostos IsNot Nothing, New ObjectParameter("codigo_CentrosCostos", codigo_CentrosCostos), New ObjectParameter("codigo_CentrosCostos", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_rpt_MaestroCentrosCostos_Result)("sp_rpt_MaestroCentrosCostos", codigo_CentrosCostosParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroClasificaciones(codigo_Clasificaciones As String) As Integer
        Dim codigo_ClasificacionesParameter As ObjectParameter = If(codigo_Clasificaciones IsNot Nothing, New ObjectParameter("codigo_Clasificaciones", codigo_Clasificaciones), New ObjectParameter("codigo_Clasificaciones", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroClasificaciones", codigo_ClasificacionesParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroConsumos(codigo_Consumos As String, id_material As String, codigo_usuario_retira As String, desde As Nullable(Of Date), hasta As Nullable(Of Date), codigo_cc As String) As Integer
        Dim codigo_ConsumosParameter As ObjectParameter = If(codigo_Consumos IsNot Nothing, New ObjectParameter("codigo_Consumos", codigo_Consumos), New ObjectParameter("codigo_Consumos", GetType(String)))

        Dim id_materialParameter As ObjectParameter = If(id_material IsNot Nothing, New ObjectParameter("id_material", id_material), New ObjectParameter("id_material", GetType(String)))

        Dim codigo_usuario_retiraParameter As ObjectParameter = If(codigo_usuario_retira IsNot Nothing, New ObjectParameter("codigo_usuario_retira", codigo_usuario_retira), New ObjectParameter("codigo_usuario_retira", GetType(String)))

        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("desde", desde), New ObjectParameter("desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("hasta", hasta), New ObjectParameter("hasta", GetType(Date)))

        Dim codigo_ccParameter As ObjectParameter = If(codigo_cc IsNot Nothing, New ObjectParameter("codigo_cc", codigo_cc), New ObjectParameter("codigo_cc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroConsumos", codigo_ConsumosParameter, id_materialParameter, codigo_usuario_retiraParameter, desdeParameter, hastaParameter, codigo_ccParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroConsumos_Det(codigo_Consumos_Det As String) As Integer
        Dim codigo_Consumos_DetParameter As ObjectParameter = If(codigo_Consumos_Det IsNot Nothing, New ObjectParameter("codigo_Consumos_Det", codigo_Consumos_Det), New ObjectParameter("codigo_Consumos_Det", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroConsumos_Det", codigo_Consumos_DetParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroControlesMateriales(codigo_ControlesMateriales As String) As Integer
        Dim codigo_ControlesMaterialesParameter As ObjectParameter = If(codigo_ControlesMateriales IsNot Nothing, New ObjectParameter("codigo_ControlesMateriales", codigo_ControlesMateriales), New ObjectParameter("codigo_ControlesMateriales", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroControlesMateriales", codigo_ControlesMaterialesParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroDevolucionesPanol(codigo_DevolucionesPanol As String) As Integer
        Dim codigo_DevolucionesPanolParameter As ObjectParameter = If(codigo_DevolucionesPanol IsNot Nothing, New ObjectParameter("codigo_DevolucionesPanol", codigo_DevolucionesPanol), New ObjectParameter("codigo_DevolucionesPanol", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroDevolucionesPanol", codigo_DevolucionesPanolParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroDevolucionesProveedor(codigo_DevolucionesProveedor As String) As Integer
        Dim codigo_DevolucionesProveedorParameter As ObjectParameter = If(codigo_DevolucionesProveedor IsNot Nothing, New ObjectParameter("codigo_DevolucionesProveedor", codigo_DevolucionesProveedor), New ObjectParameter("codigo_DevolucionesProveedor", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroDevolucionesProveedor", codigo_DevolucionesProveedorParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroFamilias(codigo_Familias As String) As ObjectResult(Of sp_rpt_MaestroFamilias_Result)
        Dim codigo_FamiliasParameter As ObjectParameter = If(codigo_Familias IsNot Nothing, New ObjectParameter("codigo_Familias", codigo_Familias), New ObjectParameter("codigo_Familias", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_rpt_MaestroFamilias_Result)("sp_rpt_MaestroFamilias", codigo_FamiliasParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroGerencias(codigo_Gerencias As String) As Integer
        Dim codigo_GerenciasParameter As ObjectParameter = If(codigo_Gerencias IsNot Nothing, New ObjectParameter("codigo_Gerencias", codigo_Gerencias), New ObjectParameter("codigo_Gerencias", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroGerencias", codigo_GerenciasParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroMotivos_Mov(codigo_Motivos_Mov As String) As ObjectResult(Of sp_rpt_MaestroMotivos_Mov_Result)
        Dim codigo_Motivos_MovParameter As ObjectParameter = If(codigo_Motivos_Mov IsNot Nothing, New ObjectParameter("codigo_Motivos_Mov", codigo_Motivos_Mov), New ObjectParameter("codigo_Motivos_Mov", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_rpt_MaestroMotivos_Mov_Result)("sp_rpt_MaestroMotivos_Mov", codigo_Motivos_MovParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroPerfiles() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroPerfiles")
    End Function

    Public Overridable Function sp_rpt_MaestroPerfiles_Accesos(codigo_Perfiles_Accesos As String) As Integer
        Dim codigo_Perfiles_AccesosParameter As ObjectParameter = If(codigo_Perfiles_Accesos IsNot Nothing, New ObjectParameter("codigo_Perfiles_Accesos", codigo_Perfiles_Accesos), New ObjectParameter("codigo_Perfiles_Accesos", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroPerfiles_Accesos", codigo_Perfiles_AccesosParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroPresupuesto(codigo_Presupuesto As String) As Integer
        Dim codigo_PresupuestoParameter As ObjectParameter = If(codigo_Presupuesto IsNot Nothing, New ObjectParameter("codigo_Presupuesto", codigo_Presupuesto), New ObjectParameter("codigo_Presupuesto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroPresupuesto", codigo_PresupuestoParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroPresupuesto_Det(codigo_Presupuesto_Det As String) As Integer
        Dim codigo_Presupuesto_DetParameter As ObjectParameter = If(codigo_Presupuesto_Det IsNot Nothing, New ObjectParameter("codigo_Presupuesto_Det", codigo_Presupuesto_Det), New ObjectParameter("codigo_Presupuesto_Det", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroPresupuesto_Det", codigo_Presupuesto_DetParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroProyectos(codigo_Proyectos As String) As ObjectResult(Of sp_rpt_MaestroProyectos_Result)
        Dim codigo_ProyectosParameter As ObjectParameter = If(codigo_Proyectos IsNot Nothing, New ObjectParameter("codigo_Proyectos", codigo_Proyectos), New ObjectParameter("codigo_Proyectos", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_rpt_MaestroProyectos_Result)("sp_rpt_MaestroProyectos", codigo_ProyectosParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroRecepcion2(codigo_Recepcion As String, codigo_material As String, fecha_ini As Nullable(Of Date), fecha_fin As Nullable(Of Date)) As ObjectResult(Of sp_rpt_MaestroRecepcion2_Result)
        Dim codigo_RecepcionParameter As ObjectParameter = If(codigo_Recepcion IsNot Nothing, New ObjectParameter("codigo_Recepcion", codigo_Recepcion), New ObjectParameter("codigo_Recepcion", GetType(String)))

        Dim codigo_materialParameter As ObjectParameter = If(codigo_material IsNot Nothing, New ObjectParameter("codigo_material", codigo_material), New ObjectParameter("codigo_material", GetType(String)))

        Dim fecha_iniParameter As ObjectParameter = If(fecha_ini.HasValue, New ObjectParameter("fecha_ini", fecha_ini), New ObjectParameter("fecha_ini", GetType(Date)))

        Dim fecha_finParameter As ObjectParameter = If(fecha_fin.HasValue, New ObjectParameter("fecha_fin", fecha_fin), New ObjectParameter("fecha_fin", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_rpt_MaestroRecepcion2_Result)("sp_rpt_MaestroRecepcion2", codigo_RecepcionParameter, codigo_materialParameter, fecha_iniParameter, fecha_finParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroTipoControles(codigo_TipoControles As String) As Integer
        Dim codigo_TipoControlesParameter As ObjectParameter = If(codigo_TipoControles IsNot Nothing, New ObjectParameter("codigo_TipoControles", codigo_TipoControles), New ObjectParameter("codigo_TipoControles", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroTipoControles", codigo_TipoControlesParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroTransferencias(codigo_Transferencias As String) As Integer
        Dim codigo_TransferenciasParameter As ObjectParameter = If(codigo_Transferencias IsNot Nothing, New ObjectParameter("codigo_Transferencias", codigo_Transferencias), New ObjectParameter("codigo_Transferencias", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroTransferencias", codigo_TransferenciasParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroUnidades(codigo_Unidades As String) As ObjectResult(Of sp_rpt_MaestroUnidades_Result)
        Dim codigo_UnidadesParameter As ObjectParameter = If(codigo_Unidades IsNot Nothing, New ObjectParameter("codigo_Unidades", codigo_Unidades), New ObjectParameter("codigo_Unidades", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_rpt_MaestroUnidades_Result)("sp_rpt_MaestroUnidades", codigo_UnidadesParameter)
    End Function

    Public Overridable Function sp_rpt_MaestroUsuarios() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroUsuarios")
    End Function

    Public Overridable Function sp_rpt_MaestroUsuarios_Perfiles(codigo_Usuarios_Perfiles As String) As Integer
        Dim codigo_Usuarios_PerfilesParameter As ObjectParameter = If(codigo_Usuarios_Perfiles IsNot Nothing, New ObjectParameter("codigo_Usuarios_Perfiles", codigo_Usuarios_Perfiles), New ObjectParameter("codigo_Usuarios_Perfiles", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_MaestroUsuarios_Perfiles", codigo_Usuarios_PerfilesParameter)
    End Function

    Public Overridable Function sp_rpt_PlanillaInventario(codigo_familia As String, ubicacion As String) As Integer
        Dim codigo_familiaParameter As ObjectParameter = If(codigo_familia IsNot Nothing, New ObjectParameter("codigo_familia", codigo_familia), New ObjectParameter("codigo_familia", GetType(String)))

        Dim ubicacionParameter As ObjectParameter = If(ubicacion IsNot Nothing, New ObjectParameter("ubicacion", ubicacion), New ObjectParameter("ubicacion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_PlanillaInventario", codigo_familiaParameter, ubicacionParameter)
    End Function

    Public Overridable Function sp_rpt_Stock(codigo_material As String) As Integer
        Dim codigo_materialParameter As ObjectParameter = If(codigo_material IsNot Nothing, New ObjectParameter("codigo_material", codigo_material), New ObjectParameter("codigo_material", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_Stock", codigo_materialParameter)
    End Function

    Public Overridable Function sp_rpt_StockCero(codigo_material As String) As Integer
        Dim codigo_materialParameter As ObjectParameter = If(codigo_material IsNot Nothing, New ObjectParameter("codigo_material", codigo_material), New ObjectParameter("codigo_material", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_StockCero", codigo_materialParameter)
    End Function

    Public Overridable Function sp_rpt_StockMov(desde As Nullable(Of Date), hasta As Nullable(Of Date), codigo_material As String) As ObjectResult(Of sp_rpt_StockMov_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("desde", desde), New ObjectParameter("desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("hasta", hasta), New ObjectParameter("hasta", GetType(Date)))

        Dim codigo_materialParameter As ObjectParameter = If(codigo_material IsNot Nothing, New ObjectParameter("codigo_material", codigo_material), New ObjectParameter("codigo_material", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_rpt_StockMov_Result)("sp_rpt_StockMov", desdeParameter, hastaParameter, codigo_materialParameter)
    End Function

    Public Overridable Function sp_rpt_StockMov_Nuevo_con_problemas(desde As Nullable(Of Date), hasta As Nullable(Of Date), codigo_material As String, codigo_almacen As String) As Integer
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("desde", desde), New ObjectParameter("desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("hasta", hasta), New ObjectParameter("hasta", GetType(Date)))

        Dim codigo_materialParameter As ObjectParameter = If(codigo_material IsNot Nothing, New ObjectParameter("codigo_material", codigo_material), New ObjectParameter("codigo_material", GetType(String)))

        Dim codigo_almacenParameter As ObjectParameter = If(codigo_almacen IsNot Nothing, New ObjectParameter("codigo_almacen", codigo_almacen), New ObjectParameter("codigo_almacen", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_StockMov_Nuevo_con_problemas", desdeParameter, hastaParameter, codigo_materialParameter, codigo_almacenParameter)
    End Function

    Public Overridable Function sp_rpt_Vales(codigo_Consumos As String) As Integer
        Dim codigo_ConsumosParameter As ObjectParameter = If(codigo_Consumos IsNot Nothing, New ObjectParameter("codigo_Consumos", codigo_Consumos), New ObjectParameter("codigo_Consumos", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_Vales", codigo_ConsumosParameter)
    End Function

    Public Overridable Function sp_rpt_Vales_Automatico(codigo_Consumos As String) As Integer
        Dim codigo_ConsumosParameter As ObjectParameter = If(codigo_Consumos IsNot Nothing, New ObjectParameter("codigo_Consumos", codigo_Consumos), New ObjectParameter("codigo_Consumos", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_rpt_Vales_Automatico", codigo_ConsumosParameter)
    End Function

    Public Overridable Function sp_statusCopiar(idStock As Nullable(Of Long), reglas As String, statusQM_Stock As String, user As Nullable(Of Integer)) As Integer
        Dim idStockParameter As ObjectParameter = If(idStock.HasValue, New ObjectParameter("idStock", idStock), New ObjectParameter("idStock", GetType(Long)))

        Dim reglasParameter As ObjectParameter = If(reglas IsNot Nothing, New ObjectParameter("reglas", reglas), New ObjectParameter("reglas", GetType(String)))

        Dim statusQM_StockParameter As ObjectParameter = If(statusQM_Stock IsNot Nothing, New ObjectParameter("StatusQM_Stock", statusQM_Stock), New ObjectParameter("StatusQM_Stock", GetType(String)))

        Dim userParameter As ObjectParameter = If(user.HasValue, New ObjectParameter("user", user), New ObjectParameter("user", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_statusCopiar", idStockParameter, reglasParameter, statusQM_StockParameter, userParameter)
    End Function

    Public Overridable Function sp_Stock_Cambio_Status(idpropio As Nullable(Of Long), status As String, userupd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idpropioParameter As ObjectParameter = If(idpropio.HasValue, New ObjectParameter("idpropio", idpropio), New ObjectParameter("idpropio", GetType(Long)))

        Dim statusParameter As ObjectParameter = If(status IsNot Nothing, New ObjectParameter("Status", status), New ObjectParameter("Status", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Stock_Cambio_Status", idpropioParameter, statusParameter, userupdParameter, res)
    End Function

    Public Overridable Function sp_Stock_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Stock_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function sp_Stock_Insert(id As ObjectParameter, idAlmacen As Nullable(Of Long), idmaterial As String, qty As Nullable(Of Decimal), idunidad As String, status As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idAlmacenParameter As ObjectParameter = If(idAlmacen.HasValue, New ObjectParameter("IdAlmacen", idAlmacen), New ObjectParameter("IdAlmacen", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial IsNot Nothing, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(String)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad IsNot Nothing, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(String)))

        Dim statusParameter As ObjectParameter = If(status IsNot Nothing, New ObjectParameter("status", status), New ObjectParameter("status", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Stock_Insert", id, idAlmacenParameter, idmaterialParameter, qtyParameter, idunidadParameter, statusParameter, useraddParameter, res)
    End Function

    Public Overridable Function sp_Stock_Select_All() As ObjectResult(Of sp_Stock_Select_All_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Stock_Select_All_Result)("sp_Stock_Select_All")
    End Function

    Public Overridable Function sp_Stock_Select_By_ID(iD As Nullable(Of Long)) As ObjectResult(Of sp_Stock_Select_By_ID_Result)
        Dim iDParameter As ObjectParameter = If(iD.HasValue, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Stock_Select_By_ID_Result)("sp_Stock_Select_By_ID", iDParameter)
    End Function

    Public Overridable Function sp_Transferencias_Delete_All(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Transferencias_Delete_All", idParameter, userdelParameter, res, mensaje)
    End Function

    Public Overridable Function sp_Transferencias_Det_Insert(id As ObjectParameter, codigo As ObjectParameter, idtransferencia As Nullable(Of Long), qty As Nullable(Of Decimal), idmaterial As Nullable(Of Long), idunidad As Nullable(Of Long), idalmacen_origen As Nullable(Of Long), lote As Nullable(Of Long), idalmacen_destino As Nullable(Of Long), useradd As Nullable(Of Long), res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim idtransferenciaParameter As ObjectParameter = If(idtransferencia.HasValue, New ObjectParameter("idtransferencia", idtransferencia), New ObjectParameter("idtransferencia", GetType(Long)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim idalmacen_origenParameter As ObjectParameter = If(idalmacen_origen.HasValue, New ObjectParameter("idalmacen_origen", idalmacen_origen), New ObjectParameter("idalmacen_origen", GetType(Long)))

        Dim loteParameter As ObjectParameter = If(lote.HasValue, New ObjectParameter("lote", lote), New ObjectParameter("lote", GetType(Long)))

        Dim idalmacen_destinoParameter As ObjectParameter = If(idalmacen_destino.HasValue, New ObjectParameter("idalmacen_destino", idalmacen_destino), New ObjectParameter("idalmacen_destino", GetType(Long)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Transferencias_Det_Insert", id, codigo, idtransferenciaParameter, qtyParameter, idmaterialParameter, idunidadParameter, idalmacen_origenParameter, loteParameter, idalmacen_destinoParameter, useraddParameter, res, mensaje)
    End Function

    Public Overridable Function sp_Transferencias_Det_Select_By_IDTransferencia(iDTransferencia As Nullable(Of Long)) As Integer
        Dim iDTransferenciaParameter As ObjectParameter = If(iDTransferencia.HasValue, New ObjectParameter("IDTransferencia", iDTransferencia), New ObjectParameter("IDTransferencia", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Transferencias_Det_Select_By_IDTransferencia", iDTransferenciaParameter)
    End Function

    Public Overridable Function sp_Transferencias_Insert(id As ObjectParameter, codigo As ObjectParameter, fecha As Nullable(Of Date), idalmacenorigen As Nullable(Of Long), idalmacendestino As Nullable(Of Long), observaciones As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim idalmacenorigenParameter As ObjectParameter = If(idalmacenorigen.HasValue, New ObjectParameter("idalmacenorigen", idalmacenorigen), New ObjectParameter("idalmacenorigen", GetType(Long)))

        Dim idalmacendestinoParameter As ObjectParameter = If(idalmacendestino.HasValue, New ObjectParameter("idalmacendestino", idalmacendestino), New ObjectParameter("idalmacendestino", GetType(Long)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("observaciones", observaciones), New ObjectParameter("observaciones", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Transferencias_Insert", id, codigo, fechaParameter, idalmacenorigenParameter, idalmacendestinoParameter, observacionesParameter, useraddParameter, res)
    End Function

    Public Overridable Function sp_Transferencias_Select_All() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Transferencias_Select_All")
    End Function

    Public Overridable Function sp_upgraddiagrams() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_upgraddiagrams")
    End Function

    Public Overridable Function sp_ValesSinImprimir(cantidad As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_ValesSinImprimir", cantidad)
    End Function

    Public Overridable Function spActualizar_PrecioPorLista(codigo As Nullable(Of Double), principal As Nullable(Of Boolean), peron As Nullable(Of Boolean), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo.HasValue, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(Double)))

        Dim principalParameter As ObjectParameter = If(principal.HasValue, New ObjectParameter("Principal", principal), New ObjectParameter("Principal", GetType(Boolean)))

        Dim peronParameter As ObjectParameter = If(peron.HasValue, New ObjectParameter("Peron", peron), New ObjectParameter("Peron", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spActualizar_PrecioPorLista", codigoParameter, principalParameter, peronParameter, res)
    End Function

    Public Overridable Function spAjustes_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAjustes_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spAjustes_Delete_All(idAjuste As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim idAjusteParameter As ObjectParameter = If(idAjuste.HasValue, New ObjectParameter("idAjuste", idAjuste), New ObjectParameter("idAjuste", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAjustes_Delete_All", idAjusteParameter, userdelParameter, res, mensaje)
    End Function

    Public Overridable Function spAjustes_Det_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAjustes_Det_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spAjustes_Det_Insert(id As ObjectParameter, codigo As ObjectParameter, idajuste As Nullable(Of Long), idmaterial As String, qty As Nullable(Of Decimal), idunidad As String, idmotivo As Nullable(Of Long), nota As String, codBarra As String, pasillo As String, estante As String, fila As String, useradd As Nullable(Of Long), actualizarUbicacion As Nullable(Of Boolean), idalmacen As Nullable(Of Long), idStockMov As ObjectParameter, comprob As ObjectParameter, stock As ObjectParameter, res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim idajusteParameter As ObjectParameter = If(idajuste.HasValue, New ObjectParameter("idajuste", idajuste), New ObjectParameter("idajuste", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial IsNot Nothing, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(String)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad IsNot Nothing, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(String)))

        Dim idmotivoParameter As ObjectParameter = If(idmotivo.HasValue, New ObjectParameter("idmotivo", idmotivo), New ObjectParameter("idmotivo", GetType(Long)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim codBarraParameter As ObjectParameter = If(codBarra IsNot Nothing, New ObjectParameter("CodBarra", codBarra), New ObjectParameter("CodBarra", GetType(String)))

        Dim pasilloParameter As ObjectParameter = If(pasillo IsNot Nothing, New ObjectParameter("Pasillo", pasillo), New ObjectParameter("Pasillo", GetType(String)))

        Dim estanteParameter As ObjectParameter = If(estante IsNot Nothing, New ObjectParameter("Estante", estante), New ObjectParameter("Estante", GetType(String)))

        Dim filaParameter As ObjectParameter = If(fila IsNot Nothing, New ObjectParameter("Fila", fila), New ObjectParameter("Fila", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Dim actualizarUbicacionParameter As ObjectParameter = If(actualizarUbicacion.HasValue, New ObjectParameter("ActualizarUbicacion", actualizarUbicacion), New ObjectParameter("ActualizarUbicacion", GetType(Boolean)))

        Dim idalmacenParameter As ObjectParameter = If(idalmacen.HasValue, New ObjectParameter("idalmacen", idalmacen), New ObjectParameter("idalmacen", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAjustes_Det_Insert", id, codigo, idajusteParameter, idmaterialParameter, qtyParameter, idunidadParameter, idmotivoParameter, notaParameter, codBarraParameter, pasilloParameter, estanteParameter, filaParameter, useraddParameter, actualizarUbicacionParameter, idalmacenParameter, idStockMov, comprob, stock, res, mensaje)
    End Function

    Public Overridable Function spAjustes_Det_Select_All() As ObjectResult(Of spAjustes_Det_Select_All_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAjustes_Det_Select_All_Result)("spAjustes_Det_Select_All")
    End Function

    Public Overridable Function spAjustes_Det_Select_All_Porkys(idAlmacen As Nullable(Of Long)) As ObjectResult(Of spAjustes_Det_Select_All_Porkys_Result)
        Dim idAlmacenParameter As ObjectParameter = If(idAlmacen.HasValue, New ObjectParameter("idAlmacen", idAlmacen), New ObjectParameter("idAlmacen", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAjustes_Det_Select_All_Porkys_Result)("spAjustes_Det_Select_All_Porkys", idAlmacenParameter)
    End Function

    Public Overridable Function spAjustes_Det_Select_By_IDAjuste(iDAjuste As Nullable(Of Long), iDAlmacen As Nullable(Of Long)) As ObjectResult(Of spAjustes_Det_Select_By_IDAjuste_Result)
        Dim iDAjusteParameter As ObjectParameter = If(iDAjuste.HasValue, New ObjectParameter("IDAjuste", iDAjuste), New ObjectParameter("IDAjuste", GetType(Long)))

        Dim iDAlmacenParameter As ObjectParameter = If(iDAlmacen.HasValue, New ObjectParameter("IDAlmacen", iDAlmacen), New ObjectParameter("IDAlmacen", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAjustes_Det_Select_By_IDAjuste_Result)("spAjustes_Det_Select_By_IDAjuste", iDAjusteParameter, iDAlmacenParameter)
    End Function

    Public Overridable Function spAjustes_Det_Select_By_Nombre(busqueda As String) As Integer
        Dim busquedaParameter As ObjectParameter = If(busqueda IsNot Nothing, New ObjectParameter("Busqueda", busqueda), New ObjectParameter("Busqueda", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAjustes_Det_Select_By_Nombre", busquedaParameter)
    End Function

    Public Overridable Function spAjustes_Det_Select_By_RubroSubrubro(idRubro As Nullable(Of Long), idSubrubro As Nullable(Of Long)) As Integer
        Dim idRubroParameter As ObjectParameter = If(idRubro.HasValue, New ObjectParameter("IdRubro", idRubro), New ObjectParameter("IdRubro", GetType(Long)))

        Dim idSubrubroParameter As ObjectParameter = If(idSubrubro.HasValue, New ObjectParameter("IdSubrubro", idSubrubro), New ObjectParameter("IdSubrubro", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAjustes_Det_Select_By_RubroSubrubro", idRubroParameter, idSubrubroParameter)
    End Function

    Public Overridable Function spAjustes_Det_Update(id As Nullable(Of Long), codigo As String, idajuste As Nullable(Of Long), idmaterial As Nullable(Of Long), lote As Nullable(Of Long), qty As Nullable(Of Decimal), idunidad As Nullable(Of Long), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim idajusteParameter As ObjectParameter = If(idajuste.HasValue, New ObjectParameter("idajuste", idajuste), New ObjectParameter("idajuste", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim loteParameter As ObjectParameter = If(lote.HasValue, New ObjectParameter("lote", lote), New ObjectParameter("lote", GetType(Long)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAjustes_Det_Update", idParameter, codigoParameter, idajusteParameter, idmaterialParameter, loteParameter, qtyParameter, idunidadParameter, userupdParameter, res)
    End Function

    Public Overridable Function spAjustes_Insert(id As ObjectParameter, codigo As ObjectParameter, fecha As Nullable(Of Date), idalmacen As Nullable(Of Long), idmotivo As Nullable(Of Long), nota As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim idalmacenParameter As ObjectParameter = If(idalmacen.HasValue, New ObjectParameter("idalmacen", idalmacen), New ObjectParameter("idalmacen", GetType(Long)))

        Dim idmotivoParameter As ObjectParameter = If(idmotivo.HasValue, New ObjectParameter("idmotivo", idmotivo), New ObjectParameter("idmotivo", GetType(Long)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAjustes_Insert", id, codigo, fechaParameter, idalmacenParameter, idmotivoParameter, notaParameter, useraddParameter, res)
    End Function

    Public Overridable Function spAjustes_Select_All() As ObjectResult(Of spAjustes_Select_All_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAjustes_Select_All_Result)("spAjustes_Select_All")
    End Function

    Public Overridable Function spAjustes_Update(id As Nullable(Of Long), codigo As String, fecha As Nullable(Of Date), idalmacen As Nullable(Of Long), nota As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim idalmacenParameter As ObjectParameter = If(idalmacen.HasValue, New ObjectParameter("idalmacen", idalmacen), New ObjectParameter("idalmacen", GetType(Long)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAjustes_Update", idParameter, codigoParameter, fechaParameter, idalmacenParameter, notaParameter, userupdParameter, res)
    End Function

    Public Overridable Function spAlmacenes_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAlmacenes_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spAlmacenes_Insert(id As ObjectParameter, codigo As Nullable(Of Double), nombre As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo.HasValue, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(Double)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAlmacenes_Insert", id, codigoParameter, nombreParameter, useraddParameter, res)
    End Function

    Public Overridable Function spAlmacenes_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spAlmacenes_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAlmacenes_Select_All_Result)("spAlmacenes_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spAlmacenes_Update(id As Nullable(Of Long), codigo As Nullable(Of Double), nombre As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo.HasValue, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(Double)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAlmacenes_Update", idParameter, codigoParameter, nombreParameter, userupdParameter, res)
    End Function

    Public Overridable Function spAnticiposIngresosDeposito_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAnticiposIngresosDeposito_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spAnticiposIngresosDeposito_Insert(id As ObjectParameter, codigo As ObjectParameter, idalmacen As Nullable(Of Long), idcliente As String, fecha As Nullable(Of Date), monto As Nullable(Of Decimal), nota As String, anticipo As Nullable(Of Boolean), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idalmacenParameter As ObjectParameter = If(idalmacen.HasValue, New ObjectParameter("idalmacen", idalmacen), New ObjectParameter("idalmacen", GetType(Long)))

        Dim idclienteParameter As ObjectParameter = If(idcliente IsNot Nothing, New ObjectParameter("idcliente", idcliente), New ObjectParameter("idcliente", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("monto", monto), New ObjectParameter("monto", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim anticipoParameter As ObjectParameter = If(anticipo.HasValue, New ObjectParameter("anticipo", anticipo), New ObjectParameter("anticipo", GetType(Boolean)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAnticiposIngresosDeposito_Insert", id, codigo, idalmacenParameter, idclienteParameter, fechaParameter, montoParameter, notaParameter, anticipoParameter, useraddParameter, res)
    End Function

    Public Overridable Function spAnticiposIngresosDeposito_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spAnticiposIngresosDeposito_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAnticiposIngresosDeposito_Select_All_Result)("spAnticiposIngresosDeposito_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spAnticiposIngresosDeposito_Update(id As Nullable(Of Long), codigo As String, idalmacen As Nullable(Of Long), idcliente As String, fecha As Nullable(Of Date), monto As Nullable(Of Decimal), nota As String, anticipo As Nullable(Of Boolean), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim idalmacenParameter As ObjectParameter = If(idalmacen.HasValue, New ObjectParameter("idalmacen", idalmacen), New ObjectParameter("idalmacen", GetType(Long)))

        Dim idclienteParameter As ObjectParameter = If(idcliente IsNot Nothing, New ObjectParameter("idcliente", idcliente), New ObjectParameter("idcliente", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("monto", monto), New ObjectParameter("monto", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim anticipoParameter As ObjectParameter = If(anticipo.HasValue, New ObjectParameter("anticipo", anticipo), New ObjectParameter("anticipo", GetType(Boolean)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAnticiposIngresosDeposito_Update", idParameter, codigoParameter, idalmacenParameter, idclienteParameter, fechaParameter, montoParameter, notaParameter, anticipoParameter, userupdParameter, res)
    End Function

    Public Overridable Function spAsistencias_CalculoHorasTrabajas(idAsistencia As Nullable(Of Long)) As ObjectResult(Of spAsistencias_CalculoHorasTrabajas_Result)
        Dim idAsistenciaParameter As ObjectParameter = If(idAsistencia.HasValue, New ObjectParameter("IdAsistencia", idAsistencia), New ObjectParameter("IdAsistencia", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAsistencias_CalculoHorasTrabajas_Result)("spAsistencias_CalculoHorasTrabajas", idAsistenciaParameter)
    End Function

    Public Overridable Function spAsistencias_CalculoHorasTrabajas_xEmpleado(idEmpleado As Nullable(Of Long), periodo As String) As Integer
        Dim idEmpleadoParameter As ObjectParameter = If(idEmpleado.HasValue, New ObjectParameter("IdEmpleado", idEmpleado), New ObjectParameter("IdEmpleado", GetType(Long)))

        Dim periodoParameter As ObjectParameter = If(periodo IsNot Nothing, New ObjectParameter("Periodo", periodo), New ObjectParameter("Periodo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAsistencias_CalculoHorasTrabajas_xEmpleado", idEmpleadoParameter, periodoParameter)
    End Function

    Public Overridable Function spAsistencias_Consolidaciones_Update(idAsistencia As Nullable(Of Long), idConsolidacion As Nullable(Of Long), horas_Normales As Nullable(Of Decimal), horas_Extras_50 As Nullable(Of Decimal), horas_Extras_100 As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idAsistenciaParameter As ObjectParameter = If(idAsistencia.HasValue, New ObjectParameter("IdAsistencia", idAsistencia), New ObjectParameter("IdAsistencia", GetType(Long)))

        Dim idConsolidacionParameter As ObjectParameter = If(idConsolidacion.HasValue, New ObjectParameter("IdConsolidacion", idConsolidacion), New ObjectParameter("IdConsolidacion", GetType(Long)))

        Dim horas_NormalesParameter As ObjectParameter = If(horas_Normales.HasValue, New ObjectParameter("Horas_Normales", horas_Normales), New ObjectParameter("Horas_Normales", GetType(Decimal)))

        Dim horas_Extras_50Parameter As ObjectParameter = If(horas_Extras_50.HasValue, New ObjectParameter("Horas_Extras_50", horas_Extras_50), New ObjectParameter("Horas_Extras_50", GetType(Decimal)))

        Dim horas_Extras_100Parameter As ObjectParameter = If(horas_Extras_100.HasValue, New ObjectParameter("Horas_Extras_100", horas_Extras_100), New ObjectParameter("Horas_Extras_100", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAsistencias_Consolidaciones_Update", idAsistenciaParameter, idConsolidacionParameter, horas_NormalesParameter, horas_Extras_50Parameter, horas_Extras_100Parameter, res)
    End Function

    Public Overridable Function spAsistencias_Empleados_IngresoEgreso(dni As Nullable(Of Long), empleado As ObjectParameter, jornada As ObjectParameter, fecha As ObjectParameter, hora As ObjectParameter, mensaje As ObjectParameter, res As ObjectParameter) As Integer
        Dim dniParameter As ObjectParameter = If(dni.HasValue, New ObjectParameter("Dni", dni), New ObjectParameter("Dni", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAsistencias_Empleados_IngresoEgreso", dniParameter, empleado, jornada, fecha, hora, mensaje, res)
    End Function

    Public Overridable Function spAsistencias_Empleados_Insert(idEmpleado As Nullable(Of Long), fecha As Nullable(Of Date), horaIngreso As Nullable(Of System.TimeSpan), horaEgreso As Nullable(Of System.TimeSpan), res As ObjectParameter) As Integer
        Dim idEmpleadoParameter As ObjectParameter = If(idEmpleado.HasValue, New ObjectParameter("IdEmpleado", idEmpleado), New ObjectParameter("IdEmpleado", GetType(Long)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim horaIngresoParameter As ObjectParameter = If(horaIngreso.HasValue, New ObjectParameter("HoraIngreso", horaIngreso), New ObjectParameter("HoraIngreso", GetType(System.TimeSpan)))

        Dim horaEgresoParameter As ObjectParameter = If(horaEgreso.HasValue, New ObjectParameter("HoraEgreso", horaEgreso), New ObjectParameter("HoraEgreso", GetType(System.TimeSpan)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAsistencias_Empleados_Insert", idEmpleadoParameter, fechaParameter, horaIngresoParameter, horaEgresoParameter, res)
    End Function

    Public Overridable Function spAsistencias_Empleados_Update(idAsistencia As Nullable(Of Long), hora_Ingreso As Nullable(Of System.TimeSpan), hora_egreso As Nullable(Of System.TimeSpan), llegadaTarde As Nullable(Of Boolean), justificada As Nullable(Of Boolean), hsNormales As Nullable(Of Decimal), hsExtra50 As Nullable(Of Decimal), hsExtra100 As Nullable(Of Decimal), nota As String, res As ObjectParameter) As Integer
        Dim idAsistenciaParameter As ObjectParameter = If(idAsistencia.HasValue, New ObjectParameter("IdAsistencia", idAsistencia), New ObjectParameter("IdAsistencia", GetType(Long)))

        Dim hora_IngresoParameter As ObjectParameter = If(hora_Ingreso.HasValue, New ObjectParameter("Hora_Ingreso", hora_Ingreso), New ObjectParameter("Hora_Ingreso", GetType(System.TimeSpan)))

        Dim hora_egresoParameter As ObjectParameter = If(hora_egreso.HasValue, New ObjectParameter("Hora_egreso", hora_egreso), New ObjectParameter("Hora_egreso", GetType(System.TimeSpan)))

        Dim llegadaTardeParameter As ObjectParameter = If(llegadaTarde.HasValue, New ObjectParameter("LlegadaTarde", llegadaTarde), New ObjectParameter("LlegadaTarde", GetType(Boolean)))

        Dim justificadaParameter As ObjectParameter = If(justificada.HasValue, New ObjectParameter("Justificada", justificada), New ObjectParameter("Justificada", GetType(Boolean)))

        Dim hsNormalesParameter As ObjectParameter = If(hsNormales.HasValue, New ObjectParameter("HsNormales", hsNormales), New ObjectParameter("HsNormales", GetType(Decimal)))

        Dim hsExtra50Parameter As ObjectParameter = If(hsExtra50.HasValue, New ObjectParameter("HsExtra50", hsExtra50), New ObjectParameter("HsExtra50", GetType(Decimal)))

        Dim hsExtra100Parameter As ObjectParameter = If(hsExtra100.HasValue, New ObjectParameter("HsExtra100", hsExtra100), New ObjectParameter("HsExtra100", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAsistencias_Empleados_Update", idAsistenciaParameter, hora_IngresoParameter, hora_egresoParameter, llegadaTardeParameter, justificadaParameter, hsNormalesParameter, hsExtra50Parameter, hsExtra100Parameter, notaParameter, res)
    End Function

    Public Overridable Function spAsistencias_Empleados_Update_SoloHoras(idAsistencia As Nullable(Of Long), hora_Ingreso As Nullable(Of System.TimeSpan), hora_egreso As Nullable(Of System.TimeSpan), res As ObjectParameter) As Integer
        Dim idAsistenciaParameter As ObjectParameter = If(idAsistencia.HasValue, New ObjectParameter("IdAsistencia", idAsistencia), New ObjectParameter("IdAsistencia", GetType(Long)))

        Dim hora_IngresoParameter As ObjectParameter = If(hora_Ingreso.HasValue, New ObjectParameter("Hora_Ingreso", hora_Ingreso), New ObjectParameter("Hora_Ingreso", GetType(System.TimeSpan)))

        Dim hora_egresoParameter As ObjectParameter = If(hora_egreso.HasValue, New ObjectParameter("Hora_egreso", hora_egreso), New ObjectParameter("Hora_egreso", GetType(System.TimeSpan)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAsistencias_Empleados_Update_SoloHoras", idAsistenciaParameter, hora_IngresoParameter, hora_egresoParameter, res)
    End Function

    Public Overridable Function spAsistencias_Select_by_IdEmpleado(idEmpleado As Nullable(Of Long), periodo As String, modo As Nullable(Of Boolean), idConsolidacion As Nullable(Of Long)) As ObjectResult(Of spAsistencias_Select_by_IdEmpleado_Result)
        Dim idEmpleadoParameter As ObjectParameter = If(idEmpleado.HasValue, New ObjectParameter("IdEmpleado", idEmpleado), New ObjectParameter("IdEmpleado", GetType(Long)))

        Dim periodoParameter As ObjectParameter = If(periodo IsNot Nothing, New ObjectParameter("Periodo", periodo), New ObjectParameter("Periodo", GetType(String)))

        Dim modoParameter As ObjectParameter = If(modo.HasValue, New ObjectParameter("Modo", modo), New ObjectParameter("Modo", GetType(Boolean)))

        Dim idConsolidacionParameter As ObjectParameter = If(idConsolidacion.HasValue, New ObjectParameter("IdConsolidacion", idConsolidacion), New ObjectParameter("IdConsolidacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAsistencias_Select_by_IdEmpleado_Result)("spAsistencias_Select_by_IdEmpleado", idEmpleadoParameter, periodoParameter, modoParameter, idConsolidacionParameter)
    End Function

    Public Overridable Function spBalanzas_Exportar_Precios(mayo As Nullable(Of Boolean), res As ObjectParameter) As ObjectResult(Of spBalanzas_Exportar_Precios_Result)
        Dim mayoParameter As ObjectParameter = If(mayo.HasValue, New ObjectParameter("Mayo", mayo), New ObjectParameter("Mayo", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spBalanzas_Exportar_Precios_Result)("spBalanzas_Exportar_Precios", mayoParameter, res)
    End Function

    Public Overridable Function spBalanzas_Exportar_Precios_CF(res As ObjectParameter) As ObjectResult(Of spBalanzas_Exportar_Precios_CF_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spBalanzas_Exportar_Precios_CF_Result)("spBalanzas_Exportar_Precios_CF", res)
    End Function

    Public Overridable Function spBalanzas_Exportar_Precios_Mayo(res As ObjectParameter) As ObjectResult(Of spBalanzas_Exportar_Precios_Mayo_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spBalanzas_Exportar_Precios_Mayo_Result)("spBalanzas_Exportar_Precios_Mayo", res)
    End Function

    Public Overridable Function spBalanzas_Exportar_Secciones(res As ObjectParameter) As ObjectResult(Of spBalanzas_Exportar_Secciones_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spBalanzas_Exportar_Secciones_Result)("spBalanzas_Exportar_Secciones", res)
    End Function

    Public Overridable Function spBuscarDatosMaterialPorID(id As Nullable(Of Long), codigo As ObjectParameter, nombre As ObjectParameter, idunidad As ObjectParameter, res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spBuscarDatosMaterialPorID", idParameter, codigo, nombre, idunidad, res)
    End Function

    Public Overridable Function spBuscarIdPorCodigo(codigocc As String, codigousuario As String, idcc As ObjectParameter, idusuario As ObjectParameter, res As ObjectParameter) As Integer
        Dim codigoccParameter As ObjectParameter = If(codigocc IsNot Nothing, New ObjectParameter("codigocc", codigocc), New ObjectParameter("codigocc", GetType(String)))

        Dim codigousuarioParameter As ObjectParameter = If(codigousuario IsNot Nothing, New ObjectParameter("codigousuario", codigousuario), New ObjectParameter("codigousuario", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spBuscarIdPorCodigo", codigoccParameter, codigousuarioParameter, idcc, idusuario, res)
    End Function

    Public Overridable Function spBuscarMaterial(tabla As String, codMaterial As String) As Integer
        Dim tablaParameter As ObjectParameter = If(tabla IsNot Nothing, New ObjectParameter("Tabla", tabla), New ObjectParameter("Tabla", GetType(String)))

        Dim codMaterialParameter As ObjectParameter = If(codMaterial IsNot Nothing, New ObjectParameter("CodMaterial", codMaterial), New ObjectParameter("CodMaterial", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spBuscarMaterial", tablaParameter, codMaterialParameter)
    End Function

    Public Overridable Function spCalcular_NumeroPedidoWEB(oRDENPEDIDO As ObjectParameter, dEVOLUCION As Nullable(Of Boolean), res As ObjectParameter) As Integer
        Dim dEVOLUCIONParameter As ObjectParameter = If(dEVOLUCION.HasValue, New ObjectParameter("DEVOLUCION", dEVOLUCION), New ObjectParameter("DEVOLUCION", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCalcular_NumeroPedidoWEB", oRDENPEDIDO, dEVOLUCIONParameter, res)
    End Function

    Public Overridable Function spChequeras_Insert(id As ObjectParameter, nrocheque As Nullable(Of Long), banco As String, useradd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim nrochequeParameter As ObjectParameter = If(nrocheque.HasValue, New ObjectParameter("nrocheque", nrocheque), New ObjectParameter("nrocheque", GetType(Long)))

        Dim bancoParameter As ObjectParameter = If(banco IsNot Nothing, New ObjectParameter("Banco", banco), New ObjectParameter("Banco", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spChequeras_Insert", id, nrochequeParameter, bancoParameter, useraddParameter, res)
    End Function

    Public Overridable Function spCheques_Delete(id As Nullable(Of Long), userDel As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim userDelParameter As ObjectParameter = If(userDel.HasValue, New ObjectParameter("UserDel", userDel), New ObjectParameter("UserDel", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCheques_Delete", idParameter, userDelParameter, res)
    End Function

    Public Overridable Function spCheques_EliminarItems(idIngreso As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCheques_EliminarItems", idIngresoParameter, res)
    End Function

    Public Overridable Function spCheques_Ingreso_TMP(idIngreso As Nullable(Of Long), idCheque As Nullable(Of Long)) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim idChequeParameter As ObjectParameter = If(idCheque.HasValue, New ObjectParameter("IdCheque", idCheque), New ObjectParameter("IdCheque", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCheques_Ingreso_TMP", idIngresoParameter, idChequeParameter)
    End Function

    Public Overridable Function spCheques_Insert(id As Nullable(Of Long), nrocheque As Nullable(Of Long), clienteChequeBco As String, fechaCobro As Nullable(Of Date), monto As Nullable(Of Decimal), banco As String, observaciones As String, utilizado As Nullable(Of Boolean), useradd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim nrochequeParameter As ObjectParameter = If(nrocheque.HasValue, New ObjectParameter("nrocheque", nrocheque), New ObjectParameter("nrocheque", GetType(Long)))

        Dim clienteChequeBcoParameter As ObjectParameter = If(clienteChequeBco IsNot Nothing, New ObjectParameter("ClienteChequeBco", clienteChequeBco), New ObjectParameter("ClienteChequeBco", GetType(String)))

        Dim fechaCobroParameter As ObjectParameter = If(fechaCobro.HasValue, New ObjectParameter("FechaCobro", fechaCobro), New ObjectParameter("FechaCobro", GetType(Date)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Dim bancoParameter As ObjectParameter = If(banco IsNot Nothing, New ObjectParameter("Banco", banco), New ObjectParameter("Banco", GetType(String)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("Observaciones", observaciones), New ObjectParameter("Observaciones", GetType(String)))

        Dim utilizadoParameter As ObjectParameter = If(utilizado.HasValue, New ObjectParameter("Utilizado", utilizado), New ObjectParameter("Utilizado", GetType(Boolean)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCheques_Insert", idParameter, nrochequeParameter, clienteChequeBcoParameter, fechaCobroParameter, montoParameter, bancoParameter, observacionesParameter, utilizadoParameter, useraddParameter, res)
    End Function

    Public Overridable Function spCheques_Insert_Ingreso(idIngreso As Nullable(Of Long), nrocheque As Nullable(Of Long), idcliente As Nullable(Of Integer), clienteChequeBco As String, fechaCobro As Nullable(Of Date), idmoneda As Nullable(Of Long), monto As Nullable(Of Decimal), banco As String, observaciones As String, propio As Nullable(Of Boolean), useradd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim nrochequeParameter As ObjectParameter = If(nrocheque.HasValue, New ObjectParameter("nrocheque", nrocheque), New ObjectParameter("nrocheque", GetType(Long)))

        Dim idclienteParameter As ObjectParameter = If(idcliente.HasValue, New ObjectParameter("idcliente", idcliente), New ObjectParameter("idcliente", GetType(Integer)))

        Dim clienteChequeBcoParameter As ObjectParameter = If(clienteChequeBco IsNot Nothing, New ObjectParameter("ClienteChequeBco", clienteChequeBco), New ObjectParameter("ClienteChequeBco", GetType(String)))

        Dim fechaCobroParameter As ObjectParameter = If(fechaCobro.HasValue, New ObjectParameter("FechaCobro", fechaCobro), New ObjectParameter("FechaCobro", GetType(Date)))

        Dim idmonedaParameter As ObjectParameter = If(idmoneda.HasValue, New ObjectParameter("idmoneda", idmoneda), New ObjectParameter("idmoneda", GetType(Long)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Dim bancoParameter As ObjectParameter = If(banco IsNot Nothing, New ObjectParameter("Banco", banco), New ObjectParameter("Banco", GetType(String)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("Observaciones", observaciones), New ObjectParameter("Observaciones", GetType(String)))

        Dim propioParameter As ObjectParameter = If(propio.HasValue, New ObjectParameter("Propio", propio), New ObjectParameter("Propio", GetType(Boolean)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCheques_Insert_Ingreso", idIngresoParameter, nrochequeParameter, idclienteParameter, clienteChequeBcoParameter, fechaCobroParameter, idmonedaParameter, montoParameter, bancoParameter, observacionesParameter, propioParameter, useraddParameter, res)
    End Function

    Public Overridable Function spCheques_Insert2(idPago As Nullable(Of Long), nrocheque As Nullable(Of Long), idcliente As Nullable(Of Integer), clienteChequeBco As String, fechaCobro As Nullable(Of Date), idmoneda As Nullable(Of Integer), monto As Nullable(Of Decimal), banco As String, utilizado As Nullable(Of Boolean), observaciones As String, propio As Nullable(Of Boolean), useradd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim nrochequeParameter As ObjectParameter = If(nrocheque.HasValue, New ObjectParameter("nrocheque", nrocheque), New ObjectParameter("nrocheque", GetType(Long)))

        Dim idclienteParameter As ObjectParameter = If(idcliente.HasValue, New ObjectParameter("idcliente", idcliente), New ObjectParameter("idcliente", GetType(Integer)))

        Dim clienteChequeBcoParameter As ObjectParameter = If(clienteChequeBco IsNot Nothing, New ObjectParameter("ClienteChequeBco", clienteChequeBco), New ObjectParameter("ClienteChequeBco", GetType(String)))

        Dim fechaCobroParameter As ObjectParameter = If(fechaCobro.HasValue, New ObjectParameter("FechaCobro", fechaCobro), New ObjectParameter("FechaCobro", GetType(Date)))

        Dim idmonedaParameter As ObjectParameter = If(idmoneda.HasValue, New ObjectParameter("idmoneda", idmoneda), New ObjectParameter("idmoneda", GetType(Integer)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Dim bancoParameter As ObjectParameter = If(banco IsNot Nothing, New ObjectParameter("Banco", banco), New ObjectParameter("Banco", GetType(String)))

        Dim utilizadoParameter As ObjectParameter = If(utilizado.HasValue, New ObjectParameter("Utilizado", utilizado), New ObjectParameter("Utilizado", GetType(Boolean)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("Observaciones", observaciones), New ObjectParameter("Observaciones", GetType(String)))

        Dim propioParameter As ObjectParameter = If(propio.HasValue, New ObjectParameter("Propio", propio), New ObjectParameter("Propio", GetType(Boolean)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCheques_Insert2", idPagoParameter, nrochequeParameter, idclienteParameter, clienteChequeBcoParameter, fechaCobroParameter, idmonedaParameter, montoParameter, bancoParameter, utilizadoParameter, observacionesParameter, propioParameter, useraddParameter, res)
    End Function

    Public Overridable Function spCheques_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spCheques_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spCheques_Select_All_Result)("spCheques_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spCheques_Update_Ingreso(id As Nullable(Of Long), idIngreso As Nullable(Of Long), nrocheque As Nullable(Of Long), idcliente As Nullable(Of Integer), clienteChequeBco As String, fechaCobro As Nullable(Of Date), idmoneda As Nullable(Of Long), monto As Nullable(Of Decimal), banco As String, observaciones As String, propio As Nullable(Of Boolean), userupd As Nullable(Of Short), mensaje As ObjectParameter, res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim nrochequeParameter As ObjectParameter = If(nrocheque.HasValue, New ObjectParameter("nrocheque", nrocheque), New ObjectParameter("nrocheque", GetType(Long)))

        Dim idclienteParameter As ObjectParameter = If(idcliente.HasValue, New ObjectParameter("idcliente", idcliente), New ObjectParameter("idcliente", GetType(Integer)))

        Dim clienteChequeBcoParameter As ObjectParameter = If(clienteChequeBco IsNot Nothing, New ObjectParameter("ClienteChequeBco", clienteChequeBco), New ObjectParameter("ClienteChequeBco", GetType(String)))

        Dim fechaCobroParameter As ObjectParameter = If(fechaCobro.HasValue, New ObjectParameter("FechaCobro", fechaCobro), New ObjectParameter("FechaCobro", GetType(Date)))

        Dim idmonedaParameter As ObjectParameter = If(idmoneda.HasValue, New ObjectParameter("idmoneda", idmoneda), New ObjectParameter("idmoneda", GetType(Long)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Dim bancoParameter As ObjectParameter = If(banco IsNot Nothing, New ObjectParameter("Banco", banco), New ObjectParameter("Banco", GetType(String)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("Observaciones", observaciones), New ObjectParameter("Observaciones", GetType(String)))

        Dim propioParameter As ObjectParameter = If(propio.HasValue, New ObjectParameter("Propio", propio), New ObjectParameter("Propio", GetType(Boolean)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCheques_Update_Ingreso", idParameter, idIngresoParameter, nrochequeParameter, idclienteParameter, clienteChequeBcoParameter, fechaCobroParameter, idmonedaParameter, montoParameter, bancoParameter, observacionesParameter, propioParameter, userupdParameter, mensaje, res)
    End Function

    Public Overridable Function spCheques_Update_old(id As Nullable(Of Long), idIngreso As Nullable(Of Long), nrocheque As Nullable(Of Long), idcliente As Nullable(Of Integer), clienteChequeBco As String, fechaCobro As Nullable(Of Date), idmoneda As Nullable(Of Long), monto As Nullable(Of Decimal), banco As String, observaciones As String, propio As Nullable(Of Boolean), userupd As Nullable(Of Short), mensaje As ObjectParameter, res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim nrochequeParameter As ObjectParameter = If(nrocheque.HasValue, New ObjectParameter("nrocheque", nrocheque), New ObjectParameter("nrocheque", GetType(Long)))

        Dim idclienteParameter As ObjectParameter = If(idcliente.HasValue, New ObjectParameter("idcliente", idcliente), New ObjectParameter("idcliente", GetType(Integer)))

        Dim clienteChequeBcoParameter As ObjectParameter = If(clienteChequeBco IsNot Nothing, New ObjectParameter("ClienteChequeBco", clienteChequeBco), New ObjectParameter("ClienteChequeBco", GetType(String)))

        Dim fechaCobroParameter As ObjectParameter = If(fechaCobro.HasValue, New ObjectParameter("FechaCobro", fechaCobro), New ObjectParameter("FechaCobro", GetType(Date)))

        Dim idmonedaParameter As ObjectParameter = If(idmoneda.HasValue, New ObjectParameter("idmoneda", idmoneda), New ObjectParameter("idmoneda", GetType(Long)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Dim bancoParameter As ObjectParameter = If(banco IsNot Nothing, New ObjectParameter("Banco", banco), New ObjectParameter("Banco", GetType(String)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("Observaciones", observaciones), New ObjectParameter("Observaciones", GetType(String)))

        Dim propioParameter As ObjectParameter = If(propio.HasValue, New ObjectParameter("Propio", propio), New ObjectParameter("Propio", GetType(Boolean)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCheques_Update_old", idParameter, idIngresoParameter, nrochequeParameter, idclienteParameter, clienteChequeBcoParameter, fechaCobroParameter, idmonedaParameter, montoParameter, bancoParameter, observacionesParameter, propioParameter, userupdParameter, mensaje, res)
    End Function

    Public Overridable Function spCheques_Update2(id As Nullable(Of Long), utilizado As Nullable(Of Boolean), utilizadoOrig As Nullable(Of Boolean), observaciones As String, observacionesUtilizado As String, nroMov As String, userupd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim utilizadoParameter As ObjectParameter = If(utilizado.HasValue, New ObjectParameter("Utilizado", utilizado), New ObjectParameter("Utilizado", GetType(Boolean)))

        Dim utilizadoOrigParameter As ObjectParameter = If(utilizadoOrig.HasValue, New ObjectParameter("UtilizadoOrig", utilizadoOrig), New ObjectParameter("UtilizadoOrig", GetType(Boolean)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("Observaciones", observaciones), New ObjectParameter("Observaciones", GetType(String)))

        Dim observacionesUtilizadoParameter As ObjectParameter = If(observacionesUtilizado IsNot Nothing, New ObjectParameter("ObservacionesUtilizado", observacionesUtilizado), New ObjectParameter("ObservacionesUtilizado", GetType(String)))

        Dim nroMovParameter As ObjectParameter = If(nroMov IsNot Nothing, New ObjectParameter("NroMov", nroMov), New ObjectParameter("NroMov", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCheques_Update2", idParameter, utilizadoParameter, utilizadoOrigParameter, observacionesParameter, observacionesUtilizadoParameter, nroMovParameter, userupdParameter, res)
    End Function

    Public Overridable Function spCierreObras_Select_All() As ObjectResult(Of spCierreObras_Select_All_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spCierreObras_Select_All_Result)("spCierreObras_Select_All")
    End Function

    Public Overridable Function spCierreObras_Update(id As Nullable(Of Long), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCierreObras_Update", idParameter, userupdParameter, res)
    End Function

    Public Overridable Function spCierreObras_Ventas() As ObjectResult(Of spCierreObras_Ventas_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spCierreObras_Ventas_Result)("spCierreObras_Ventas")
    End Function

    Public Overridable Function spClientes_Contacto_Select_ALL() As ObjectResult(Of spClientes_Contacto_Select_ALL_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spClientes_Contacto_Select_ALL_Result)("spClientes_Contacto_Select_ALL")
    End Function

    Public Overridable Function spClientes_Contacto_Select_ALL_By_ID(id As Nullable(Of Long)) As ObjectResult(Of spClientes_Contacto_Select_ALL_By_ID_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spClientes_Contacto_Select_ALL_By_ID_Result)("spClientes_Contacto_Select_ALL_By_ID", idParameter)
    End Function

    Public Overridable Function spClientes_Contacto_Select_By_ID(id As Nullable(Of Long), res As ObjectParameter) As ObjectResult(Of spClientes_Contacto_Select_By_ID_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spClientes_Contacto_Select_By_ID_Result)("spClientes_Contacto_Select_By_ID", idParameter, res)
    End Function

    Public Overridable Function spClientes_Contactos_Delete_Update(idCliente As Nullable(Of Long)) As Integer
        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spClientes_Contactos_Delete_Update", idClienteParameter)
    End Function

    Public Overridable Function spClientes_Contactos_Insert(id As ObjectParameter, idcliente As Nullable(Of Long), codigo_Contacto As String, nombre_Contacto As String, direccion As String, telefono_Contacto As String, celular_Contacto As String, email_Contacto As String, useradd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idclienteParameter As ObjectParameter = If(idcliente.HasValue, New ObjectParameter("idcliente", idcliente), New ObjectParameter("idcliente", GetType(Long)))

        Dim codigo_ContactoParameter As ObjectParameter = If(codigo_Contacto IsNot Nothing, New ObjectParameter("codigo_Contacto", codigo_Contacto), New ObjectParameter("codigo_Contacto", GetType(String)))

        Dim nombre_ContactoParameter As ObjectParameter = If(nombre_Contacto IsNot Nothing, New ObjectParameter("nombre_Contacto", nombre_Contacto), New ObjectParameter("nombre_Contacto", GetType(String)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("direccion", direccion), New ObjectParameter("direccion", GetType(String)))

        Dim telefono_ContactoParameter As ObjectParameter = If(telefono_Contacto IsNot Nothing, New ObjectParameter("telefono_Contacto", telefono_Contacto), New ObjectParameter("telefono_Contacto", GetType(String)))

        Dim celular_ContactoParameter As ObjectParameter = If(celular_Contacto IsNot Nothing, New ObjectParameter("Celular_Contacto", celular_Contacto), New ObjectParameter("Celular_Contacto", GetType(String)))

        Dim email_ContactoParameter As ObjectParameter = If(email_Contacto IsNot Nothing, New ObjectParameter("email_Contacto", email_Contacto), New ObjectParameter("email_Contacto", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spClientes_Contactos_Insert", id, idclienteParameter, codigo_ContactoParameter, nombre_ContactoParameter, direccionParameter, telefono_ContactoParameter, celular_ContactoParameter, email_ContactoParameter, useraddParameter, res)
    End Function

    Public Overridable Function spClientes_Contactos_tmp_Insert(id As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spClientes_Contactos_tmp_Insert", id)
    End Function

    Public Overridable Function spClientes_Contactos_Update(id As Nullable(Of Long), idcliente As Nullable(Of Long), codigo_Contacto As String, nombre_Contacto As String, telefono_Contacto As String, celular_Contacto As String, email_Contacto As String, userupd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim idclienteParameter As ObjectParameter = If(idcliente.HasValue, New ObjectParameter("idcliente", idcliente), New ObjectParameter("idcliente", GetType(Long)))

        Dim codigo_ContactoParameter As ObjectParameter = If(codigo_Contacto IsNot Nothing, New ObjectParameter("codigo_Contacto", codigo_Contacto), New ObjectParameter("codigo_Contacto", GetType(String)))

        Dim nombre_ContactoParameter As ObjectParameter = If(nombre_Contacto IsNot Nothing, New ObjectParameter("nombre_Contacto", nombre_Contacto), New ObjectParameter("nombre_Contacto", GetType(String)))

        Dim telefono_ContactoParameter As ObjectParameter = If(telefono_Contacto IsNot Nothing, New ObjectParameter("telefono_Contacto", telefono_Contacto), New ObjectParameter("telefono_Contacto", GetType(String)))

        Dim celular_ContactoParameter As ObjectParameter = If(celular_Contacto IsNot Nothing, New ObjectParameter("Celular_Contacto", celular_Contacto), New ObjectParameter("Celular_Contacto", GetType(String)))

        Dim email_ContactoParameter As ObjectParameter = If(email_Contacto IsNot Nothing, New ObjectParameter("email_Contacto", email_Contacto), New ObjectParameter("email_Contacto", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spClientes_Contactos_Update", idParameter, idclienteParameter, codigo_ContactoParameter, nombre_ContactoParameter, telefono_ContactoParameter, celular_ContactoParameter, email_ContactoParameter, userupdParameter, res)
    End Function

    Public Overridable Function spClientes_ControlSaldos(cliente As String, saldo As ObjectParameter, res As ObjectParameter) As ObjectResult(Of Nullable(Of Integer))
        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("spClientes_ControlSaldos", clienteParameter, saldo, res)
    End Function

    Public Overridable Function spClientes_Delete(id As Nullable(Of Integer), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spClientes_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spClientes_Insert(id As ObjectParameter, codigo As ObjectParameter, idpreciolista As Nullable(Of Long), nombre As String, direccion As String, codpostal As String, localidad As String, provincia As String, tipoDoc As Nullable(Of Integer), cUIT As Nullable(Of Long), telefono As String, fax As String, email As String, usuario As String, usuarioweb As Nullable(Of Boolean), repartidor As String, promo As Nullable(Of Boolean), condicioniva As String, montomaxcred As Nullable(Of Decimal), diasmaxcred As Nullable(Of Long), ctacte As Nullable(Of Boolean), useradd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idpreciolistaParameter As ObjectParameter = If(idpreciolista.HasValue, New ObjectParameter("idpreciolista", idpreciolista), New ObjectParameter("idpreciolista", GetType(Long)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("direccion", direccion), New ObjectParameter("direccion", GetType(String)))

        Dim codpostalParameter As ObjectParameter = If(codpostal IsNot Nothing, New ObjectParameter("codpostal", codpostal), New ObjectParameter("codpostal", GetType(String)))

        Dim localidadParameter As ObjectParameter = If(localidad IsNot Nothing, New ObjectParameter("localidad", localidad), New ObjectParameter("localidad", GetType(String)))

        Dim provinciaParameter As ObjectParameter = If(provincia IsNot Nothing, New ObjectParameter("provincia", provincia), New ObjectParameter("provincia", GetType(String)))

        Dim tipoDocParameter As ObjectParameter = If(tipoDoc.HasValue, New ObjectParameter("TipoDoc", tipoDoc), New ObjectParameter("TipoDoc", GetType(Integer)))

        Dim cUITParameter As ObjectParameter = If(cUIT.HasValue, New ObjectParameter("CUIT", cUIT), New ObjectParameter("CUIT", GetType(Long)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("telefono", telefono), New ObjectParameter("telefono", GetType(String)))

        Dim faxParameter As ObjectParameter = If(fax IsNot Nothing, New ObjectParameter("fax", fax), New ObjectParameter("fax", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("email", email), New ObjectParameter("email", GetType(String)))

        Dim usuarioParameter As ObjectParameter = If(usuario IsNot Nothing, New ObjectParameter("usuario", usuario), New ObjectParameter("usuario", GetType(String)))

        Dim usuariowebParameter As ObjectParameter = If(usuarioweb.HasValue, New ObjectParameter("usuarioweb", usuarioweb), New ObjectParameter("usuarioweb", GetType(Boolean)))

        Dim repartidorParameter As ObjectParameter = If(repartidor IsNot Nothing, New ObjectParameter("repartidor", repartidor), New ObjectParameter("repartidor", GetType(String)))

        Dim promoParameter As ObjectParameter = If(promo.HasValue, New ObjectParameter("promo", promo), New ObjectParameter("promo", GetType(Boolean)))

        Dim condicionivaParameter As ObjectParameter = If(condicioniva IsNot Nothing, New ObjectParameter("condicioniva", condicioniva), New ObjectParameter("condicioniva", GetType(String)))

        Dim montomaxcredParameter As ObjectParameter = If(montomaxcred.HasValue, New ObjectParameter("montomaxcred", montomaxcred), New ObjectParameter("montomaxcred", GetType(Decimal)))

        Dim diasmaxcredParameter As ObjectParameter = If(diasmaxcred.HasValue, New ObjectParameter("diasmaxcred", diasmaxcred), New ObjectParameter("diasmaxcred", GetType(Long)))

        Dim ctacteParameter As ObjectParameter = If(ctacte.HasValue, New ObjectParameter("ctacte", ctacte), New ObjectParameter("ctacte", GetType(Boolean)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spClientes_Insert", id, codigo, idpreciolistaParameter, nombreParameter, direccionParameter, codpostalParameter, localidadParameter, provinciaParameter, tipoDocParameter, cUITParameter, telefonoParameter, faxParameter, emailParameter, usuarioParameter, usuariowebParameter, repartidorParameter, promoParameter, condicionivaParameter, montomaxcredParameter, diasmaxcredParameter, ctacteParameter, useraddParameter, res)
    End Function

    Public Overridable Function spClientes_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spClientes_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spClientes_Select_All_Result)("spClientes_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spClientes_Update(id As Nullable(Of Long), idpreciolista As Nullable(Of Long), nombre As String, direccion As String, codpostal As String, localidad As String, provincia As String, tipoDoc As Nullable(Of Integer), cUIT As Nullable(Of Long), telefono As String, fax As String, email As String, usuario As String, usuarioweb As Nullable(Of Boolean), repartidor As String, promo As Nullable(Of Boolean), condicioniva As String, montomaxcred As Nullable(Of Decimal), diasmaxcred As Nullable(Of Long), ctacte As Nullable(Of Boolean), userupd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim idpreciolistaParameter As ObjectParameter = If(idpreciolista.HasValue, New ObjectParameter("idpreciolista", idpreciolista), New ObjectParameter("idpreciolista", GetType(Long)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("direccion", direccion), New ObjectParameter("direccion", GetType(String)))

        Dim codpostalParameter As ObjectParameter = If(codpostal IsNot Nothing, New ObjectParameter("codpostal", codpostal), New ObjectParameter("codpostal", GetType(String)))

        Dim localidadParameter As ObjectParameter = If(localidad IsNot Nothing, New ObjectParameter("localidad", localidad), New ObjectParameter("localidad", GetType(String)))

        Dim provinciaParameter As ObjectParameter = If(provincia IsNot Nothing, New ObjectParameter("provincia", provincia), New ObjectParameter("provincia", GetType(String)))

        Dim tipoDocParameter As ObjectParameter = If(tipoDoc.HasValue, New ObjectParameter("TipoDoc", tipoDoc), New ObjectParameter("TipoDoc", GetType(Integer)))

        Dim cUITParameter As ObjectParameter = If(cUIT.HasValue, New ObjectParameter("CUIT", cUIT), New ObjectParameter("CUIT", GetType(Long)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("telefono", telefono), New ObjectParameter("telefono", GetType(String)))

        Dim faxParameter As ObjectParameter = If(fax IsNot Nothing, New ObjectParameter("fax", fax), New ObjectParameter("fax", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("email", email), New ObjectParameter("email", GetType(String)))

        Dim usuarioParameter As ObjectParameter = If(usuario IsNot Nothing, New ObjectParameter("usuario", usuario), New ObjectParameter("usuario", GetType(String)))

        Dim usuariowebParameter As ObjectParameter = If(usuarioweb.HasValue, New ObjectParameter("usuarioweb", usuarioweb), New ObjectParameter("usuarioweb", GetType(Boolean)))

        Dim repartidorParameter As ObjectParameter = If(repartidor IsNot Nothing, New ObjectParameter("repartidor", repartidor), New ObjectParameter("repartidor", GetType(String)))

        Dim promoParameter As ObjectParameter = If(promo.HasValue, New ObjectParameter("promo", promo), New ObjectParameter("promo", GetType(Boolean)))

        Dim condicionivaParameter As ObjectParameter = If(condicioniva IsNot Nothing, New ObjectParameter("condicioniva", condicioniva), New ObjectParameter("condicioniva", GetType(String)))

        Dim montomaxcredParameter As ObjectParameter = If(montomaxcred.HasValue, New ObjectParameter("montomaxcred", montomaxcred), New ObjectParameter("montomaxcred", GetType(Decimal)))

        Dim diasmaxcredParameter As ObjectParameter = If(diasmaxcred.HasValue, New ObjectParameter("diasmaxcred", diasmaxcred), New ObjectParameter("diasmaxcred", GetType(Long)))

        Dim ctacteParameter As ObjectParameter = If(ctacte.HasValue, New ObjectParameter("ctacte", ctacte), New ObjectParameter("ctacte", GetType(Boolean)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spClientes_Update", idParameter, idpreciolistaParameter, nombreParameter, direccionParameter, codpostalParameter, localidadParameter, provinciaParameter, tipoDocParameter, cUITParameter, telefonoParameter, faxParameter, emailParameter, usuarioParameter, usuariowebParameter, repartidorParameter, promoParameter, condicionivaParameter, montomaxcredParameter, diasmaxcredParameter, ctacteParameter, userupdParameter, res)
    End Function

    Public Overridable Function spConceptos_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConceptos_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spConceptos_Insert(id As ObjectParameter, codigo As String, nombre As String, descripcion As String, idConceptoPago As Nullable(Of Long), idPerteneceA As Nullable(Of Long), idTipoValor As Nullable(Of Long), valor As Nullable(Of Decimal), idCamposAplicables As Nullable(Of Long), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Dim idConceptoPagoParameter As ObjectParameter = If(idConceptoPago.HasValue, New ObjectParameter("IdConceptoPago", idConceptoPago), New ObjectParameter("IdConceptoPago", GetType(Long)))

        Dim idPerteneceAParameter As ObjectParameter = If(idPerteneceA.HasValue, New ObjectParameter("IdPerteneceA", idPerteneceA), New ObjectParameter("IdPerteneceA", GetType(Long)))

        Dim idTipoValorParameter As ObjectParameter = If(idTipoValor.HasValue, New ObjectParameter("IdTipoValor", idTipoValor), New ObjectParameter("IdTipoValor", GetType(Long)))

        Dim valorParameter As ObjectParameter = If(valor.HasValue, New ObjectParameter("Valor", valor), New ObjectParameter("Valor", GetType(Decimal)))

        Dim idCamposAplicablesParameter As ObjectParameter = If(idCamposAplicables.HasValue, New ObjectParameter("IdCamposAplicables", idCamposAplicables), New ObjectParameter("IdCamposAplicables", GetType(Long)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConceptos_Insert", id, codigoParameter, nombreParameter, descripcionParameter, idConceptoPagoParameter, idPerteneceAParameter, idTipoValorParameter, valorParameter, idCamposAplicablesParameter, useraddParameter, res)
    End Function

    Public Overridable Function spConceptos_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spConceptos_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConceptos_Select_All_Result)("spConceptos_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spConceptos_Select_Valor(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spConceptos_Select_Valor_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConceptos_Select_Valor_Result)("spConceptos_Select_Valor", eliminadoParameter)
    End Function

    Public Overridable Function spConceptos_Update(id As ObjectParameter, nombre As String, descripcion As String, idConceptoPago As Nullable(Of Long), idPerteneceA As Nullable(Of Long), idTipoValor As Nullable(Of Long), valor As Nullable(Of Decimal), idCamposAplicables As Nullable(Of Long), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Dim idConceptoPagoParameter As ObjectParameter = If(idConceptoPago.HasValue, New ObjectParameter("IdConceptoPago", idConceptoPago), New ObjectParameter("IdConceptoPago", GetType(Long)))

        Dim idPerteneceAParameter As ObjectParameter = If(idPerteneceA.HasValue, New ObjectParameter("IdPerteneceA", idPerteneceA), New ObjectParameter("IdPerteneceA", GetType(Long)))

        Dim idTipoValorParameter As ObjectParameter = If(idTipoValor.HasValue, New ObjectParameter("IdTipoValor", idTipoValor), New ObjectParameter("IdTipoValor", GetType(Long)))

        Dim valorParameter As ObjectParameter = If(valor.HasValue, New ObjectParameter("Valor", valor), New ObjectParameter("Valor", GetType(Decimal)))

        Dim idCamposAplicablesParameter As ObjectParameter = If(idCamposAplicables.HasValue, New ObjectParameter("IdCamposAplicables", idCamposAplicables), New ObjectParameter("IdCamposAplicables", GetType(Long)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConceptos_Update", id, nombreParameter, descripcionParameter, idConceptoPagoParameter, idPerteneceAParameter, idTipoValorParameter, valorParameter, idCamposAplicablesParameter, userupdParameter, res)
    End Function

    Public Overridable Function spCondiciondePago_Delete(id As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCondiciondePago_Delete", idParameter, res)
    End Function

    Public Overridable Function spCondiciondePago_Insert(id As ObjectParameter, codigo As Nullable(Of Long), nombre As String, nota As String, dateadd As Nullable(Of Date), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo.HasValue, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(Long)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim dateaddParameter As ObjectParameter = If(dateadd.HasValue, New ObjectParameter("dateadd", dateadd), New ObjectParameter("dateadd", GetType(Date)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCondiciondePago_Insert", id, codigoParameter, nombreParameter, notaParameter, dateaddParameter, useraddParameter, res)
    End Function

    Public Overridable Function spCondiciondePago_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spCondiciondePago_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spCondiciondePago_Select_All_Result)("spCondiciondePago_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spCondiciondePago_Update(id As Nullable(Of Long), codigo As Nullable(Of Long), nombre As String, nota As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo.HasValue, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(Long)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCondiciondePago_Update", idParameter, codigoParameter, nombreParameter, notaParameter, userupdParameter, res)
    End Function

    Public Overridable Function spConsolidacionDias(mes As Nullable(Of Integer), ano As Nullable(Of Integer)) As Integer
        Dim mesParameter As ObjectParameter = If(mes.HasValue, New ObjectParameter("Mes", mes), New ObjectParameter("Mes", GetType(Integer)))

        Dim anoParameter As ObjectParameter = If(ano.HasValue, New ObjectParameter("Ano", ano), New ObjectParameter("Ano", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsolidacionDias", mesParameter, anoParameter)
    End Function

    Public Overridable Function spConsolidaciones_Delete(id As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsolidaciones_Delete", idParameter, res)
    End Function

    Public Overridable Function spConsolidaciones_Delete_tmp() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsolidaciones_Delete_tmp")
    End Function

    Public Overridable Function spConsolidaciones_Insert(id As ObjectParameter, idEmpleado As Nullable(Of Long), periodo As String, horas_Normales As Nullable(Of Decimal), horas_Extras_50 As Nullable(Of Decimal), horas_Extras_100 As Nullable(Of Decimal), monto_Hora As Nullable(Of Decimal), total_Hs_Normales As Nullable(Of Decimal), total_Hs_Extras_50 As Nullable(Of Decimal), total_Hs_Extras_100 As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idEmpleadoParameter As ObjectParameter = If(idEmpleado.HasValue, New ObjectParameter("IdEmpleado", idEmpleado), New ObjectParameter("IdEmpleado", GetType(Long)))

        Dim periodoParameter As ObjectParameter = If(periodo IsNot Nothing, New ObjectParameter("Periodo", periodo), New ObjectParameter("Periodo", GetType(String)))

        Dim horas_NormalesParameter As ObjectParameter = If(horas_Normales.HasValue, New ObjectParameter("Horas_Normales", horas_Normales), New ObjectParameter("Horas_Normales", GetType(Decimal)))

        Dim horas_Extras_50Parameter As ObjectParameter = If(horas_Extras_50.HasValue, New ObjectParameter("Horas_Extras_50", horas_Extras_50), New ObjectParameter("Horas_Extras_50", GetType(Decimal)))

        Dim horas_Extras_100Parameter As ObjectParameter = If(horas_Extras_100.HasValue, New ObjectParameter("Horas_Extras_100", horas_Extras_100), New ObjectParameter("Horas_Extras_100", GetType(Decimal)))

        Dim monto_HoraParameter As ObjectParameter = If(monto_Hora.HasValue, New ObjectParameter("Monto_Hora", monto_Hora), New ObjectParameter("Monto_Hora", GetType(Decimal)))

        Dim total_Hs_NormalesParameter As ObjectParameter = If(total_Hs_Normales.HasValue, New ObjectParameter("Total_Hs_Normales", total_Hs_Normales), New ObjectParameter("Total_Hs_Normales", GetType(Decimal)))

        Dim total_Hs_Extras_50Parameter As ObjectParameter = If(total_Hs_Extras_50.HasValue, New ObjectParameter("Total_Hs_Extras_50", total_Hs_Extras_50), New ObjectParameter("Total_Hs_Extras_50", GetType(Decimal)))

        Dim total_Hs_Extras_100Parameter As ObjectParameter = If(total_Hs_Extras_100.HasValue, New ObjectParameter("Total_Hs_Extras_100", total_Hs_Extras_100), New ObjectParameter("Total_Hs_Extras_100", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsolidaciones_Insert", id, idEmpleadoParameter, periodoParameter, horas_NormalesParameter, horas_Extras_50Parameter, horas_Extras_100Parameter, monto_HoraParameter, total_Hs_NormalesParameter, total_Hs_Extras_50Parameter, total_Hs_Extras_100Parameter, res)
    End Function

    Public Overridable Function spConsolidaciones_Insert_tmp(idConsolidacion As Nullable(Of Long)) As Integer
        Dim idConsolidacionParameter As ObjectParameter = If(idConsolidacion.HasValue, New ObjectParameter("IdConsolidacion", idConsolidacion), New ObjectParameter("IdConsolidacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsolidaciones_Insert_tmp", idConsolidacionParameter)
    End Function

    Public Overridable Function spConsolidaciones_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spConsolidaciones_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsolidaciones_Select_All_Result)("spConsolidaciones_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spConsumos_Actualizar_Presupuesto(idConsumo As Nullable(Of Long), codigoPres As String, res As ObjectParameter) As Integer
        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("IdConsumo", idConsumo), New ObjectParameter("IdConsumo", GetType(Long)))

        Dim codigoPresParameter As ObjectParameter = If(codigoPres IsNot Nothing, New ObjectParameter("CodigoPres", codigoPres), New ObjectParameter("CodigoPres", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsumos_Actualizar_Presupuesto", idConsumoParameter, codigoPresParameter, res)
    End Function

    Public Overridable Function spConsumos_ActualizarPrecio(idMaterial As Nullable(Of Long), precio As ObjectParameter) As Integer
        Dim idMaterialParameter As ObjectParameter = If(idMaterial.HasValue, New ObjectParameter("IdMaterial", idMaterial), New ObjectParameter("IdMaterial", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsumos_ActualizarPrecio", idMaterialParameter, precio)
    End Function

    Public Overridable Function spConsumos_ActualizarSubtotales(idConsumo As Nullable(Of Long)) As Integer
        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("IdConsumo", idConsumo), New ObjectParameter("IdConsumo", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsumos_ActualizarSubtotales", idConsumoParameter)
    End Function

    Public Overridable Function spConsumos_ControlarCantidadRegistros(idConsumo As Nullable(Of Long), idMaterial As Nullable(Of Long)) As Integer
        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("IdConsumo", idConsumo), New ObjectParameter("IdConsumo", GetType(Long)))

        Dim idMaterialParameter As ObjectParameter = If(idMaterial.HasValue, New ObjectParameter("IdMaterial", idMaterial), New ObjectParameter("IdMaterial", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsumos_ControlarCantidadRegistros", idConsumoParameter, idMaterialParameter)
    End Function

    Public Overridable Function spConsumos_EliminarItems_Det(idConsumo As Nullable(Of Long), mensaje As ObjectParameter, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("IdConsumo", idConsumo), New ObjectParameter("IdConsumo", GetType(Long)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsumos_EliminarItems_Det", idConsumoParameter, mensaje, userupdParameter, res)
    End Function

    Public Overridable Function spConsumos_Facturas_Actualizar(idConsumo As Nullable(Of Long), incluyefactura As Nullable(Of Boolean), nroFactura As String, idFacturacion As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("IdConsumo", idConsumo), New ObjectParameter("IdConsumo", GetType(Long)))

        Dim incluyefacturaParameter As ObjectParameter = If(incluyefactura.HasValue, New ObjectParameter("incluyefactura", incluyefactura), New ObjectParameter("incluyefactura", GetType(Boolean)))

        Dim nroFacturaParameter As ObjectParameter = If(nroFactura IsNot Nothing, New ObjectParameter("NroFactura", nroFactura), New ObjectParameter("NroFactura", GetType(String)))

        Dim idFacturacionParameter As ObjectParameter = If(idFacturacion.HasValue, New ObjectParameter("IdFacturacion", idFacturacion), New ObjectParameter("IdFacturacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsumos_Facturas_Actualizar", idConsumoParameter, incluyefacturaParameter, nroFacturaParameter, idFacturacionParameter, res)
    End Function

    Public Overridable Function spConsumos_Pagado_Actualizar(idConsumo As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("IdConsumo", idConsumo), New ObjectParameter("IdConsumo", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsumos_Pagado_Actualizar", idConsumoParameter, res)
    End Function

    Public Overridable Function spConsumos_Pagos_Controlar(idConsumo As Nullable(Of Long), nroPago As ObjectParameter, codigoPre As ObjectParameter, res As ObjectParameter) As Integer
        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("IdConsumo", idConsumo), New ObjectParameter("IdConsumo", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsumos_Pagos_Controlar", idConsumoParameter, nroPago, codigoPre, res)
    End Function

    Public Overridable Function spConsumos_Update_Impreso(id As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsumos_Update_Impreso", idParameter, res)
    End Function

    Public Overridable Function spConsumosxFactura(idConsumo As Nullable(Of Long), idFactura As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("IdConsumo", idConsumo), New ObjectParameter("IdConsumo", GetType(Long)))

        Dim idFacturaParameter As ObjectParameter = If(idFactura.HasValue, New ObjectParameter("IdFactura", idFactura), New ObjectParameter("IdFactura", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsumosxFactura", idConsumoParameter, idFacturaParameter, res)
    End Function

    Public Overridable Function spCriteriosdeBusqueda_Delete(texto As String) As Integer
        Dim textoParameter As ObjectParameter = If(texto IsNot Nothing, New ObjectParameter("texto", texto), New ObjectParameter("texto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCriteriosdeBusqueda_Delete", textoParameter)
    End Function

    Public Overridable Function spCriteriosdeBusqueda_Insert(texto As String) As Integer
        Dim textoParameter As ObjectParameter = If(texto IsNot Nothing, New ObjectParameter("texto", texto), New ObjectParameter("texto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCriteriosdeBusqueda_Insert", textoParameter)
    End Function

    Public Overridable Function spCtaCteMovimientos_Insert(codigo As String, idCliente As Nullable(Of Long), tipoOperacion As String, idFacturacionPago As Nullable(Of Long), fechaMovCtaCte As String, montoMovCtaCte As Nullable(Of Decimal), userAdd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim tipoOperacionParameter As ObjectParameter = If(tipoOperacion IsNot Nothing, New ObjectParameter("TipoOperacion", tipoOperacion), New ObjectParameter("TipoOperacion", GetType(String)))

        Dim idFacturacionPagoParameter As ObjectParameter = If(idFacturacionPago.HasValue, New ObjectParameter("IdFacturacionPago", idFacturacionPago), New ObjectParameter("IdFacturacionPago", GetType(Long)))

        Dim fechaMovCtaCteParameter As ObjectParameter = If(fechaMovCtaCte IsNot Nothing, New ObjectParameter("FechaMovCtaCte", fechaMovCtaCte), New ObjectParameter("FechaMovCtaCte", GetType(String)))

        Dim montoMovCtaCteParameter As ObjectParameter = If(montoMovCtaCte.HasValue, New ObjectParameter("MontoMovCtaCte", montoMovCtaCte), New ObjectParameter("MontoMovCtaCte", GetType(Decimal)))

        Dim userAddParameter As ObjectParameter = If(userAdd.HasValue, New ObjectParameter("UserAdd", userAdd), New ObjectParameter("UserAdd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCtaCteMovimientos_Insert", codigoParameter, idClienteParameter, tipoOperacionParameter, idFacturacionPagoParameter, fechaMovCtaCteParameter, montoMovCtaCteParameter, userAddParameter, res)
    End Function

    Public Overridable Function spCuentaRecepcionesPorOrdenDeCompra(idoc As String, res As ObjectParameter) As Integer
        Dim idocParameter As ObjectParameter = If(idoc IsNot Nothing, New ObjectParameter("idoc", idoc), New ObjectParameter("idoc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCuentaRecepcionesPorOrdenDeCompra", idocParameter, res)
    End Function

    Public Overridable Function spDevoluciones_Delete_All(iddevolucionpanol As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim iddevolucionpanolParameter As ObjectParameter = If(iddevolucionpanol.HasValue, New ObjectParameter("iddevolucionpanol", iddevolucionpanol), New ObjectParameter("iddevolucionpanol", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDevoluciones_Delete_All", iddevolucionpanolParameter, userdelParameter, res, mensaje)
    End Function

    Public Overridable Function spDevoluciones_Det_Insert(id As ObjectParameter, codigo As ObjectParameter, iddevolucion As Nullable(Of Long), idmaterial As Nullable(Of Long), idalmacen As Nullable(Of Long), qty As Nullable(Of Decimal), idunidad As Nullable(Of Long), remito As Nullable(Of Boolean), idRemito As Nullable(Of Long), useradd As Nullable(Of Long), res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim iddevolucionParameter As ObjectParameter = If(iddevolucion.HasValue, New ObjectParameter("iddevolucion", iddevolucion), New ObjectParameter("iddevolucion", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim idalmacenParameter As ObjectParameter = If(idalmacen.HasValue, New ObjectParameter("idalmacen", idalmacen), New ObjectParameter("idalmacen", GetType(Long)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim remitoParameter As ObjectParameter = If(remito.HasValue, New ObjectParameter("Remito", remito), New ObjectParameter("Remito", GetType(Boolean)))

        Dim idRemitoParameter As ObjectParameter = If(idRemito.HasValue, New ObjectParameter("IdRemito", idRemito), New ObjectParameter("IdRemito", GetType(Long)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDevoluciones_Det_Insert", id, codigo, iddevolucionParameter, idmaterialParameter, idalmacenParameter, qtyParameter, idunidadParameter, remitoParameter, idRemitoParameter, useraddParameter, res, mensaje)
    End Function

    Public Overridable Function spDevoluciones_Det_Select_By_IDDevolucion(iDDevolucion As Nullable(Of Long)) As ObjectResult(Of spDevoluciones_Det_Select_By_IDDevolucion_Result)
        Dim iDDevolucionParameter As ObjectParameter = If(iDDevolucion.HasValue, New ObjectParameter("IDDevolucion", iDDevolucion), New ObjectParameter("IDDevolucion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spDevoluciones_Det_Select_By_IDDevolucion_Result)("spDevoluciones_Det_Select_By_IDDevolucion", iDDevolucionParameter)
    End Function

    Public Overridable Function spDevoluciones_Det_Select_By_IdRemito(idRemito As Nullable(Of Long)) As ObjectResult(Of spDevoluciones_Det_Select_By_IdRemito_Result)
        Dim idRemitoParameter As ObjectParameter = If(idRemito.HasValue, New ObjectParameter("IdRemito", idRemito), New ObjectParameter("IdRemito", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spDevoluciones_Det_Select_By_IdRemito_Result)("spDevoluciones_Det_Select_By_IdRemito", idRemitoParameter)
    End Function

    Public Overridable Function spDevoluciones_Insert(id As ObjectParameter, codigo As ObjectParameter, fecha As Nullable(Of Date), idCliente As Nullable(Of Long), remito As Nullable(Of Boolean), idremito As Nullable(Of Long), idalmacen As Nullable(Of Long), nota As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim remitoParameter As ObjectParameter = If(remito.HasValue, New ObjectParameter("remito", remito), New ObjectParameter("remito", GetType(Boolean)))

        Dim idremitoParameter As ObjectParameter = If(idremito.HasValue, New ObjectParameter("idremito", idremito), New ObjectParameter("idremito", GetType(Long)))

        Dim idalmacenParameter As ObjectParameter = If(idalmacen.HasValue, New ObjectParameter("idalmacen", idalmacen), New ObjectParameter("idalmacen", GetType(Long)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDevoluciones_Insert", id, codigo, fechaParameter, idClienteParameter, remitoParameter, idremitoParameter, idalmacenParameter, notaParameter, useraddParameter, res)
    End Function

    Public Overridable Function spDevoluciones_Select_All() As ObjectResult(Of spDevoluciones_Select_All_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spDevoluciones_Select_All_Result)("spDevoluciones_Select_All")
    End Function

    Public Overridable Function spDevolucionesProveedor_Delete(id As Nullable(Of Long), nota As String, userDel As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim userDelParameter As ObjectParameter = If(userDel.HasValue, New ObjectParameter("UserDel", userDel), New ObjectParameter("UserDel", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDevolucionesProveedor_Delete", idParameter, notaParameter, userDelParameter, res)
    End Function

    Public Overridable Function spDevolucionesProveedor_Delete_All(iddevolucionproveedor As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim iddevolucionproveedorParameter As ObjectParameter = If(iddevolucionproveedor.HasValue, New ObjectParameter("iddevolucionproveedor", iddevolucionproveedor), New ObjectParameter("iddevolucionproveedor", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDevolucionesProveedor_Delete_All", iddevolucionproveedorParameter, userdelParameter, res, mensaje)
    End Function

    Public Overridable Function spDevolucionesProveedor_Delete_Det(id As ObjectParameter, iDALMACEN As Nullable(Of Double), idDevolucion As Nullable(Of Long), idmaterial As String, idunidad As String, qty As Nullable(Of Decimal), userdel As Nullable(Of Long), idStockMov As ObjectParameter, comprob As ObjectParameter, stock As ObjectParameter, res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim iDALMACENParameter As ObjectParameter = If(iDALMACEN.HasValue, New ObjectParameter("IDALMACEN", iDALMACEN), New ObjectParameter("IDALMACEN", GetType(Double)))

        Dim idDevolucionParameter As ObjectParameter = If(idDevolucion.HasValue, New ObjectParameter("idDevolucion", idDevolucion), New ObjectParameter("idDevolucion", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial IsNot Nothing, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(String)))

        Dim idunidadParameter As ObjectParameter = If(idunidad IsNot Nothing, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(String)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDevolucionesProveedor_Delete_Det", id, iDALMACENParameter, idDevolucionParameter, idmaterialParameter, idunidadParameter, qtyParameter, userdelParameter, idStockMov, comprob, stock, res, mensaje)
    End Function

    Public Overridable Function spDevolucionesProveedor_Det_Insert(id As ObjectParameter, codigo As String, idDevolucion As Nullable(Of Long), idmaterial As String, qty As Nullable(Of Decimal), idunidad As String, idalmacen As Nullable(Of Long), lote As Nullable(Of Long), loteproveed As String, remito As String, conCambio As Nullable(Of Boolean), idproveedor As String, ordenitem As Nullable(Of Short), nota_Det As String, useradd As Nullable(Of Long), idStockMov As ObjectParameter, comprob As ObjectParameter, stock As ObjectParameter, res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim idDevolucionParameter As ObjectParameter = If(idDevolucion.HasValue, New ObjectParameter("idDevolucion", idDevolucion), New ObjectParameter("idDevolucion", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial IsNot Nothing, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(String)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad IsNot Nothing, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(String)))

        Dim idalmacenParameter As ObjectParameter = If(idalmacen.HasValue, New ObjectParameter("idalmacen", idalmacen), New ObjectParameter("idalmacen", GetType(Long)))

        Dim loteParameter As ObjectParameter = If(lote.HasValue, New ObjectParameter("lote", lote), New ObjectParameter("lote", GetType(Long)))

        Dim loteproveedParameter As ObjectParameter = If(loteproveed IsNot Nothing, New ObjectParameter("loteproveed", loteproveed), New ObjectParameter("loteproveed", GetType(String)))

        Dim remitoParameter As ObjectParameter = If(remito IsNot Nothing, New ObjectParameter("remito", remito), New ObjectParameter("remito", GetType(String)))

        Dim conCambioParameter As ObjectParameter = If(conCambio.HasValue, New ObjectParameter("ConCambio", conCambio), New ObjectParameter("ConCambio", GetType(Boolean)))

        Dim idproveedorParameter As ObjectParameter = If(idproveedor IsNot Nothing, New ObjectParameter("idproveedor", idproveedor), New ObjectParameter("idproveedor", GetType(String)))

        Dim ordenitemParameter As ObjectParameter = If(ordenitem.HasValue, New ObjectParameter("ordenitem", ordenitem), New ObjectParameter("ordenitem", GetType(Short)))

        Dim nota_DetParameter As ObjectParameter = If(nota_Det IsNot Nothing, New ObjectParameter("Nota_Det", nota_Det), New ObjectParameter("Nota_Det", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDevolucionesProveedor_Det_Insert", id, codigoParameter, idDevolucionParameter, idmaterialParameter, qtyParameter, idunidadParameter, idalmacenParameter, loteParameter, loteproveedParameter, remitoParameter, conCambioParameter, idproveedorParameter, ordenitemParameter, nota_DetParameter, useraddParameter, idStockMov, comprob, stock, res, mensaje)
    End Function

    Public Overridable Function spDevolucionesProveedor_Det_Select_By_IDDevolucion(iDDevolucion As Nullable(Of Long)) As ObjectResult(Of spDevolucionesProveedor_Det_Select_By_IDDevolucion_Result)
        Dim iDDevolucionParameter As ObjectParameter = If(iDDevolucion.HasValue, New ObjectParameter("IDDevolucion", iDDevolucion), New ObjectParameter("IDDevolucion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spDevolucionesProveedor_Det_Select_By_IDDevolucion_Result)("spDevolucionesProveedor_Det_Select_By_IDDevolucion", iDDevolucionParameter)
    End Function

    Public Overridable Function spDevolucionesProveedor_Entregar_All(iddevolucionproveedor As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim iddevolucionproveedorParameter As ObjectParameter = If(iddevolucionproveedor.HasValue, New ObjectParameter("iddevolucionproveedor", iddevolucionproveedor), New ObjectParameter("iddevolucionproveedor", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDevolucionesProveedor_Entregar_All", iddevolucionproveedorParameter, userdelParameter, res)
    End Function

    Public Overridable Function spDevolucionesProveedor_Insert(id As ObjectParameter, codigo As ObjectParameter, fecha As Nullable(Of Date), idalmacen As Nullable(Of Long), idproveedor As String, nota As String, userdevolvio As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim idalmacenParameter As ObjectParameter = If(idalmacen.HasValue, New ObjectParameter("idalmacen", idalmacen), New ObjectParameter("idalmacen", GetType(Long)))

        Dim idproveedorParameter As ObjectParameter = If(idproveedor IsNot Nothing, New ObjectParameter("idproveedor", idproveedor), New ObjectParameter("idproveedor", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim userdevolvioParameter As ObjectParameter = If(userdevolvio IsNot Nothing, New ObjectParameter("userdevolvio", userdevolvio), New ObjectParameter("userdevolvio", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDevolucionesProveedor_Insert", id, codigo, fechaParameter, idalmacenParameter, idproveedorParameter, notaParameter, userdevolvioParameter, useraddParameter, res)
    End Function

    Public Overridable Function spDevolucionesProveedor_Select_All(eliminado As Nullable(Of Boolean), pendientes As Nullable(Of Boolean), pendientesyCumplidas As Nullable(Of Boolean)) As ObjectResult(Of spDevolucionesProveedor_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Dim pendientesParameter As ObjectParameter = If(pendientes.HasValue, New ObjectParameter("Pendientes", pendientes), New ObjectParameter("Pendientes", GetType(Boolean)))

        Dim pendientesyCumplidasParameter As ObjectParameter = If(pendientesyCumplidas.HasValue, New ObjectParameter("PendientesyCumplidas", pendientesyCumplidas), New ObjectParameter("PendientesyCumplidas", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spDevolucionesProveedor_Select_All_Result)("spDevolucionesProveedor_Select_All", eliminadoParameter, pendientesParameter, pendientesyCumplidasParameter)
    End Function

    Public Overridable Function spEmpleados_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spEmpleados_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spEmpleados_Insert(id As ObjectParameter, codigo As ObjectParameter, apellido As String, nombre As String, domicilio As String, telefono As String, celular As String, cuit As Nullable(Of Long), fechanac As Nullable(Of Date), fechaingreso As Nullable(Of Date), email As String, art As String, vencpoliza As Nullable(Of Date), usuarioSistema As Nullable(Of Boolean), usuario As String, idJornada As Nullable(Of Long), revendedor As Nullable(Of Boolean), repartidor As Nullable(Of Boolean), autoriza As Nullable(Of Boolean), vendedor As Nullable(Of Boolean), useradd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("apellido", apellido), New ObjectParameter("apellido", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim domicilioParameter As ObjectParameter = If(domicilio IsNot Nothing, New ObjectParameter("domicilio", domicilio), New ObjectParameter("domicilio", GetType(String)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("telefono", telefono), New ObjectParameter("telefono", GetType(String)))

        Dim celularParameter As ObjectParameter = If(celular IsNot Nothing, New ObjectParameter("celular", celular), New ObjectParameter("celular", GetType(String)))

        Dim cuitParameter As ObjectParameter = If(cuit.HasValue, New ObjectParameter("cuit", cuit), New ObjectParameter("cuit", GetType(Long)))

        Dim fechanacParameter As ObjectParameter = If(fechanac.HasValue, New ObjectParameter("fechanac", fechanac), New ObjectParameter("fechanac", GetType(Date)))

        Dim fechaingresoParameter As ObjectParameter = If(fechaingreso.HasValue, New ObjectParameter("fechaingreso", fechaingreso), New ObjectParameter("fechaingreso", GetType(Date)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("email", email), New ObjectParameter("email", GetType(String)))

        Dim artParameter As ObjectParameter = If(art IsNot Nothing, New ObjectParameter("art", art), New ObjectParameter("art", GetType(String)))

        Dim vencpolizaParameter As ObjectParameter = If(vencpoliza.HasValue, New ObjectParameter("vencpoliza", vencpoliza), New ObjectParameter("vencpoliza", GetType(Date)))

        Dim usuarioSistemaParameter As ObjectParameter = If(usuarioSistema.HasValue, New ObjectParameter("UsuarioSistema", usuarioSistema), New ObjectParameter("UsuarioSistema", GetType(Boolean)))

        Dim usuarioParameter As ObjectParameter = If(usuario IsNot Nothing, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(String)))

        Dim idJornadaParameter As ObjectParameter = If(idJornada.HasValue, New ObjectParameter("IdJornada", idJornada), New ObjectParameter("IdJornada", GetType(Long)))

        Dim revendedorParameter As ObjectParameter = If(revendedor.HasValue, New ObjectParameter("Revendedor", revendedor), New ObjectParameter("Revendedor", GetType(Boolean)))

        Dim repartidorParameter As ObjectParameter = If(repartidor.HasValue, New ObjectParameter("repartidor", repartidor), New ObjectParameter("repartidor", GetType(Boolean)))

        Dim autorizaParameter As ObjectParameter = If(autoriza.HasValue, New ObjectParameter("Autoriza", autoriza), New ObjectParameter("Autoriza", GetType(Boolean)))

        Dim vendedorParameter As ObjectParameter = If(vendedor.HasValue, New ObjectParameter("Vendedor", vendedor), New ObjectParameter("Vendedor", GetType(Boolean)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spEmpleados_Insert", id, codigo, apellidoParameter, nombreParameter, domicilioParameter, telefonoParameter, celularParameter, cuitParameter, fechanacParameter, fechaingresoParameter, emailParameter, artParameter, vencpolizaParameter, usuarioSistemaParameter, usuarioParameter, idJornadaParameter, revendedorParameter, repartidorParameter, autorizaParameter, vendedorParameter, useraddParameter, res)
    End Function

    Public Overridable Function spEmpleados_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spEmpleados_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spEmpleados_Select_All_Result)("spEmpleados_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spEmpleados_Update(id As ObjectParameter, apellido As String, nombre As String, domicilio As String, telefono As String, celular As String, cuit As Nullable(Of Long), fechanac As Nullable(Of Date), fechaingreso As Nullable(Of Date), email As String, art As String, vencpoliza As Nullable(Of Date), usuarioSistema As Nullable(Of Boolean), usuario As String, idjornada As Nullable(Of Long), revendedor As Nullable(Of Boolean), repartidor As Nullable(Of Boolean), autoriza As Nullable(Of Boolean), vendedor As Nullable(Of Boolean), userupd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("apellido", apellido), New ObjectParameter("apellido", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim domicilioParameter As ObjectParameter = If(domicilio IsNot Nothing, New ObjectParameter("domicilio", domicilio), New ObjectParameter("domicilio", GetType(String)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("telefono", telefono), New ObjectParameter("telefono", GetType(String)))

        Dim celularParameter As ObjectParameter = If(celular IsNot Nothing, New ObjectParameter("celular", celular), New ObjectParameter("celular", GetType(String)))

        Dim cuitParameter As ObjectParameter = If(cuit.HasValue, New ObjectParameter("cuit", cuit), New ObjectParameter("cuit", GetType(Long)))

        Dim fechanacParameter As ObjectParameter = If(fechanac.HasValue, New ObjectParameter("fechanac", fechanac), New ObjectParameter("fechanac", GetType(Date)))

        Dim fechaingresoParameter As ObjectParameter = If(fechaingreso.HasValue, New ObjectParameter("fechaingreso", fechaingreso), New ObjectParameter("fechaingreso", GetType(Date)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("email", email), New ObjectParameter("email", GetType(String)))

        Dim artParameter As ObjectParameter = If(art IsNot Nothing, New ObjectParameter("art", art), New ObjectParameter("art", GetType(String)))

        Dim vencpolizaParameter As ObjectParameter = If(vencpoliza.HasValue, New ObjectParameter("vencpoliza", vencpoliza), New ObjectParameter("vencpoliza", GetType(Date)))

        Dim usuarioSistemaParameter As ObjectParameter = If(usuarioSistema.HasValue, New ObjectParameter("UsuarioSistema", usuarioSistema), New ObjectParameter("UsuarioSistema", GetType(Boolean)))

        Dim usuarioParameter As ObjectParameter = If(usuario IsNot Nothing, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(String)))

        Dim idjornadaParameter As ObjectParameter = If(idjornada.HasValue, New ObjectParameter("Idjornada", idjornada), New ObjectParameter("Idjornada", GetType(Long)))

        Dim revendedorParameter As ObjectParameter = If(revendedor.HasValue, New ObjectParameter("revendedor", revendedor), New ObjectParameter("revendedor", GetType(Boolean)))

        Dim repartidorParameter As ObjectParameter = If(repartidor.HasValue, New ObjectParameter("repartidor", repartidor), New ObjectParameter("repartidor", GetType(Boolean)))

        Dim autorizaParameter As ObjectParameter = If(autoriza.HasValue, New ObjectParameter("Autoriza", autoriza), New ObjectParameter("Autoriza", GetType(Boolean)))

        Dim vendedorParameter As ObjectParameter = If(vendedor.HasValue, New ObjectParameter("Vendedor", vendedor), New ObjectParameter("Vendedor", GetType(Boolean)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spEmpleados_Update", id, apellidoParameter, nombreParameter, domicilioParameter, telefonoParameter, celularParameter, cuitParameter, fechanacParameter, fechaingresoParameter, emailParameter, artParameter, vencpolizaParameter, usuarioSistemaParameter, usuarioParameter, idjornadaParameter, revendedorParameter, repartidorParameter, autorizaParameter, vendedorParameter, userupdParameter, res)
    End Function

    Public Overridable Function spFacturacion_Delete(idFacturacion As Nullable(Of Long), userdel As Nullable(Of Integer), fisico As Nullable(Of Boolean), logico As Nullable(Of Boolean), notaCredito As Nullable(Of Boolean), idCliente As Nullable(Of Long), nroFactura As Nullable(Of Long), monto As Nullable(Of Decimal), nota As String, mensaje As ObjectParameter, res As ObjectParameter) As Integer
        Dim idFacturacionParameter As ObjectParameter = If(idFacturacion.HasValue, New ObjectParameter("IdFacturacion", idFacturacion), New ObjectParameter("IdFacturacion", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Dim fisicoParameter As ObjectParameter = If(fisico.HasValue, New ObjectParameter("Fisico", fisico), New ObjectParameter("Fisico", GetType(Boolean)))

        Dim logicoParameter As ObjectParameter = If(logico.HasValue, New ObjectParameter("Logico", logico), New ObjectParameter("Logico", GetType(Boolean)))

        Dim notaCreditoParameter As ObjectParameter = If(notaCredito.HasValue, New ObjectParameter("NotaCredito", notaCredito), New ObjectParameter("NotaCredito", GetType(Boolean)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim nroFacturaParameter As ObjectParameter = If(nroFactura.HasValue, New ObjectParameter("NroFactura", nroFactura), New ObjectParameter("NroFactura", GetType(Long)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFacturacion_Delete", idFacturacionParameter, userdelParameter, fisicoParameter, logicoParameter, notaCreditoParameter, idClienteParameter, nroFacturaParameter, montoParameter, notaParameter, mensaje, res)
    End Function

    Public Overridable Function spFacturacion_Insert(iD As ObjectParameter, codigo As ObjectParameter, nroFactura As Nullable(Of Long), comprobanteNroNCND As Nullable(Of Long), fechaFactura As Nullable(Of Date), idCliente As Nullable(Of Long), iVA As Nullable(Of Decimal), montoIVA As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), total As Nullable(Of Decimal), condicionVta As String, condicionIVA As String, remitos As String, remitos1 As String, nroComprobante As String, nota As String, manual As Nullable(Of Boolean), facturaAnulada As Nullable(Of Boolean), idFacturaAnulada As Nullable(Of Long), comprobanteTipo As Nullable(Of Integer), ptoVta As Nullable(Of Integer), conceptoTipo As Nullable(Of Integer), fecha_Vto_Pago As Nullable(Of Date), fecha_Serv_Desde As Nullable(Of Date), fecha_Serv_Hasta As Nullable(Of Date), valorCambio As Nullable(Of Decimal), reutilizar As Nullable(Of Boolean), userAdd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim nroFacturaParameter As ObjectParameter = If(nroFactura.HasValue, New ObjectParameter("NroFactura", nroFactura), New ObjectParameter("NroFactura", GetType(Long)))

        Dim comprobanteNroNCNDParameter As ObjectParameter = If(comprobanteNroNCND.HasValue, New ObjectParameter("ComprobanteNroNCND", comprobanteNroNCND), New ObjectParameter("ComprobanteNroNCND", GetType(Long)))

        Dim fechaFacturaParameter As ObjectParameter = If(fechaFactura.HasValue, New ObjectParameter("FechaFactura", fechaFactura), New ObjectParameter("FechaFactura", GetType(Date)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim iVAParameter As ObjectParameter = If(iVA.HasValue, New ObjectParameter("IVA", iVA), New ObjectParameter("IVA", GetType(Decimal)))

        Dim montoIVAParameter As ObjectParameter = If(montoIVA.HasValue, New ObjectParameter("MontoIVA", montoIVA), New ObjectParameter("MontoIVA", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim condicionVtaParameter As ObjectParameter = If(condicionVta IsNot Nothing, New ObjectParameter("CondicionVta", condicionVta), New ObjectParameter("CondicionVta", GetType(String)))

        Dim condicionIVAParameter As ObjectParameter = If(condicionIVA IsNot Nothing, New ObjectParameter("CondicionIVA", condicionIVA), New ObjectParameter("CondicionIVA", GetType(String)))

        Dim remitosParameter As ObjectParameter = If(remitos IsNot Nothing, New ObjectParameter("Remitos", remitos), New ObjectParameter("Remitos", GetType(String)))

        Dim remitos1Parameter As ObjectParameter = If(remitos1 IsNot Nothing, New ObjectParameter("Remitos1", remitos1), New ObjectParameter("Remitos1", GetType(String)))

        Dim nroComprobanteParameter As ObjectParameter = If(nroComprobante IsNot Nothing, New ObjectParameter("NroComprobante", nroComprobante), New ObjectParameter("NroComprobante", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim manualParameter As ObjectParameter = If(manual.HasValue, New ObjectParameter("Manual", manual), New ObjectParameter("Manual", GetType(Boolean)))

        Dim facturaAnuladaParameter As ObjectParameter = If(facturaAnulada.HasValue, New ObjectParameter("FacturaAnulada", facturaAnulada), New ObjectParameter("FacturaAnulada", GetType(Boolean)))

        Dim idFacturaAnuladaParameter As ObjectParameter = If(idFacturaAnulada.HasValue, New ObjectParameter("IdFacturaAnulada", idFacturaAnulada), New ObjectParameter("IdFacturaAnulada", GetType(Long)))

        Dim comprobanteTipoParameter As ObjectParameter = If(comprobanteTipo.HasValue, New ObjectParameter("ComprobanteTipo", comprobanteTipo), New ObjectParameter("ComprobanteTipo", GetType(Integer)))

        Dim ptoVtaParameter As ObjectParameter = If(ptoVta.HasValue, New ObjectParameter("PtoVta", ptoVta), New ObjectParameter("PtoVta", GetType(Integer)))

        Dim conceptoTipoParameter As ObjectParameter = If(conceptoTipo.HasValue, New ObjectParameter("ConceptoTipo", conceptoTipo), New ObjectParameter("ConceptoTipo", GetType(Integer)))

        Dim fecha_Vto_PagoParameter As ObjectParameter = If(fecha_Vto_Pago.HasValue, New ObjectParameter("Fecha_Vto_Pago", fecha_Vto_Pago), New ObjectParameter("Fecha_Vto_Pago", GetType(Date)))

        Dim fecha_Serv_DesdeParameter As ObjectParameter = If(fecha_Serv_Desde.HasValue, New ObjectParameter("Fecha_Serv_Desde", fecha_Serv_Desde), New ObjectParameter("Fecha_Serv_Desde", GetType(Date)))

        Dim fecha_Serv_HastaParameter As ObjectParameter = If(fecha_Serv_Hasta.HasValue, New ObjectParameter("Fecha_Serv_Hasta", fecha_Serv_Hasta), New ObjectParameter("Fecha_Serv_Hasta", GetType(Date)))

        Dim valorCambioParameter As ObjectParameter = If(valorCambio.HasValue, New ObjectParameter("ValorCambio", valorCambio), New ObjectParameter("ValorCambio", GetType(Decimal)))

        Dim reutilizarParameter As ObjectParameter = If(reutilizar.HasValue, New ObjectParameter("Reutilizar", reutilizar), New ObjectParameter("Reutilizar", GetType(Boolean)))

        Dim userAddParameter As ObjectParameter = If(userAdd.HasValue, New ObjectParameter("UserAdd", userAdd), New ObjectParameter("UserAdd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFacturacion_Insert", iD, codigo, nroFacturaParameter, comprobanteNroNCNDParameter, fechaFacturaParameter, idClienteParameter, iVAParameter, montoIVAParameter, subtotalParameter, totalParameter, condicionVtaParameter, condicionIVAParameter, remitosParameter, remitos1Parameter, nroComprobanteParameter, notaParameter, manualParameter, facturaAnuladaParameter, idFacturaAnuladaParameter, comprobanteTipoParameter, ptoVtaParameter, conceptoTipoParameter, fecha_Vto_PagoParameter, fecha_Serv_DesdeParameter, fecha_Serv_HastaParameter, valorCambioParameter, reutilizarParameter, userAddParameter, res)
    End Function

    Public Overridable Function spFacturacion_Items_Update(iDPresGes As Nullable(Of Long), iDFacturacion As Nullable(Of Long), userUpd As Nullable(Of Integer), tipoRemito As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim iDPresGesParameter As ObjectParameter = If(iDPresGes.HasValue, New ObjectParameter("IDPresGes", iDPresGes), New ObjectParameter("IDPresGes", GetType(Long)))

        Dim iDFacturacionParameter As ObjectParameter = If(iDFacturacion.HasValue, New ObjectParameter("IDFacturacion", iDFacturacion), New ObjectParameter("IDFacturacion", GetType(Long)))

        Dim userUpdParameter As ObjectParameter = If(userUpd.HasValue, New ObjectParameter("UserUpd", userUpd), New ObjectParameter("UserUpd", GetType(Integer)))

        Dim tipoRemitoParameter As ObjectParameter = If(tipoRemito.HasValue, New ObjectParameter("TipoRemito", tipoRemito), New ObjectParameter("TipoRemito", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFacturacion_Items_Update", iDPresGesParameter, iDFacturacionParameter, userUpdParameter, tipoRemitoParameter, res)
    End Function

    Public Overridable Function spFacturacion_ItemsporRemito() As ObjectResult(Of spFacturacion_ItemsporRemito_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spFacturacion_ItemsporRemito_Result)("spFacturacion_ItemsporRemito")
    End Function

    Public Overridable Function spFacturacion_Remitos_Delete(idFacturacion As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idFacturacionParameter As ObjectParameter = If(idFacturacion.HasValue, New ObjectParameter("IdFacturacion", idFacturacion), New ObjectParameter("IdFacturacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFacturacion_Remitos_Delete", idFacturacionParameter, res)
    End Function

    Public Overridable Function spFacturacion_Remitos_Insert(idFacturacion As Nullable(Of Long), idPresGes As Nullable(Of Long), nroRemito As String, nroComprobante As String, nota_Gestion As String, nroFactura As Nullable(Of Long), sinPresupuesto As Nullable(Of Boolean), res As ObjectParameter) As Integer
        Dim idFacturacionParameter As ObjectParameter = If(idFacturacion.HasValue, New ObjectParameter("IdFacturacion", idFacturacion), New ObjectParameter("IdFacturacion", GetType(Long)))

        Dim idPresGesParameter As ObjectParameter = If(idPresGes.HasValue, New ObjectParameter("IdPresGes", idPresGes), New ObjectParameter("IdPresGes", GetType(Long)))

        Dim nroRemitoParameter As ObjectParameter = If(nroRemito IsNot Nothing, New ObjectParameter("NroRemito", nroRemito), New ObjectParameter("NroRemito", GetType(String)))

        Dim nroComprobanteParameter As ObjectParameter = If(nroComprobante IsNot Nothing, New ObjectParameter("NroComprobante", nroComprobante), New ObjectParameter("NroComprobante", GetType(String)))

        Dim nota_GestionParameter As ObjectParameter = If(nota_Gestion IsNot Nothing, New ObjectParameter("Nota_Gestion", nota_Gestion), New ObjectParameter("Nota_Gestion", GetType(String)))

        Dim nroFacturaParameter As ObjectParameter = If(nroFactura.HasValue, New ObjectParameter("NroFactura", nroFactura), New ObjectParameter("NroFactura", GetType(Long)))

        Dim sinPresupuestoParameter As ObjectParameter = If(sinPresupuesto.HasValue, New ObjectParameter("SinPresupuesto", sinPresupuesto), New ObjectParameter("SinPresupuesto", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFacturacion_Remitos_Insert", idFacturacionParameter, idPresGesParameter, nroRemitoParameter, nroComprobanteParameter, nota_GestionParameter, nroFacturaParameter, sinPresupuestoParameter, res)
    End Function

    Public Overridable Function spFacturacion_Select_All(eliminado As Nullable(Of Boolean)) As Integer
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFacturacion_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spFacturacion_Select_All_ProxFactura(proxFactura As ObjectParameter, tipoComprobante As Nullable(Of Integer)) As Integer
        Dim tipoComprobanteParameter As ObjectParameter = If(tipoComprobante.HasValue, New ObjectParameter("TipoComprobante", tipoComprobante), New ObjectParameter("TipoComprobante", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFacturacion_Select_All_ProxFactura", proxFactura, tipoComprobanteParameter)
    End Function

    Public Overridable Function spFacturacion_Update(iD As Nullable(Of Long), nroComprobante As String, nroOC As String, nota As String, userUpd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim iDParameter As ObjectParameter = If(iD.HasValue, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(Long)))

        Dim nroComprobanteParameter As ObjectParameter = If(nroComprobante IsNot Nothing, New ObjectParameter("NroComprobante", nroComprobante), New ObjectParameter("NroComprobante", GetType(String)))

        Dim nroOCParameter As ObjectParameter = If(nroOC IsNot Nothing, New ObjectParameter("NroOC", nroOC), New ObjectParameter("NroOC", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim userUpdParameter As ObjectParameter = If(userUpd.HasValue, New ObjectParameter("UserUpd", userUpd), New ObjectParameter("UserUpd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFacturacion_Update", iDParameter, nroComprobanteParameter, nroOCParameter, notaParameter, userUpdParameter, res)
    End Function

    Public Overridable Function spFacturacion_Update_Presupuestos(iDPresGes As Nullable(Of Long), nroComprobante As String, userUpd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim iDPresGesParameter As ObjectParameter = If(iDPresGes.HasValue, New ObjectParameter("IDPresGes", iDPresGes), New ObjectParameter("IDPresGes", GetType(Long)))

        Dim nroComprobanteParameter As ObjectParameter = If(nroComprobante IsNot Nothing, New ObjectParameter("NroComprobante", nroComprobante), New ObjectParameter("NroComprobante", GetType(String)))

        Dim userUpdParameter As ObjectParameter = If(userUpd.HasValue, New ObjectParameter("UserUpd", userUpd), New ObjectParameter("UserUpd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFacturacion_Update_Presupuestos", iDPresGesParameter, nroComprobanteParameter, userUpdParameter, res)
    End Function

    Public Overridable Function spFacturacionManual_Select_All() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFacturacionManual_Select_All")
    End Function

    Public Overridable Function spFacturacionManual_Update(iD As Nullable(Of Long), codigo As Nullable(Of Long), nroFactura As Nullable(Of Long), fechaFactura As Nullable(Of Date), idCliente As Nullable(Of Long), iVA As Nullable(Of Decimal), montoIVA As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), total As Nullable(Of Decimal), condicionVta As String, condicionIVA As String, nroComprobante As String, nota As String, manual As Nullable(Of Boolean), facturaAnulada As Nullable(Of Boolean), valorCambioFacturado As Nullable(Of Decimal), userUPD As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim iDParameter As ObjectParameter = If(iD.HasValue, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo.HasValue, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(Long)))

        Dim nroFacturaParameter As ObjectParameter = If(nroFactura.HasValue, New ObjectParameter("NroFactura", nroFactura), New ObjectParameter("NroFactura", GetType(Long)))

        Dim fechaFacturaParameter As ObjectParameter = If(fechaFactura.HasValue, New ObjectParameter("FechaFactura", fechaFactura), New ObjectParameter("FechaFactura", GetType(Date)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim iVAParameter As ObjectParameter = If(iVA.HasValue, New ObjectParameter("IVA", iVA), New ObjectParameter("IVA", GetType(Decimal)))

        Dim montoIVAParameter As ObjectParameter = If(montoIVA.HasValue, New ObjectParameter("MontoIVA", montoIVA), New ObjectParameter("MontoIVA", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim condicionVtaParameter As ObjectParameter = If(condicionVta IsNot Nothing, New ObjectParameter("CondicionVta", condicionVta), New ObjectParameter("CondicionVta", GetType(String)))

        Dim condicionIVAParameter As ObjectParameter = If(condicionIVA IsNot Nothing, New ObjectParameter("CondicionIVA", condicionIVA), New ObjectParameter("CondicionIVA", GetType(String)))

        Dim nroComprobanteParameter As ObjectParameter = If(nroComprobante IsNot Nothing, New ObjectParameter("NroComprobante", nroComprobante), New ObjectParameter("NroComprobante", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim manualParameter As ObjectParameter = If(manual.HasValue, New ObjectParameter("Manual", manual), New ObjectParameter("Manual", GetType(Boolean)))

        Dim facturaAnuladaParameter As ObjectParameter = If(facturaAnulada.HasValue, New ObjectParameter("FacturaAnulada", facturaAnulada), New ObjectParameter("FacturaAnulada", GetType(Boolean)))

        Dim valorCambioFacturadoParameter As ObjectParameter = If(valorCambioFacturado.HasValue, New ObjectParameter("ValorCambioFacturado", valorCambioFacturado), New ObjectParameter("ValorCambioFacturado", GetType(Decimal)))

        Dim userUPDParameter As ObjectParameter = If(userUPD.HasValue, New ObjectParameter("UserUPD", userUPD), New ObjectParameter("UserUPD", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFacturacionManual_Update", iDParameter, codigoParameter, nroFacturaParameter, fechaFacturaParameter, idClienteParameter, iVAParameter, montoIVAParameter, subtotalParameter, totalParameter, condicionVtaParameter, condicionIVAParameter, nroComprobanteParameter, notaParameter, manualParameter, facturaAnuladaParameter, valorCambioFacturadoParameter, userUPDParameter, res)
    End Function

    Public Overridable Function spFacturas_Delete_tmp() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFacturas_Delete_tmp")
    End Function

    Public Overridable Function spFacturas_Insert_tmp(idFacturacion As Nullable(Of Long)) As Integer
        Dim idFacturacionParameter As ObjectParameter = If(idFacturacion.HasValue, New ObjectParameter("IdFacturacion", idFacturacion), New ObjectParameter("IdFacturacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFacturas_Insert_tmp", idFacturacionParameter)
    End Function

    Public Overridable Function spFamilias_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFamilias_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spFamilias_Insert(id As ObjectParameter, codigo As ObjectParameter, nombre As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFamilias_Insert", id, codigo, nombreParameter, useraddParameter, res)
    End Function

    Public Overridable Function spFamilias_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spFamilias_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spFamilias_Select_All_Result)("spFamilias_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spFamilias_Update(id As Nullable(Of Long), codigo As String, nombre As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFamilias_Update", idParameter, codigoParameter, nombreParameter, userupdParameter, res)
    End Function

    Public Overridable Function spFarmacias_Conceptos_ACobrar() As ObjectResult(Of spFarmacias_Conceptos_ACobrar_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spFarmacias_Conceptos_ACobrar_Result)("spFarmacias_Conceptos_ACobrar")
    End Function

    Public Overridable Function spFarmacias_Conceptos_Delete(idConcepto As ObjectParameter, idFarmacia As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idFarmaciaParameter As ObjectParameter = If(idFarmacia.HasValue, New ObjectParameter("idFarmacia", idFarmacia), New ObjectParameter("idFarmacia", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFarmacias_Conceptos_Delete", idConcepto, idFarmaciaParameter, res)
    End Function

    Public Overridable Function spFarmacias_Conceptos_Insert(idConcepto As ObjectParameter, idFarmacia As Nullable(Of Long), frecuencia As String, valor As String) As Integer
        Dim idFarmaciaParameter As ObjectParameter = If(idFarmacia.HasValue, New ObjectParameter("IdFarmacia", idFarmacia), New ObjectParameter("IdFarmacia", GetType(Long)))

        Dim frecuenciaParameter As ObjectParameter = If(frecuencia IsNot Nothing, New ObjectParameter("Frecuencia", frecuencia), New ObjectParameter("Frecuencia", GetType(String)))

        Dim valorParameter As ObjectParameter = If(valor IsNot Nothing, New ObjectParameter("Valor", valor), New ObjectParameter("Valor", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFarmacias_Conceptos_Insert", idConcepto, idFarmaciaParameter, frecuenciaParameter, valorParameter)
    End Function

    Public Overridable Function spFarmacias_Conceptos_Select_By_IDFarmacia(iDFarmacia As Nullable(Of Long)) As ObjectResult(Of spFarmacias_Conceptos_Select_By_IDFarmacia_Result)
        Dim iDFarmaciaParameter As ObjectParameter = If(iDFarmacia.HasValue, New ObjectParameter("IDFarmacia", iDFarmacia), New ObjectParameter("IDFarmacia", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spFarmacias_Conceptos_Select_By_IDFarmacia_Result)("spFarmacias_Conceptos_Select_By_IDFarmacia", iDFarmaciaParameter)
    End Function

    Public Overridable Function spFarmacias_Conceptos_UpdFechaCobrado(idConcepto As Nullable(Of Long), idFarmacia As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idConceptoParameter As ObjectParameter = If(idConcepto.HasValue, New ObjectParameter("idConcepto", idConcepto), New ObjectParameter("idConcepto", GetType(Long)))

        Dim idFarmaciaParameter As ObjectParameter = If(idFarmacia.HasValue, New ObjectParameter("idFarmacia", idFarmacia), New ObjectParameter("idFarmacia", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFarmacias_Conceptos_UpdFechaCobrado", idConceptoParameter, idFarmaciaParameter, res)
    End Function

    Public Overridable Function spFarmacias_Delete(id As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFarmacias_Delete", idParameter, res)
    End Function

    Public Overridable Function spFarmacias_Insert(id As ObjectParameter, codigo As ObjectParameter, codPAMI As String, codFACAF As String, codFarmaLink As String, codFarmaPlus As String, codCSF As String, nombre As String, razonSocial As String, preferenciaPago As String, cbu As String, cuit As Nullable(Of Long), domicilio As String, localidad As Nullable(Of Long), telefono As String, email As String, contribuyente As String, estadoFarmacia As String, motivoBaja As String, eliminado As Nullable(Of Boolean), res As ObjectParameter) As Integer
        Dim codPAMIParameter As ObjectParameter = If(codPAMI IsNot Nothing, New ObjectParameter("CodPAMI", codPAMI), New ObjectParameter("CodPAMI", GetType(String)))

        Dim codFACAFParameter As ObjectParameter = If(codFACAF IsNot Nothing, New ObjectParameter("CodFACAF", codFACAF), New ObjectParameter("CodFACAF", GetType(String)))

        Dim codFarmaLinkParameter As ObjectParameter = If(codFarmaLink IsNot Nothing, New ObjectParameter("CodFarmaLink", codFarmaLink), New ObjectParameter("CodFarmaLink", GetType(String)))

        Dim codFarmaPlusParameter As ObjectParameter = If(codFarmaPlus IsNot Nothing, New ObjectParameter("CodFarmaPlus", codFarmaPlus), New ObjectParameter("CodFarmaPlus", GetType(String)))

        Dim codCSFParameter As ObjectParameter = If(codCSF IsNot Nothing, New ObjectParameter("CodCSF", codCSF), New ObjectParameter("CodCSF", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim razonSocialParameter As ObjectParameter = If(razonSocial IsNot Nothing, New ObjectParameter("RazonSocial", razonSocial), New ObjectParameter("RazonSocial", GetType(String)))

        Dim preferenciaPagoParameter As ObjectParameter = If(preferenciaPago IsNot Nothing, New ObjectParameter("PreferenciaPago", preferenciaPago), New ObjectParameter("PreferenciaPago", GetType(String)))

        Dim cbuParameter As ObjectParameter = If(cbu IsNot Nothing, New ObjectParameter("Cbu", cbu), New ObjectParameter("Cbu", GetType(String)))

        Dim cuitParameter As ObjectParameter = If(cuit.HasValue, New ObjectParameter("Cuit", cuit), New ObjectParameter("Cuit", GetType(Long)))

        Dim domicilioParameter As ObjectParameter = If(domicilio IsNot Nothing, New ObjectParameter("Domicilio", domicilio), New ObjectParameter("Domicilio", GetType(String)))

        Dim localidadParameter As ObjectParameter = If(localidad.HasValue, New ObjectParameter("Localidad", localidad), New ObjectParameter("Localidad", GetType(Long)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("Email", email), New ObjectParameter("Email", GetType(String)))

        Dim contribuyenteParameter As ObjectParameter = If(contribuyente IsNot Nothing, New ObjectParameter("Contribuyente", contribuyente), New ObjectParameter("Contribuyente", GetType(String)))

        Dim estadoFarmaciaParameter As ObjectParameter = If(estadoFarmacia IsNot Nothing, New ObjectParameter("EstadoFarmacia", estadoFarmacia), New ObjectParameter("EstadoFarmacia", GetType(String)))

        Dim motivoBajaParameter As ObjectParameter = If(motivoBaja IsNot Nothing, New ObjectParameter("MotivoBaja", motivoBaja), New ObjectParameter("MotivoBaja", GetType(String)))

        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFarmacias_Insert", id, codigo, codPAMIParameter, codFACAFParameter, codFarmaLinkParameter, codFarmaPlusParameter, codCSFParameter, nombreParameter, razonSocialParameter, preferenciaPagoParameter, cbuParameter, cuitParameter, domicilioParameter, localidadParameter, telefonoParameter, emailParameter, contribuyenteParameter, estadoFarmaciaParameter, motivoBajaParameter, eliminadoParameter, res)
    End Function

    Public Overridable Function spFarmacias_Insert_old(id As ObjectParameter, codigo As ObjectParameter, codPAMI As Nullable(Of Long), codFACAF As String, nombre As String, cuit As Nullable(Of Long), domicilio As String, localidad As Nullable(Of Long), telefono As String, email As String, contribuyente As String, estadoFarmacia As String, motivoBaja As String, eliminado As Nullable(Of Boolean), res As ObjectParameter) As Integer
        Dim codPAMIParameter As ObjectParameter = If(codPAMI.HasValue, New ObjectParameter("CodPAMI", codPAMI), New ObjectParameter("CodPAMI", GetType(Long)))

        Dim codFACAFParameter As ObjectParameter = If(codFACAF IsNot Nothing, New ObjectParameter("CodFACAF", codFACAF), New ObjectParameter("CodFACAF", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim cuitParameter As ObjectParameter = If(cuit.HasValue, New ObjectParameter("Cuit", cuit), New ObjectParameter("Cuit", GetType(Long)))

        Dim domicilioParameter As ObjectParameter = If(domicilio IsNot Nothing, New ObjectParameter("Domicilio", domicilio), New ObjectParameter("Domicilio", GetType(String)))

        Dim localidadParameter As ObjectParameter = If(localidad.HasValue, New ObjectParameter("Localidad", localidad), New ObjectParameter("Localidad", GetType(Long)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("Email", email), New ObjectParameter("Email", GetType(String)))

        Dim contribuyenteParameter As ObjectParameter = If(contribuyente IsNot Nothing, New ObjectParameter("Contribuyente", contribuyente), New ObjectParameter("Contribuyente", GetType(String)))

        Dim estadoFarmaciaParameter As ObjectParameter = If(estadoFarmacia IsNot Nothing, New ObjectParameter("EstadoFarmacia", estadoFarmacia), New ObjectParameter("EstadoFarmacia", GetType(String)))

        Dim motivoBajaParameter As ObjectParameter = If(motivoBaja IsNot Nothing, New ObjectParameter("MotivoBaja", motivoBaja), New ObjectParameter("MotivoBaja", GetType(String)))

        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFarmacias_Insert_old", id, codigo, codPAMIParameter, codFACAFParameter, nombreParameter, cuitParameter, domicilioParameter, localidadParameter, telefonoParameter, emailParameter, contribuyenteParameter, estadoFarmaciaParameter, motivoBajaParameter, eliminadoParameter, res)
    End Function

    Public Overridable Function spFarmacias_Profesionales_Delete(idProfesional As ObjectParameter, idFarmacia As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idFarmaciaParameter As ObjectParameter = If(idFarmacia.HasValue, New ObjectParameter("idFarmacia", idFarmacia), New ObjectParameter("idFarmacia", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFarmacias_Profesionales_Delete", idProfesional, idFarmaciaParameter, res)
    End Function

    Public Overridable Function spFarmacias_Profesionales_Insert(idProfesional As ObjectParameter, idFarmacia As Nullable(Of Long)) As Integer
        Dim idFarmaciaParameter As ObjectParameter = If(idFarmacia.HasValue, New ObjectParameter("IdFarmacia", idFarmacia), New ObjectParameter("IdFarmacia", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFarmacias_Profesionales_Insert", idProfesional, idFarmaciaParameter)
    End Function

    Public Overridable Function spFarmacias_Profesionales_Select_By_IDFarmacia(iDFarmacia As Nullable(Of Long)) As ObjectResult(Of spFarmacias_Profesionales_Select_By_IDFarmacia_Result)
        Dim iDFarmaciaParameter As ObjectParameter = If(iDFarmacia.HasValue, New ObjectParameter("IDFarmacia", iDFarmacia), New ObjectParameter("IDFarmacia", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spFarmacias_Profesionales_Select_By_IDFarmacia_Result)("spFarmacias_Profesionales_Select_By_IDFarmacia", iDFarmaciaParameter)
    End Function

    Public Overridable Function spFarmacias_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spFarmacias_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spFarmacias_Select_All_Result)("spFarmacias_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spFarmacias_Update(id As ObjectParameter, codigo As ObjectParameter, codPAMI As Nullable(Of Long), codFACAF As String, codFarmaLink As String, codFarmaPlus As String, codCSF As String, razonSocial As String, preferenciaPago As String, cbu As String, nombre As String, cuit As Nullable(Of Long), domicilio As String, localidad As Nullable(Of Long), telefono As String, email As String, contribuyente As String, estadoFarmacia As String, motivoBaja As String, eliminado As Nullable(Of Boolean), res As ObjectParameter) As Integer
        Dim codPAMIParameter As ObjectParameter = If(codPAMI.HasValue, New ObjectParameter("CodPAMI", codPAMI), New ObjectParameter("CodPAMI", GetType(Long)))

        Dim codFACAFParameter As ObjectParameter = If(codFACAF IsNot Nothing, New ObjectParameter("CodFACAF", codFACAF), New ObjectParameter("CodFACAF", GetType(String)))

        Dim codFarmaLinkParameter As ObjectParameter = If(codFarmaLink IsNot Nothing, New ObjectParameter("CodFarmaLink", codFarmaLink), New ObjectParameter("CodFarmaLink", GetType(String)))

        Dim codFarmaPlusParameter As ObjectParameter = If(codFarmaPlus IsNot Nothing, New ObjectParameter("CodFarmaPlus", codFarmaPlus), New ObjectParameter("CodFarmaPlus", GetType(String)))

        Dim codCSFParameter As ObjectParameter = If(codCSF IsNot Nothing, New ObjectParameter("CodCSF", codCSF), New ObjectParameter("CodCSF", GetType(String)))

        Dim razonSocialParameter As ObjectParameter = If(razonSocial IsNot Nothing, New ObjectParameter("RazonSocial", razonSocial), New ObjectParameter("RazonSocial", GetType(String)))

        Dim preferenciaPagoParameter As ObjectParameter = If(preferenciaPago IsNot Nothing, New ObjectParameter("PreferenciaPago", preferenciaPago), New ObjectParameter("PreferenciaPago", GetType(String)))

        Dim cbuParameter As ObjectParameter = If(cbu IsNot Nothing, New ObjectParameter("Cbu", cbu), New ObjectParameter("Cbu", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim cuitParameter As ObjectParameter = If(cuit.HasValue, New ObjectParameter("Cuit", cuit), New ObjectParameter("Cuit", GetType(Long)))

        Dim domicilioParameter As ObjectParameter = If(domicilio IsNot Nothing, New ObjectParameter("Domicilio", domicilio), New ObjectParameter("Domicilio", GetType(String)))

        Dim localidadParameter As ObjectParameter = If(localidad.HasValue, New ObjectParameter("Localidad", localidad), New ObjectParameter("Localidad", GetType(Long)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("Email", email), New ObjectParameter("Email", GetType(String)))

        Dim contribuyenteParameter As ObjectParameter = If(contribuyente IsNot Nothing, New ObjectParameter("Contribuyente", contribuyente), New ObjectParameter("Contribuyente", GetType(String)))

        Dim estadoFarmaciaParameter As ObjectParameter = If(estadoFarmacia IsNot Nothing, New ObjectParameter("EstadoFarmacia", estadoFarmacia), New ObjectParameter("EstadoFarmacia", GetType(String)))

        Dim motivoBajaParameter As ObjectParameter = If(motivoBaja IsNot Nothing, New ObjectParameter("MotivoBaja", motivoBaja), New ObjectParameter("MotivoBaja", GetType(String)))

        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFarmacias_Update", id, codigo, codPAMIParameter, codFACAFParameter, codFarmaLinkParameter, codFarmaPlusParameter, codCSFParameter, razonSocialParameter, preferenciaPagoParameter, cbuParameter, nombreParameter, cuitParameter, domicilioParameter, localidadParameter, telefonoParameter, emailParameter, contribuyenteParameter, estadoFarmaciaParameter, motivoBajaParameter, eliminadoParameter, res)
    End Function

    Public Overridable Function spFiltrar_Ventas_Clientes_Select_All(idcliente As String, desde As Nullable(Of Date), hasta As Nullable(Of Date), res As ObjectParameter) As ObjectResult(Of spFiltrar_Ventas_Clientes_Select_All_Result)
        Dim idclienteParameter As ObjectParameter = If(idcliente IsNot Nothing, New ObjectParameter("idcliente", idcliente), New ObjectParameter("idcliente", GetType(String)))

        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("desde", desde), New ObjectParameter("desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("hasta", hasta), New ObjectParameter("hasta", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spFiltrar_Ventas_Clientes_Select_All_Result)("spFiltrar_Ventas_Clientes_Select_All", idclienteParameter, desdeParameter, hastaParameter, res)
    End Function

    Public Overridable Function spFiltrar_Ventas_Clientes_Select_All2(idcliente As String, desde As Nullable(Of Date), hasta As Nullable(Of Date), res As ObjectParameter) As ObjectResult(Of spFiltrar_Ventas_Clientes_Select_All2_Result)
        Dim idclienteParameter As ObjectParameter = If(idcliente IsNot Nothing, New ObjectParameter("idcliente", idcliente), New ObjectParameter("idcliente", GetType(String)))

        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("desde", desde), New ObjectParameter("desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("hasta", hasta), New ObjectParameter("hasta", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spFiltrar_Ventas_Clientes_Select_All2_Result)("spFiltrar_Ventas_Clientes_Select_All2", idclienteParameter, desdeParameter, hastaParameter, res)
    End Function

    Public Overridable Function spGastos_Cheques_Delete(idGasto As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idGastoParameter As ObjectParameter = If(idGasto.HasValue, New ObjectParameter("IdGasto", idGasto), New ObjectParameter("IdGasto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGastos_Cheques_Delete", idGastoParameter, res)
    End Function

    Public Overridable Function spGastos_Cheques_Insert(idGasto As Nullable(Of Long), idCheque As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idGastoParameter As ObjectParameter = If(idGasto.HasValue, New ObjectParameter("IdGasto", idGasto), New ObjectParameter("IdGasto", GetType(Long)))

        Dim idChequeParameter As ObjectParameter = If(idCheque.HasValue, New ObjectParameter("IdCheque", idCheque), New ObjectParameter("IdCheque", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGastos_Cheques_Insert", idGastoParameter, idChequeParameter, res)
    End Function

    Public Overridable Function spGastos_Delete(id As Nullable(Of Long), userDel As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim userDelParameter As ObjectParameter = If(userDel.HasValue, New ObjectParameter("UserDel", userDel), New ObjectParameter("UserDel", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGastos_Delete", idParameter, userDelParameter, res)
    End Function

    Public Overridable Function spGastos_Delete_tmp() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGastos_Delete_tmp")
    End Function

    Public Overridable Function spGastos_Det_Delete(idGasto As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idGastoParameter As ObjectParameter = If(idGasto.HasValue, New ObjectParameter("IdGasto", idGasto), New ObjectParameter("IdGasto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGastos_Det_Delete", idGastoParameter, res)
    End Function

    Public Overridable Function spGastos_Det_Insert(idGasto As Nullable(Of Long), subtotal As Nullable(Of Decimal), porcIva As Nullable(Of Decimal), montoIVA As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idGastoParameter As ObjectParameter = If(idGasto.HasValue, New ObjectParameter("IdGasto", idGasto), New ObjectParameter("IdGasto", GetType(Long)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim porcIvaParameter As ObjectParameter = If(porcIva.HasValue, New ObjectParameter("PorcIva", porcIva), New ObjectParameter("PorcIva", GetType(Decimal)))

        Dim montoIVAParameter As ObjectParameter = If(montoIVA.HasValue, New ObjectParameter("MontoIVA", montoIVA), New ObjectParameter("MontoIVA", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGastos_Det_Insert", idGastoParameter, subtotalParameter, porcIvaParameter, montoIVAParameter, res)
    End Function

    Public Overridable Function spGastos_Det_Select_by_IdGasto(idGasto As Nullable(Of Long)) As ObjectResult(Of spGastos_Det_Select_by_IdGasto_Result)
        Dim idGastoParameter As ObjectParameter = If(idGasto.HasValue, New ObjectParameter("IdGasto", idGasto), New ObjectParameter("IdGasto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spGastos_Det_Select_by_IdGasto_Result)("spGastos_Det_Select_by_IdGasto", idGastoParameter)
    End Function

    Public Overridable Function spGastos_Det_Update(idGasto As Nullable(Of Long), subtotal As Nullable(Of Decimal), porcIva As Nullable(Of Decimal), montoIVA As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idGastoParameter As ObjectParameter = If(idGasto.HasValue, New ObjectParameter("IdGasto", idGasto), New ObjectParameter("IdGasto", GetType(Long)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim porcIvaParameter As ObjectParameter = If(porcIva.HasValue, New ObjectParameter("PorcIva", porcIva), New ObjectParameter("PorcIva", GetType(Decimal)))

        Dim montoIVAParameter As ObjectParameter = If(montoIVA.HasValue, New ObjectParameter("MontoIVA", montoIVA), New ObjectParameter("MontoIVA", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGastos_Det_Update", idGastoParameter, subtotalParameter, porcIvaParameter, montoIVAParameter, res)
    End Function

    Public Overridable Function spGastos_Impuestos_Insert(idGasto As Nullable(Of Long), codigoImpuesto As String, nroDocumento As String, monto As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idGastoParameter As ObjectParameter = If(idGasto.HasValue, New ObjectParameter("IdGasto", idGasto), New ObjectParameter("IdGasto", GetType(Long)))

        Dim codigoImpuestoParameter As ObjectParameter = If(codigoImpuesto IsNot Nothing, New ObjectParameter("CodigoImpuesto", codigoImpuesto), New ObjectParameter("CodigoImpuesto", GetType(String)))

        Dim nroDocumentoParameter As ObjectParameter = If(nroDocumento IsNot Nothing, New ObjectParameter("NroDocumento", nroDocumento), New ObjectParameter("NroDocumento", GetType(String)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGastos_Impuestos_Insert", idGastoParameter, codigoImpuestoParameter, nroDocumentoParameter, montoParameter, res)
    End Function

    Public Overridable Function spGastos_Impuestos_Update(id As Nullable(Of Long), nroDocumento As String, monto As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim nroDocumentoParameter As ObjectParameter = If(nroDocumento IsNot Nothing, New ObjectParameter("NroDocumento", nroDocumento), New ObjectParameter("NroDocumento", GetType(String)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGastos_Impuestos_Update", idParameter, nroDocumentoParameter, montoParameter, res)
    End Function

    Public Overridable Function spGastos_Insert(id As ObjectParameter, idRecepcion As Nullable(Of Long), codigo As ObjectParameter, fechaGasto As Nullable(Of Date), tipoGasto As String, idProveedor As Nullable(Of Long), idMoneda As Nullable(Of Long), valorCambio As Nullable(Of Decimal), comprobanteTipo As String, nroFactura As String, nroRemito As String, subtotalExento As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), cantIVA As Nullable(Of Short), montoIva As Nullable(Of Decimal), total As Nullable(Of Decimal), totalPesos As Nullable(Of Decimal), deuda As Nullable(Of Decimal), cancelado As Nullable(Of Boolean), descripcion As String, impuestos As Nullable(Of Decimal), imputaraOtroPeriodo As Nullable(Of Boolean), periodoImputacion As Nullable(Of Date), ptoVta As String, nroCompr As String, ptoVtaRemito As String, nroComprRemito As String, usuarioGasto As String, userAdd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idRecepcionParameter As ObjectParameter = If(idRecepcion.HasValue, New ObjectParameter("IdRecepcion", idRecepcion), New ObjectParameter("IdRecepcion", GetType(Long)))

        Dim fechaGastoParameter As ObjectParameter = If(fechaGasto.HasValue, New ObjectParameter("FechaGasto", fechaGasto), New ObjectParameter("FechaGasto", GetType(Date)))

        Dim tipoGastoParameter As ObjectParameter = If(tipoGasto IsNot Nothing, New ObjectParameter("tipoGasto", tipoGasto), New ObjectParameter("tipoGasto", GetType(String)))

        Dim idProveedorParameter As ObjectParameter = If(idProveedor.HasValue, New ObjectParameter("IdProveedor", idProveedor), New ObjectParameter("IdProveedor", GetType(Long)))

        Dim idMonedaParameter As ObjectParameter = If(idMoneda.HasValue, New ObjectParameter("IdMoneda", idMoneda), New ObjectParameter("IdMoneda", GetType(Long)))

        Dim valorCambioParameter As ObjectParameter = If(valorCambio.HasValue, New ObjectParameter("ValorCambio", valorCambio), New ObjectParameter("ValorCambio", GetType(Decimal)))

        Dim comprobanteTipoParameter As ObjectParameter = If(comprobanteTipo IsNot Nothing, New ObjectParameter("ComprobanteTipo", comprobanteTipo), New ObjectParameter("ComprobanteTipo", GetType(String)))

        Dim nroFacturaParameter As ObjectParameter = If(nroFactura IsNot Nothing, New ObjectParameter("NroFactura", nroFactura), New ObjectParameter("NroFactura", GetType(String)))

        Dim nroRemitoParameter As ObjectParameter = If(nroRemito IsNot Nothing, New ObjectParameter("NroRemito", nroRemito), New ObjectParameter("NroRemito", GetType(String)))

        Dim subtotalExentoParameter As ObjectParameter = If(subtotalExento.HasValue, New ObjectParameter("SubtotalExento", subtotalExento), New ObjectParameter("SubtotalExento", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim cantIVAParameter As ObjectParameter = If(cantIVA.HasValue, New ObjectParameter("CantIVA", cantIVA), New ObjectParameter("CantIVA", GetType(Short)))

        Dim montoIvaParameter As ObjectParameter = If(montoIva.HasValue, New ObjectParameter("MontoIva", montoIva), New ObjectParameter("MontoIva", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim totalPesosParameter As ObjectParameter = If(totalPesos.HasValue, New ObjectParameter("TotalPesos", totalPesos), New ObjectParameter("TotalPesos", GetType(Decimal)))

        Dim deudaParameter As ObjectParameter = If(deuda.HasValue, New ObjectParameter("Deuda", deuda), New ObjectParameter("Deuda", GetType(Decimal)))

        Dim canceladoParameter As ObjectParameter = If(cancelado.HasValue, New ObjectParameter("Cancelado", cancelado), New ObjectParameter("Cancelado", GetType(Boolean)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Dim impuestosParameter As ObjectParameter = If(impuestos.HasValue, New ObjectParameter("Impuestos", impuestos), New ObjectParameter("Impuestos", GetType(Decimal)))

        Dim imputaraOtroPeriodoParameter As ObjectParameter = If(imputaraOtroPeriodo.HasValue, New ObjectParameter("ImputaraOtroPeriodo", imputaraOtroPeriodo), New ObjectParameter("ImputaraOtroPeriodo", GetType(Boolean)))

        Dim periodoImputacionParameter As ObjectParameter = If(periodoImputacion.HasValue, New ObjectParameter("PeriodoImputacion", periodoImputacion), New ObjectParameter("PeriodoImputacion", GetType(Date)))

        Dim ptoVtaParameter As ObjectParameter = If(ptoVta IsNot Nothing, New ObjectParameter("PtoVta", ptoVta), New ObjectParameter("PtoVta", GetType(String)))

        Dim nroComprParameter As ObjectParameter = If(nroCompr IsNot Nothing, New ObjectParameter("NroCompr", nroCompr), New ObjectParameter("NroCompr", GetType(String)))

        Dim ptoVtaRemitoParameter As ObjectParameter = If(ptoVtaRemito IsNot Nothing, New ObjectParameter("PtoVtaRemito", ptoVtaRemito), New ObjectParameter("PtoVtaRemito", GetType(String)))

        Dim nroComprRemitoParameter As ObjectParameter = If(nroComprRemito IsNot Nothing, New ObjectParameter("NroComprRemito", nroComprRemito), New ObjectParameter("NroComprRemito", GetType(String)))

        Dim usuarioGastoParameter As ObjectParameter = If(usuarioGasto IsNot Nothing, New ObjectParameter("UsuarioGasto", usuarioGasto), New ObjectParameter("UsuarioGasto", GetType(String)))

        Dim userAddParameter As ObjectParameter = If(userAdd.HasValue, New ObjectParameter("UserAdd", userAdd), New ObjectParameter("UserAdd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGastos_Insert", id, idRecepcionParameter, codigo, fechaGastoParameter, tipoGastoParameter, idProveedorParameter, idMonedaParameter, valorCambioParameter, comprobanteTipoParameter, nroFacturaParameter, nroRemitoParameter, subtotalExentoParameter, subtotalParameter, cantIVAParameter, montoIvaParameter, totalParameter, totalPesosParameter, deudaParameter, canceladoParameter, descripcionParameter, impuestosParameter, imputaraOtroPeriodoParameter, periodoImputacionParameter, ptoVtaParameter, nroComprParameter, ptoVtaRemitoParameter, nroComprRemitoParameter, usuarioGastoParameter, userAddParameter, res)
    End Function

    Public Overridable Function spGastos_Insert_tmp(idGasto As Nullable(Of Long)) As Integer
        Dim idGastoParameter As ObjectParameter = If(idGasto.HasValue, New ObjectParameter("IdGasto", idGasto), New ObjectParameter("IdGasto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGastos_Insert_tmp", idGastoParameter)
    End Function

    Public Overridable Function spGastos_NotasCredito_Insert(idGasto As Nullable(Of Long), codigoGasto As String, res As ObjectParameter) As Integer
        Dim idGastoParameter As ObjectParameter = If(idGasto.HasValue, New ObjectParameter("IdGasto", idGasto), New ObjectParameter("IdGasto", GetType(Long)))

        Dim codigoGastoParameter As ObjectParameter = If(codigoGasto IsNot Nothing, New ObjectParameter("CodigoGasto", codigoGasto), New ObjectParameter("CodigoGasto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGastos_NotasCredito_Insert", idGastoParameter, codigoGastoParameter, res)
    End Function

    Public Overridable Function spGastos_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spGastos_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spGastos_Select_All_Result)("spGastos_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spGastos_Update(id As ObjectParameter, fechaGasto As Nullable(Of Date), tipoGasto As String, idProveedor As Nullable(Of Long), idMoneda As Nullable(Of Long), valorCambio As Nullable(Of Decimal), comprobanteTipo As String, nroFactura As String, nroRemito As String, subtotalExento As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), cantIVA As Nullable(Of Short), montoIva As Nullable(Of Decimal), total As Nullable(Of Decimal), totalPesos As Nullable(Of Decimal), descripcion As String, impuestos As Nullable(Of Decimal), imputaraOtroPeriodo As Nullable(Of Boolean), periodoImputacion As Nullable(Of Date), ptoVta As String, nroCompr As String, ptoVtaRemito As String, nroComprRemito As String, controlRemito As Nullable(Of Boolean), controlFactura As Nullable(Of Boolean), usuarioGasto As String, userUpd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim fechaGastoParameter As ObjectParameter = If(fechaGasto.HasValue, New ObjectParameter("FechaGasto", fechaGasto), New ObjectParameter("FechaGasto", GetType(Date)))

        Dim tipoGastoParameter As ObjectParameter = If(tipoGasto IsNot Nothing, New ObjectParameter("tipoGasto", tipoGasto), New ObjectParameter("tipoGasto", GetType(String)))

        Dim idProveedorParameter As ObjectParameter = If(idProveedor.HasValue, New ObjectParameter("IdProveedor", idProveedor), New ObjectParameter("IdProveedor", GetType(Long)))

        Dim idMonedaParameter As ObjectParameter = If(idMoneda.HasValue, New ObjectParameter("IdMoneda", idMoneda), New ObjectParameter("IdMoneda", GetType(Long)))

        Dim valorCambioParameter As ObjectParameter = If(valorCambio.HasValue, New ObjectParameter("ValorCambio", valorCambio), New ObjectParameter("ValorCambio", GetType(Decimal)))

        Dim comprobanteTipoParameter As ObjectParameter = If(comprobanteTipo IsNot Nothing, New ObjectParameter("ComprobanteTipo", comprobanteTipo), New ObjectParameter("ComprobanteTipo", GetType(String)))

        Dim nroFacturaParameter As ObjectParameter = If(nroFactura IsNot Nothing, New ObjectParameter("NroFactura", nroFactura), New ObjectParameter("NroFactura", GetType(String)))

        Dim nroRemitoParameter As ObjectParameter = If(nroRemito IsNot Nothing, New ObjectParameter("NroRemito", nroRemito), New ObjectParameter("NroRemito", GetType(String)))

        Dim subtotalExentoParameter As ObjectParameter = If(subtotalExento.HasValue, New ObjectParameter("SubtotalExento", subtotalExento), New ObjectParameter("SubtotalExento", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim cantIVAParameter As ObjectParameter = If(cantIVA.HasValue, New ObjectParameter("CantIVA", cantIVA), New ObjectParameter("CantIVA", GetType(Short)))

        Dim montoIvaParameter As ObjectParameter = If(montoIva.HasValue, New ObjectParameter("MontoIva", montoIva), New ObjectParameter("MontoIva", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim totalPesosParameter As ObjectParameter = If(totalPesos.HasValue, New ObjectParameter("TotalPesos", totalPesos), New ObjectParameter("TotalPesos", GetType(Decimal)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Dim impuestosParameter As ObjectParameter = If(impuestos.HasValue, New ObjectParameter("Impuestos", impuestos), New ObjectParameter("Impuestos", GetType(Decimal)))

        Dim imputaraOtroPeriodoParameter As ObjectParameter = If(imputaraOtroPeriodo.HasValue, New ObjectParameter("ImputaraOtroPeriodo", imputaraOtroPeriodo), New ObjectParameter("ImputaraOtroPeriodo", GetType(Boolean)))

        Dim periodoImputacionParameter As ObjectParameter = If(periodoImputacion.HasValue, New ObjectParameter("PeriodoImputacion", periodoImputacion), New ObjectParameter("PeriodoImputacion", GetType(Date)))

        Dim ptoVtaParameter As ObjectParameter = If(ptoVta IsNot Nothing, New ObjectParameter("PtoVta", ptoVta), New ObjectParameter("PtoVta", GetType(String)))

        Dim nroComprParameter As ObjectParameter = If(nroCompr IsNot Nothing, New ObjectParameter("NroCompr", nroCompr), New ObjectParameter("NroCompr", GetType(String)))

        Dim ptoVtaRemitoParameter As ObjectParameter = If(ptoVtaRemito IsNot Nothing, New ObjectParameter("PtoVtaRemito", ptoVtaRemito), New ObjectParameter("PtoVtaRemito", GetType(String)))

        Dim nroComprRemitoParameter As ObjectParameter = If(nroComprRemito IsNot Nothing, New ObjectParameter("NroComprRemito", nroComprRemito), New ObjectParameter("NroComprRemito", GetType(String)))

        Dim controlRemitoParameter As ObjectParameter = If(controlRemito.HasValue, New ObjectParameter("ControlRemito", controlRemito), New ObjectParameter("ControlRemito", GetType(Boolean)))

        Dim controlFacturaParameter As ObjectParameter = If(controlFactura.HasValue, New ObjectParameter("ControlFactura", controlFactura), New ObjectParameter("ControlFactura", GetType(Boolean)))

        Dim usuarioGastoParameter As ObjectParameter = If(usuarioGasto IsNot Nothing, New ObjectParameter("UsuarioGasto", usuarioGasto), New ObjectParameter("UsuarioGasto", GetType(String)))

        Dim userUpdParameter As ObjectParameter = If(userUpd.HasValue, New ObjectParameter("UserUpd", userUpd), New ObjectParameter("UserUpd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGastos_Update", id, fechaGastoParameter, tipoGastoParameter, idProveedorParameter, idMonedaParameter, valorCambioParameter, comprobanteTipoParameter, nroFacturaParameter, nroRemitoParameter, subtotalExentoParameter, subtotalParameter, cantIVAParameter, montoIvaParameter, totalParameter, totalPesosParameter, descripcionParameter, impuestosParameter, imputaraOtroPeriodoParameter, periodoImputacionParameter, ptoVtaParameter, nroComprParameter, ptoVtaRemitoParameter, nroComprRemitoParameter, controlRemitoParameter, controlFacturaParameter, usuarioGastoParameter, userUpdParameter, res)
    End Function

    Public Overridable Function spGenerar_Presupuestos_Det_TMP() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGenerar_Presupuestos_Det_TMP")
    End Function

    Public Overridable Function spGetLote(idop As Nullable(Of Long), idcontrol As Nullable(Of Long), idsector As Nullable(Of Long), frec As Nullable(Of Integer), idUMFrec As Nullable(Of Long), objeto As String, nro As String, lote As ObjectParameter) As Integer
        Dim idopParameter As ObjectParameter = If(idop.HasValue, New ObjectParameter("idop", idop), New ObjectParameter("idop", GetType(Long)))

        Dim idcontrolParameter As ObjectParameter = If(idcontrol.HasValue, New ObjectParameter("idcontrol", idcontrol), New ObjectParameter("idcontrol", GetType(Long)))

        Dim idsectorParameter As ObjectParameter = If(idsector.HasValue, New ObjectParameter("idsector", idsector), New ObjectParameter("idsector", GetType(Long)))

        Dim frecParameter As ObjectParameter = If(frec.HasValue, New ObjectParameter("Frec", frec), New ObjectParameter("Frec", GetType(Integer)))

        Dim idUMFrecParameter As ObjectParameter = If(idUMFrec.HasValue, New ObjectParameter("IdUMFrec", idUMFrec), New ObjectParameter("IdUMFrec", GetType(Long)))

        Dim objetoParameter As ObjectParameter = If(objeto IsNot Nothing, New ObjectParameter("objeto", objeto), New ObjectParameter("objeto", GetType(String)))

        Dim nroParameter As ObjectParameter = If(nro IsNot Nothing, New ObjectParameter("nro", nro), New ObjectParameter("nro", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGetLote", idopParameter, idcontrolParameter, idsectorParameter, frecParameter, idUMFrecParameter, objetoParameter, nroParameter, lote)
    End Function

    Public Overridable Function spGetPermisos(iduser As Nullable(Of Long), form As String, alta As ObjectParameter, modifica As ObjectParameter, baja As ObjectParameter, bajaFisica As ObjectParameter) As Integer
        Dim iduserParameter As ObjectParameter = If(iduser.HasValue, New ObjectParameter("iduser", iduser), New ObjectParameter("iduser", GetType(Long)))

        Dim formParameter As ObjectParameter = If(form IsNot Nothing, New ObjectParameter("form", form), New ObjectParameter("form", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGetPermisos", iduserParameter, formParameter, alta, modifica, baja, bajaFisica)
    End Function

    Public Overridable Function spGrupos_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGrupos_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spGrupos_GruposOS_Select_All_By_IDMandataria(idmandataria As Nullable(Of Long)) As ObjectResult(Of spGrupos_GruposOS_Select_All_By_IDMandataria_Result)
        Dim idmandatariaParameter As ObjectParameter = If(idmandataria.HasValue, New ObjectParameter("idmandataria", idmandataria), New ObjectParameter("idmandataria", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spGrupos_GruposOS_Select_All_By_IDMandataria_Result)("spGrupos_GruposOS_Select_All_By_IDMandataria", idmandatariaParameter)
    End Function

    Public Overridable Function spGrupos_Insert(id As ObjectParameter, idMandataria As Nullable(Of Long), nombre As Nullable(Of Integer), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idMandatariaParameter As ObjectParameter = If(idMandataria.HasValue, New ObjectParameter("idMandataria", idMandataria), New ObjectParameter("idMandataria", GetType(Long)))

        Dim nombreParameter As ObjectParameter = If(nombre.HasValue, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(Integer)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGrupos_Insert", id, idMandatariaParameter, nombreParameter, useraddParameter, res)
    End Function

    Public Overridable Function spGrupos_OS_Insert(iDObraSocial As ObjectParameter, iDGrupo As Nullable(Of Long)) As Integer
        Dim iDGrupoParameter As ObjectParameter = If(iDGrupo.HasValue, New ObjectParameter("IDGrupo", iDGrupo), New ObjectParameter("IDGrupo", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGrupos_OS_Insert", iDObraSocial, iDGrupoParameter)
    End Function

    Public Overridable Function spGrupos_Select_All(idmandataria As Nullable(Of Long)) As ObjectResult(Of spGrupos_Select_All_Result)
        Dim idmandatariaParameter As ObjectParameter = If(idmandataria.HasValue, New ObjectParameter("idmandataria", idmandataria), New ObjectParameter("idmandataria", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spGrupos_Select_All_Result)("spGrupos_Select_All", idmandatariaParameter)
    End Function

    Public Overridable Function spHistorialCta_Insert(id As ObjectParameter, idfarmacia As Nullable(Of Long), detalle As String, debito As Nullable(Of Decimal), credito As Nullable(Of Decimal), user As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idfarmaciaParameter As ObjectParameter = If(idfarmacia.HasValue, New ObjectParameter("idfarmacia", idfarmacia), New ObjectParameter("idfarmacia", GetType(Long)))

        Dim detalleParameter As ObjectParameter = If(detalle IsNot Nothing, New ObjectParameter("detalle", detalle), New ObjectParameter("detalle", GetType(String)))

        Dim debitoParameter As ObjectParameter = If(debito.HasValue, New ObjectParameter("debito", debito), New ObjectParameter("debito", GetType(Decimal)))

        Dim creditoParameter As ObjectParameter = If(credito.HasValue, New ObjectParameter("credito", credito), New ObjectParameter("credito", GetType(Decimal)))

        Dim userParameter As ObjectParameter = If(user.HasValue, New ObjectParameter("user", user), New ObjectParameter("user", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spHistorialCta_Insert", id, idfarmaciaParameter, detalleParameter, debitoParameter, creditoParameter, userParameter, res)
    End Function

    Public Overridable Function spImportarArchivoTXT_AFIPCompras(periodo As String, tipo As String, res As ObjectParameter) As ObjectResult(Of String)
        Dim periodoParameter As ObjectParameter = If(periodo IsNot Nothing, New ObjectParameter("Periodo", periodo), New ObjectParameter("Periodo", GetType(String)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("Tipo", tipo), New ObjectParameter("Tipo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spImportarArchivoTXT_AFIPCompras", periodoParameter, tipoParameter, res)
    End Function

    Public Overridable Function spImpuestos_Delete(id As Nullable(Of Integer), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spImpuestos_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spImpuestos_EliminarItems(idIngreso As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spImpuestos_EliminarItems", idIngresoParameter, res)
    End Function

    Public Overridable Function spImpuestos_Gastos_Select_by_IdGasto(idGasto As Nullable(Of Long), bolModo As Nullable(Of Boolean)) As ObjectResult(Of spImpuestos_Gastos_Select_by_IdGasto_Result)
        Dim idGastoParameter As ObjectParameter = If(idGasto.HasValue, New ObjectParameter("IdGasto", idGasto), New ObjectParameter("IdGasto", GetType(Long)))

        Dim bolModoParameter As ObjectParameter = If(bolModo.HasValue, New ObjectParameter("bolModo", bolModo), New ObjectParameter("bolModo", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spImpuestos_Gastos_Select_by_IdGasto_Result)("spImpuestos_Gastos_Select_by_IdGasto", idGastoParameter, bolModoParameter)
    End Function

    Public Overridable Function spImpuestos_Ingreso_TMP(id As Nullable(Of Long), idIngreso As Nullable(Of Long), idImpuesto As Nullable(Of Long)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim idImpuestoParameter As ObjectParameter = If(idImpuesto.HasValue, New ObjectParameter("IdImpuesto", idImpuesto), New ObjectParameter("IdImpuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spImpuestos_Ingreso_TMP", idParameter, idIngresoParameter, idImpuestoParameter)
    End Function

    Public Overridable Function spImpuestos_Ingresos_Select_by_IdIngreso(idIngreso As Nullable(Of Long), bolModo As Nullable(Of Boolean)) As ObjectResult(Of spImpuestos_Ingresos_Select_by_IdIngreso_Result)
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim bolModoParameter As ObjectParameter = If(bolModo.HasValue, New ObjectParameter("bolModo", bolModo), New ObjectParameter("bolModo", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spImpuestos_Ingresos_Select_by_IdIngreso_Result)("spImpuestos_Ingresos_Select_by_IdIngreso", idIngresoParameter, bolModoParameter)
    End Function

    Public Overridable Function spImpuestos_Insert(id As ObjectParameter, codigo As String, observaciones As String, form As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("observaciones", observaciones), New ObjectParameter("observaciones", GetType(String)))

        Dim formParameter As ObjectParameter = If(form IsNot Nothing, New ObjectParameter("form", form), New ObjectParameter("form", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spImpuestos_Insert", id, codigoParameter, observacionesParameter, formParameter, useraddParameter, res)
    End Function

    Public Overridable Function spImpuestos_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spImpuestos_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spImpuestos_Select_All_Result)("spImpuestos_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spImpuestos_Update(id As Nullable(Of Long), codigo As String, observaciones As String, form As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("observaciones", observaciones), New ObjectParameter("observaciones", GetType(String)))

        Dim formParameter As ObjectParameter = If(form IsNot Nothing, New ObjectParameter("form", form), New ObjectParameter("form", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spImpuestos_Update", idParameter, codigoParameter, observacionesParameter, formParameter, userupdParameter, res)
    End Function

    Public Overridable Function spIncrementaLoteOP(oP As Nullable(Of Long), lotes As ObjectParameter) As Integer
        Dim oPParameter As ObjectParameter = If(oP.HasValue, New ObjectParameter("OP", oP), New ObjectParameter("OP", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIncrementaLoteOP", oPParameter, lotes)
    End Function

    Public Overridable Function spIngresos_Cheques_Delete(ingresoDetalle As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim ingresoDetalleParameter As ObjectParameter = If(ingresoDetalle.HasValue, New ObjectParameter("IngresoDetalle", ingresoDetalle), New ObjectParameter("IngresoDetalle", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_Cheques_Delete", ingresoDetalleParameter, res)
    End Function

    Public Overridable Function spIngresos_Cheques_Insert(idIngresoDetalle As Nullable(Of Long), idCheque As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idIngresoDetalleParameter As ObjectParameter = If(idIngresoDetalle.HasValue, New ObjectParameter("IdIngresoDetalle", idIngresoDetalle), New ObjectParameter("IdIngresoDetalle", GetType(Long)))

        Dim idChequeParameter As ObjectParameter = If(idCheque.HasValue, New ObjectParameter("IdCheque", idCheque), New ObjectParameter("IdCheque", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_Cheques_Insert", idIngresoDetalleParameter, idChequeParameter, res)
    End Function

    Public Overridable Function spIngresos_Consumos_Insert(idIngreso As Nullable(Of Long), idMovimiento As Nullable(Of Long), tipoMov As String, res As ObjectParameter) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim idMovimientoParameter As ObjectParameter = If(idMovimiento.HasValue, New ObjectParameter("IdMovimiento", idMovimiento), New ObjectParameter("IdMovimiento", GetType(Long)))

        Dim tipoMovParameter As ObjectParameter = If(tipoMov IsNot Nothing, New ObjectParameter("TipoMov", tipoMov), New ObjectParameter("TipoMov", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_Consumos_Insert", idIngresoParameter, idMovimientoParameter, tipoMovParameter, res)
    End Function

    Public Overridable Function spIngresos_ConsumosyFacturas(idCliente As Nullable(Of Long), modo As Nullable(Of Boolean), idIngreso As Nullable(Of Long)) As ObjectResult(Of spIngresos_ConsumosyFacturas_Result)
        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim modoParameter As ObjectParameter = If(modo.HasValue, New ObjectParameter("Modo", modo), New ObjectParameter("Modo", GetType(Boolean)))

        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spIngresos_ConsumosyFacturas_Result)("spIngresos_ConsumosyFacturas", idClienteParameter, modoParameter, idIngresoParameter)
    End Function

    Public Overridable Function spIngresos_Delete(id As Nullable(Of Long), userDel As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim userDelParameter As ObjectParameter = If(userDel.HasValue, New ObjectParameter("UserDel", userDel), New ObjectParameter("UserDel", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_Delete", idParameter, userDelParameter, res)
    End Function

    Public Overridable Function spIngresos_Detalles_Delete(idIngreso As Nullable(Of Long), idIngresoDetalle As Nullable(Of Long), montoTotal As Nullable(Of Decimal), cuota As Nullable(Of Short), userdel As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim idIngresoDetalleParameter As ObjectParameter = If(idIngresoDetalle.HasValue, New ObjectParameter("IdIngresoDetalle", idIngresoDetalle), New ObjectParameter("IdIngresoDetalle", GetType(Long)))

        Dim montoTotalParameter As ObjectParameter = If(montoTotal.HasValue, New ObjectParameter("MontoTotal", montoTotal), New ObjectParameter("MontoTotal", GetType(Decimal)))

        Dim cuotaParameter As ObjectParameter = If(cuota.HasValue, New ObjectParameter("Cuota", cuota), New ObjectParameter("Cuota", GetType(Short)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_Detalles_Delete", idIngresoParameter, idIngresoDetalleParameter, montoTotalParameter, cuotaParameter, userdelParameter, res)
    End Function

    Public Overridable Function spIngresos_Detalles_Insert(idIngresoDetalle As ObjectParameter, idIngreso As Nullable(Of Long), fechaPago As Nullable(Of Date), contado As Nullable(Of Boolean), montoContado As Nullable(Of Decimal), tarjeta As Nullable(Of Boolean), nombreTarjeta As String, montoTarjeta As Nullable(Of Decimal), porcentajeRecargoTarjeta As Nullable(Of Decimal), cheque As Nullable(Of Boolean), useradd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim fechaPagoParameter As ObjectParameter = If(fechaPago.HasValue, New ObjectParameter("FechaPago", fechaPago), New ObjectParameter("FechaPago", GetType(Date)))

        Dim contadoParameter As ObjectParameter = If(contado.HasValue, New ObjectParameter("Contado", contado), New ObjectParameter("Contado", GetType(Boolean)))

        Dim montoContadoParameter As ObjectParameter = If(montoContado.HasValue, New ObjectParameter("MontoContado", montoContado), New ObjectParameter("MontoContado", GetType(Decimal)))

        Dim tarjetaParameter As ObjectParameter = If(tarjeta.HasValue, New ObjectParameter("Tarjeta", tarjeta), New ObjectParameter("Tarjeta", GetType(Boolean)))

        Dim nombreTarjetaParameter As ObjectParameter = If(nombreTarjeta IsNot Nothing, New ObjectParameter("NombreTarjeta", nombreTarjeta), New ObjectParameter("NombreTarjeta", GetType(String)))

        Dim montoTarjetaParameter As ObjectParameter = If(montoTarjeta.HasValue, New ObjectParameter("MontoTarjeta", montoTarjeta), New ObjectParameter("MontoTarjeta", GetType(Decimal)))

        Dim porcentajeRecargoTarjetaParameter As ObjectParameter = If(porcentajeRecargoTarjeta.HasValue, New ObjectParameter("PorcentajeRecargoTarjeta", porcentajeRecargoTarjeta), New ObjectParameter("PorcentajeRecargoTarjeta", GetType(Decimal)))

        Dim chequeParameter As ObjectParameter = If(cheque.HasValue, New ObjectParameter("Cheque", cheque), New ObjectParameter("Cheque", GetType(Boolean)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_Detalles_Insert", idIngresoDetalle, idIngresoParameter, fechaPagoParameter, contadoParameter, montoContadoParameter, tarjetaParameter, nombreTarjetaParameter, montoTarjetaParameter, porcentajeRecargoTarjetaParameter, chequeParameter, useraddParameter, res)
    End Function

    Public Overridable Function spIngresos_Detalles_Update(idIngresoDetalle As Nullable(Of Long), contado As Nullable(Of Boolean), montoContado As Nullable(Of Decimal), tarjeta As Nullable(Of Boolean), nombreTarjeta As String, montoTarjeta As Nullable(Of Decimal), porcentajeRecargoTarjeta As Nullable(Of Decimal), cheque As Nullable(Of Boolean), userUpd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim idIngresoDetalleParameter As ObjectParameter = If(idIngresoDetalle.HasValue, New ObjectParameter("IdIngresoDetalle", idIngresoDetalle), New ObjectParameter("IdIngresoDetalle", GetType(Long)))

        Dim contadoParameter As ObjectParameter = If(contado.HasValue, New ObjectParameter("Contado", contado), New ObjectParameter("Contado", GetType(Boolean)))

        Dim montoContadoParameter As ObjectParameter = If(montoContado.HasValue, New ObjectParameter("MontoContado", montoContado), New ObjectParameter("MontoContado", GetType(Decimal)))

        Dim tarjetaParameter As ObjectParameter = If(tarjeta.HasValue, New ObjectParameter("Tarjeta", tarjeta), New ObjectParameter("Tarjeta", GetType(Boolean)))

        Dim nombreTarjetaParameter As ObjectParameter = If(nombreTarjeta IsNot Nothing, New ObjectParameter("NombreTarjeta", nombreTarjeta), New ObjectParameter("NombreTarjeta", GetType(String)))

        Dim montoTarjetaParameter As ObjectParameter = If(montoTarjeta.HasValue, New ObjectParameter("MontoTarjeta", montoTarjeta), New ObjectParameter("MontoTarjeta", GetType(Decimal)))

        Dim porcentajeRecargoTarjetaParameter As ObjectParameter = If(porcentajeRecargoTarjeta.HasValue, New ObjectParameter("PorcentajeRecargoTarjeta", porcentajeRecargoTarjeta), New ObjectParameter("PorcentajeRecargoTarjeta", GetType(Decimal)))

        Dim chequeParameter As ObjectParameter = If(cheque.HasValue, New ObjectParameter("Cheque", cheque), New ObjectParameter("Cheque", GetType(Boolean)))

        Dim userUpdParameter As ObjectParameter = If(userUpd.HasValue, New ObjectParameter("userUpd", userUpd), New ObjectParameter("userUpd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_Detalles_Update", idIngresoDetalleParameter, contadoParameter, montoContadoParameter, tarjetaParameter, nombreTarjetaParameter, montoTarjetaParameter, porcentajeRecargoTarjetaParameter, chequeParameter, userUpdParameter, res)
    End Function

    Public Overridable Function spIngresos_FacturasConsumos_Insert(idIngreso As Nullable(Of Long), idFacturacion As Nullable(Of Long), idConsumo As Nullable(Of Long), idNotaCredito As Nullable(Of Long), idAnticipo_IngresoDepo As Nullable(Of Long), cancelarTodo As Nullable(Of Boolean), deuda As Nullable(Of Decimal), deudaActual As Nullable(Of Decimal), fechaCanc As Nullable(Of Date), res As ObjectParameter) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim idFacturacionParameter As ObjectParameter = If(idFacturacion.HasValue, New ObjectParameter("IdFacturacion", idFacturacion), New ObjectParameter("IdFacturacion", GetType(Long)))

        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("IdConsumo", idConsumo), New ObjectParameter("IdConsumo", GetType(Long)))

        Dim idNotaCreditoParameter As ObjectParameter = If(idNotaCredito.HasValue, New ObjectParameter("IdNotaCredito", idNotaCredito), New ObjectParameter("IdNotaCredito", GetType(Long)))

        Dim idAnticipo_IngresoDepoParameter As ObjectParameter = If(idAnticipo_IngresoDepo.HasValue, New ObjectParameter("IdAnticipo_IngresoDepo", idAnticipo_IngresoDepo), New ObjectParameter("IdAnticipo_IngresoDepo", GetType(Long)))

        Dim cancelarTodoParameter As ObjectParameter = If(cancelarTodo.HasValue, New ObjectParameter("CancelarTodo", cancelarTodo), New ObjectParameter("CancelarTodo", GetType(Boolean)))

        Dim deudaParameter As ObjectParameter = If(deuda.HasValue, New ObjectParameter("Deuda", deuda), New ObjectParameter("Deuda", GetType(Decimal)))

        Dim deudaActualParameter As ObjectParameter = If(deudaActual.HasValue, New ObjectParameter("DeudaActual", deudaActual), New ObjectParameter("DeudaActual", GetType(Decimal)))

        Dim fechaCancParameter As ObjectParameter = If(fechaCanc.HasValue, New ObjectParameter("FechaCanc", fechaCanc), New ObjectParameter("FechaCanc", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_FacturasConsumos_Insert", idIngresoParameter, idFacturacionParameter, idConsumoParameter, idNotaCreditoParameter, idAnticipo_IngresoDepoParameter, cancelarTodoParameter, deudaParameter, deudaActualParameter, fechaCancParameter, res)
    End Function

    Public Overridable Function spIngresos_FacturasConsumos_Update(idIngreso As Nullable(Of Long), idFacturacion As Nullable(Of Long), idConsumo As Nullable(Of Long), cancelarTodo As Nullable(Of Boolean), deuda As Nullable(Of Decimal), fechaCanc As Nullable(Of Date), res As ObjectParameter) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim idFacturacionParameter As ObjectParameter = If(idFacturacion.HasValue, New ObjectParameter("IdFacturacion", idFacturacion), New ObjectParameter("IdFacturacion", GetType(Long)))

        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("IdConsumo", idConsumo), New ObjectParameter("IdConsumo", GetType(Long)))

        Dim cancelarTodoParameter As ObjectParameter = If(cancelarTodo.HasValue, New ObjectParameter("CancelarTodo", cancelarTodo), New ObjectParameter("CancelarTodo", GetType(Boolean)))

        Dim deudaParameter As ObjectParameter = If(deuda.HasValue, New ObjectParameter("Deuda", deuda), New ObjectParameter("Deuda", GetType(Decimal)))

        Dim fechaCancParameter As ObjectParameter = If(fechaCanc.HasValue, New ObjectParameter("FechaCanc", fechaCanc), New ObjectParameter("FechaCanc", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_FacturasConsumos_Update", idIngresoParameter, idFacturacionParameter, idConsumoParameter, cancelarTodoParameter, deudaParameter, fechaCancParameter, res)
    End Function

    Public Overridable Function spIngresos_Impuestos_Insert(idIngreso As Nullable(Of Long), idImpuesto As Nullable(Of Long), nroDocumento As String, monto As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim idImpuestoParameter As ObjectParameter = If(idImpuesto.HasValue, New ObjectParameter("IdImpuesto", idImpuesto), New ObjectParameter("IdImpuesto", GetType(Long)))

        Dim nroDocumentoParameter As ObjectParameter = If(nroDocumento IsNot Nothing, New ObjectParameter("NroDocumento", nroDocumento), New ObjectParameter("NroDocumento", GetType(String)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_Impuestos_Insert", idIngresoParameter, idImpuestoParameter, nroDocumentoParameter, montoParameter, res)
    End Function

    Public Overridable Function spIngresos_Impuestos_Select_All(idIngreso As Nullable(Of Long), idImpuesto As ObjectParameter, nroDocumento As ObjectParameter, monto As ObjectParameter, observaciones As ObjectParameter) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_Impuestos_Select_All", idIngresoParameter, idImpuesto, nroDocumento, monto, observaciones)
    End Function

    Public Overridable Function spIngresos_Impuestos_Update(id As Nullable(Of Long), idImpuesto As Nullable(Of Long), nroDocumento As String, monto As Nullable(Of Decimal), mensaje As ObjectParameter, res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim idImpuestoParameter As ObjectParameter = If(idImpuesto.HasValue, New ObjectParameter("IdImpuesto", idImpuesto), New ObjectParameter("IdImpuesto", GetType(Long)))

        Dim nroDocumentoParameter As ObjectParameter = If(nroDocumento IsNot Nothing, New ObjectParameter("NroDocumento", nroDocumento), New ObjectParameter("NroDocumento", GetType(String)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_Impuestos_Update", idParameter, idImpuestoParameter, nroDocumentoParameter, montoParameter, mensaje, res)
    End Function

    Public Overridable Function spIngresos_Insert(id As ObjectParameter, codigo As ObjectParameter, nroOrdenPago As String, idCliente As Nullable(Of Long), fecha As Nullable(Of Date), contado As Nullable(Of Boolean), montoContado As Nullable(Of Decimal), tarjeta As Nullable(Of Boolean), montoTarjeta As Nullable(Of Decimal), cheque As Nullable(Of Boolean), montoCheque As Nullable(Of Decimal), transferencia As Nullable(Of Boolean), montoTransf As Nullable(Of Decimal), impuestos As Nullable(Of Boolean), montoImpuesto As Nullable(Of Decimal), ayid As Nullable(Of Boolean), montoAyid As Nullable(Of Decimal), montoIva As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), total As Nullable(Of Decimal), redondeo As Nullable(Of Decimal), descuento As Nullable(Of Decimal), valorCambio As Nullable(Of Decimal), remitosAsociados As String, useradd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim nroOrdenPagoParameter As ObjectParameter = If(nroOrdenPago IsNot Nothing, New ObjectParameter("NroOrdenPago", nroOrdenPago), New ObjectParameter("NroOrdenPago", GetType(String)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim contadoParameter As ObjectParameter = If(contado.HasValue, New ObjectParameter("Contado", contado), New ObjectParameter("Contado", GetType(Boolean)))

        Dim montoContadoParameter As ObjectParameter = If(montoContado.HasValue, New ObjectParameter("MontoContado", montoContado), New ObjectParameter("MontoContado", GetType(Decimal)))

        Dim tarjetaParameter As ObjectParameter = If(tarjeta.HasValue, New ObjectParameter("Tarjeta", tarjeta), New ObjectParameter("Tarjeta", GetType(Boolean)))

        Dim montoTarjetaParameter As ObjectParameter = If(montoTarjeta.HasValue, New ObjectParameter("MontoTarjeta", montoTarjeta), New ObjectParameter("MontoTarjeta", GetType(Decimal)))

        Dim chequeParameter As ObjectParameter = If(cheque.HasValue, New ObjectParameter("Cheque", cheque), New ObjectParameter("Cheque", GetType(Boolean)))

        Dim montoChequeParameter As ObjectParameter = If(montoCheque.HasValue, New ObjectParameter("MontoCheque", montoCheque), New ObjectParameter("MontoCheque", GetType(Decimal)))

        Dim transferenciaParameter As ObjectParameter = If(transferencia.HasValue, New ObjectParameter("Transferencia", transferencia), New ObjectParameter("Transferencia", GetType(Boolean)))

        Dim montoTransfParameter As ObjectParameter = If(montoTransf.HasValue, New ObjectParameter("MontoTransf", montoTransf), New ObjectParameter("MontoTransf", GetType(Decimal)))

        Dim impuestosParameter As ObjectParameter = If(impuestos.HasValue, New ObjectParameter("Impuestos", impuestos), New ObjectParameter("Impuestos", GetType(Boolean)))

        Dim montoImpuestoParameter As ObjectParameter = If(montoImpuesto.HasValue, New ObjectParameter("MontoImpuesto", montoImpuesto), New ObjectParameter("MontoImpuesto", GetType(Decimal)))

        Dim ayidParameter As ObjectParameter = If(ayid.HasValue, New ObjectParameter("Ayid", ayid), New ObjectParameter("Ayid", GetType(Boolean)))

        Dim montoAyidParameter As ObjectParameter = If(montoAyid.HasValue, New ObjectParameter("MontoAyid", montoAyid), New ObjectParameter("MontoAyid", GetType(Decimal)))

        Dim montoIvaParameter As ObjectParameter = If(montoIva.HasValue, New ObjectParameter("MontoIva", montoIva), New ObjectParameter("MontoIva", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim redondeoParameter As ObjectParameter = If(redondeo.HasValue, New ObjectParameter("Redondeo", redondeo), New ObjectParameter("Redondeo", GetType(Decimal)))

        Dim descuentoParameter As ObjectParameter = If(descuento.HasValue, New ObjectParameter("Descuento", descuento), New ObjectParameter("Descuento", GetType(Decimal)))

        Dim valorCambioParameter As ObjectParameter = If(valorCambio.HasValue, New ObjectParameter("ValorCambio", valorCambio), New ObjectParameter("ValorCambio", GetType(Decimal)))

        Dim remitosAsociadosParameter As ObjectParameter = If(remitosAsociados IsNot Nothing, New ObjectParameter("RemitosAsociados", remitosAsociados), New ObjectParameter("RemitosAsociados", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_Insert", id, codigo, nroOrdenPagoParameter, idClienteParameter, fechaParameter, contadoParameter, montoContadoParameter, tarjetaParameter, montoTarjetaParameter, chequeParameter, montoChequeParameter, transferenciaParameter, montoTransfParameter, impuestosParameter, montoImpuestoParameter, ayidParameter, montoAyidParameter, montoIvaParameter, subtotalParameter, totalParameter, redondeoParameter, descuentoParameter, valorCambioParameter, remitosAsociadosParameter, useraddParameter, res)
    End Function

    Public Overridable Function spIngresos_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spIngresos_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spIngresos_Select_All_Result)("spIngresos_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spIngresos_Select_All_ByID(idIngreso As Nullable(Of Long)) As ObjectResult(Of spIngresos_Select_All_ByID_Result)
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spIngresos_Select_All_ByID_Result)("spIngresos_Select_All_ByID", idIngresoParameter)
    End Function

    Public Overridable Function spIngresos_Tarjetas_Insert(idingreso As Nullable(Of Long), nombreTarjeta As String, cuotas As Nullable(Of Integer), recargo As Nullable(Of Decimal), monto As Nullable(Of Decimal), montoTotal As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idingresoParameter As ObjectParameter = If(idingreso.HasValue, New ObjectParameter("Idingreso", idingreso), New ObjectParameter("Idingreso", GetType(Long)))

        Dim nombreTarjetaParameter As ObjectParameter = If(nombreTarjeta IsNot Nothing, New ObjectParameter("NombreTarjeta", nombreTarjeta), New ObjectParameter("NombreTarjeta", GetType(String)))

        Dim cuotasParameter As ObjectParameter = If(cuotas.HasValue, New ObjectParameter("Cuotas", cuotas), New ObjectParameter("Cuotas", GetType(Integer)))

        Dim recargoParameter As ObjectParameter = If(recargo.HasValue, New ObjectParameter("Recargo", recargo), New ObjectParameter("Recargo", GetType(Decimal)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Dim montoTotalParameter As ObjectParameter = If(montoTotal.HasValue, New ObjectParameter("MontoTotal", montoTotal), New ObjectParameter("MontoTotal", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_Tarjetas_Insert", idingresoParameter, nombreTarjetaParameter, cuotasParameter, recargoParameter, montoParameter, montoTotalParameter, res)
    End Function

    Public Overridable Function spIngresos_Update(id As Nullable(Of Long), nroOrdenPago As String, fecha As Nullable(Of Date), contado As Nullable(Of Boolean), montoContado As Nullable(Of Decimal), tarjeta As Nullable(Of Boolean), montoTarjeta As Nullable(Of Decimal), cheque As Nullable(Of Boolean), montoCheque As Nullable(Of Decimal), transferencia As Nullable(Of Boolean), montoTransf As Nullable(Of Decimal), impuestos As Nullable(Of Boolean), montoImpuesto As Nullable(Of Decimal), ayid As Nullable(Of Boolean), montoAyid As Nullable(Of Decimal), montoIva As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), total As Nullable(Of Decimal), redondeo As Nullable(Of Decimal), userupd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim nroOrdenPagoParameter As ObjectParameter = If(nroOrdenPago IsNot Nothing, New ObjectParameter("NroOrdenPago", nroOrdenPago), New ObjectParameter("NroOrdenPago", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim contadoParameter As ObjectParameter = If(contado.HasValue, New ObjectParameter("Contado", contado), New ObjectParameter("Contado", GetType(Boolean)))

        Dim montoContadoParameter As ObjectParameter = If(montoContado.HasValue, New ObjectParameter("MontoContado", montoContado), New ObjectParameter("MontoContado", GetType(Decimal)))

        Dim tarjetaParameter As ObjectParameter = If(tarjeta.HasValue, New ObjectParameter("Tarjeta", tarjeta), New ObjectParameter("Tarjeta", GetType(Boolean)))

        Dim montoTarjetaParameter As ObjectParameter = If(montoTarjeta.HasValue, New ObjectParameter("MontoTarjeta", montoTarjeta), New ObjectParameter("MontoTarjeta", GetType(Decimal)))

        Dim chequeParameter As ObjectParameter = If(cheque.HasValue, New ObjectParameter("Cheque", cheque), New ObjectParameter("Cheque", GetType(Boolean)))

        Dim montoChequeParameter As ObjectParameter = If(montoCheque.HasValue, New ObjectParameter("MontoCheque", montoCheque), New ObjectParameter("MontoCheque", GetType(Decimal)))

        Dim transferenciaParameter As ObjectParameter = If(transferencia.HasValue, New ObjectParameter("Transferencia", transferencia), New ObjectParameter("Transferencia", GetType(Boolean)))

        Dim montoTransfParameter As ObjectParameter = If(montoTransf.HasValue, New ObjectParameter("MontoTransf", montoTransf), New ObjectParameter("MontoTransf", GetType(Decimal)))

        Dim impuestosParameter As ObjectParameter = If(impuestos.HasValue, New ObjectParameter("Impuestos", impuestos), New ObjectParameter("Impuestos", GetType(Boolean)))

        Dim montoImpuestoParameter As ObjectParameter = If(montoImpuesto.HasValue, New ObjectParameter("MontoImpuesto", montoImpuesto), New ObjectParameter("MontoImpuesto", GetType(Decimal)))

        Dim ayidParameter As ObjectParameter = If(ayid.HasValue, New ObjectParameter("Ayid", ayid), New ObjectParameter("Ayid", GetType(Boolean)))

        Dim montoAyidParameter As ObjectParameter = If(montoAyid.HasValue, New ObjectParameter("MontoAyid", montoAyid), New ObjectParameter("MontoAyid", GetType(Decimal)))

        Dim montoIvaParameter As ObjectParameter = If(montoIva.HasValue, New ObjectParameter("MontoIva", montoIva), New ObjectParameter("MontoIva", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim redondeoParameter As ObjectParameter = If(redondeo.HasValue, New ObjectParameter("Redondeo", redondeo), New ObjectParameter("Redondeo", GetType(Decimal)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spIngresos_Update", idParameter, nroOrdenPagoParameter, fechaParameter, contadoParameter, montoContadoParameter, tarjetaParameter, montoTarjetaParameter, chequeParameter, montoChequeParameter, transferenciaParameter, montoTransfParameter, impuestosParameter, montoImpuestoParameter, ayidParameter, montoAyidParameter, montoIvaParameter, subtotalParameter, totalParameter, redondeoParameter, userupdParameter, res)
    End Function

    Public Overridable Function spJornadas_Delete(id As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spJornadas_Delete", idParameter, res)
    End Function

    Public Overridable Function spJornadas_Det_Delete(idJornada As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idJornadaParameter As ObjectParameter = If(idJornada.HasValue, New ObjectParameter("idJornada", idJornada), New ObjectParameter("idJornada", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spJornadas_Det_Delete", idJornadaParameter, res)
    End Function

    Public Overridable Function spJornadas_Det_Insert(idJornada As Nullable(Of Long), dia As String, horaIngreso As Nullable(Of System.TimeSpan), horaSalida As Nullable(Of System.TimeSpan), res As ObjectParameter) As Integer
        Dim idJornadaParameter As ObjectParameter = If(idJornada.HasValue, New ObjectParameter("IdJornada", idJornada), New ObjectParameter("IdJornada", GetType(Long)))

        Dim diaParameter As ObjectParameter = If(dia IsNot Nothing, New ObjectParameter("Dia", dia), New ObjectParameter("Dia", GetType(String)))

        Dim horaIngresoParameter As ObjectParameter = If(horaIngreso.HasValue, New ObjectParameter("HoraIngreso", horaIngreso), New ObjectParameter("HoraIngreso", GetType(System.TimeSpan)))

        Dim horaSalidaParameter As ObjectParameter = If(horaSalida.HasValue, New ObjectParameter("HoraSalida", horaSalida), New ObjectParameter("HoraSalida", GetType(System.TimeSpan)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spJornadas_Det_Insert", idJornadaParameter, diaParameter, horaIngresoParameter, horaSalidaParameter, res)
    End Function

    Public Overridable Function spJornadas_Insert(id As ObjectParameter, nombre As String, tolerancia As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim toleranciaParameter As ObjectParameter = If(tolerancia.HasValue, New ObjectParameter("Tolerancia", tolerancia), New ObjectParameter("Tolerancia", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spJornadas_Insert", id, nombreParameter, toleranciaParameter, res)
    End Function

    Public Overridable Function spJornadas_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spJornadas_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spJornadas_Select_All_Result)("spJornadas_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spJornadas_Update(id As ObjectParameter, nombre As String, tolerancia As Nullable(Of Integer), userupd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim toleranciaParameter As ObjectParameter = If(tolerancia.HasValue, New ObjectParameter("Tolerancia", tolerancia), New ObjectParameter("Tolerancia", GetType(Integer)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spJornadas_Update", id, nombreParameter, toleranciaParameter, userupdParameter, res)
    End Function

    Public Overridable Function spLiberarStockNro(nro As Nullable(Of Long), user As Nullable(Of Integer), mensaje As ObjectParameter) As Integer
        Dim nroParameter As ObjectParameter = If(nro.HasValue, New ObjectParameter("nro", nro), New ObjectParameter("nro", GetType(Long)))

        Dim userParameter As ObjectParameter = If(user.HasValue, New ObjectParameter("user", user), New ObjectParameter("user", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spLiberarStockNro", nroParameter, userParameter, mensaje)
    End Function

    Public Overridable Function spLiquidaciones_Cancelar(idLiquidacion As Nullable(Of Long)) As Integer
        Dim idLiquidacionParameter As ObjectParameter = If(idLiquidacion.HasValue, New ObjectParameter("idLiquidacion", idLiquidacion), New ObjectParameter("idLiquidacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spLiquidaciones_Cancelar", idLiquidacionParameter)
    End Function

    Public Overridable Function spLiquidaciones_det_Conceptos_Insert_Delete(id As ObjectParameter, idfarmacia As Nullable(Of Long), idliquidacion As Nullable(Of Long), idDetalle As Nullable(Of Integer), detalle As String, valor As Nullable(Of Decimal), eliminable As Nullable(Of Boolean), eliminado As Nullable(Of Boolean), estado As String, user As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idfarmaciaParameter As ObjectParameter = If(idfarmacia.HasValue, New ObjectParameter("idfarmacia", idfarmacia), New ObjectParameter("idfarmacia", GetType(Long)))

        Dim idliquidacionParameter As ObjectParameter = If(idliquidacion.HasValue, New ObjectParameter("idliquidacion", idliquidacion), New ObjectParameter("idliquidacion", GetType(Long)))

        Dim idDetalleParameter As ObjectParameter = If(idDetalle.HasValue, New ObjectParameter("idDetalle", idDetalle), New ObjectParameter("idDetalle", GetType(Integer)))

        Dim detalleParameter As ObjectParameter = If(detalle IsNot Nothing, New ObjectParameter("detalle", detalle), New ObjectParameter("detalle", GetType(String)))

        Dim valorParameter As ObjectParameter = If(valor.HasValue, New ObjectParameter("valor", valor), New ObjectParameter("valor", GetType(Decimal)))

        Dim eliminableParameter As ObjectParameter = If(eliminable.HasValue, New ObjectParameter("eliminable", eliminable), New ObjectParameter("eliminable", GetType(Boolean)))

        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("eliminado", eliminado), New ObjectParameter("eliminado", GetType(Boolean)))

        Dim estadoParameter As ObjectParameter = If(estado IsNot Nothing, New ObjectParameter("estado", estado), New ObjectParameter("estado", GetType(String)))

        Dim userParameter As ObjectParameter = If(user.HasValue, New ObjectParameter("user", user), New ObjectParameter("user", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spLiquidaciones_det_Conceptos_Insert_Delete", id, idfarmaciaParameter, idliquidacionParameter, idDetalleParameter, detalleParameter, valorParameter, eliminableParameter, eliminadoParameter, estadoParameter, userParameter, res)
    End Function

    Public Overridable Function spLiquidaciones_det_Conceptos_Select_By_IDLiquidacion(iDLiquidacion As Nullable(Of Long)) As ObjectResult(Of spLiquidaciones_det_Conceptos_Select_By_IDLiquidacion_Result)
        Dim iDLiquidacionParameter As ObjectParameter = If(iDLiquidacion.HasValue, New ObjectParameter("IDLiquidacion", iDLiquidacion), New ObjectParameter("IDLiquidacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spLiquidaciones_det_Conceptos_Select_By_IDLiquidacion_Result)("spLiquidaciones_det_Conceptos_Select_By_IDLiquidacion", iDLiquidacionParameter)
    End Function

    Public Overridable Function spLiquidaciones_Det_Insert_Update(id As ObjectParameter, index As Nullable(Of Integer), idLiquidacion As Nullable(Of Long), idPresentacion_det As Nullable(Of Long), idFarmacia As Nullable(Of Long), pagadoACargoOS As Nullable(Of Decimal), pagadoFinal As Nullable(Of Decimal), recetasA As Nullable(Of Integer), recaudadoA As Nullable(Of Decimal), aCargoOsA As Nullable(Of Decimal), total As Nullable(Of Decimal), eliminado As Nullable(Of Boolean), user As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim indexParameter As ObjectParameter = If(index.HasValue, New ObjectParameter("index", index), New ObjectParameter("index", GetType(Integer)))

        Dim idLiquidacionParameter As ObjectParameter = If(idLiquidacion.HasValue, New ObjectParameter("idLiquidacion", idLiquidacion), New ObjectParameter("idLiquidacion", GetType(Long)))

        Dim idPresentacion_detParameter As ObjectParameter = If(idPresentacion_det.HasValue, New ObjectParameter("idPresentacion_det", idPresentacion_det), New ObjectParameter("idPresentacion_det", GetType(Long)))

        Dim idFarmaciaParameter As ObjectParameter = If(idFarmacia.HasValue, New ObjectParameter("idFarmacia", idFarmacia), New ObjectParameter("idFarmacia", GetType(Long)))

        Dim pagadoACargoOSParameter As ObjectParameter = If(pagadoACargoOS.HasValue, New ObjectParameter("pagadoACargoOS", pagadoACargoOS), New ObjectParameter("pagadoACargoOS", GetType(Decimal)))

        Dim pagadoFinalParameter As ObjectParameter = If(pagadoFinal.HasValue, New ObjectParameter("pagadoFinal", pagadoFinal), New ObjectParameter("pagadoFinal", GetType(Decimal)))

        Dim recetasAParameter As ObjectParameter = If(recetasA.HasValue, New ObjectParameter("recetasA", recetasA), New ObjectParameter("recetasA", GetType(Integer)))

        Dim recaudadoAParameter As ObjectParameter = If(recaudadoA.HasValue, New ObjectParameter("recaudadoA", recaudadoA), New ObjectParameter("recaudadoA", GetType(Decimal)))

        Dim aCargoOsAParameter As ObjectParameter = If(aCargoOsA.HasValue, New ObjectParameter("aCargoOsA", aCargoOsA), New ObjectParameter("aCargoOsA", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("total", total), New ObjectParameter("total", GetType(Decimal)))

        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("eliminado", eliminado), New ObjectParameter("eliminado", GetType(Boolean)))

        Dim userParameter As ObjectParameter = If(user.HasValue, New ObjectParameter("user", user), New ObjectParameter("user", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spLiquidaciones_Det_Insert_Update", id, indexParameter, idLiquidacionParameter, idPresentacion_detParameter, idFarmaciaParameter, pagadoACargoOSParameter, pagadoFinalParameter, recetasAParameter, recaudadoAParameter, aCargoOsAParameter, totalParameter, eliminadoParameter, userParameter, res)
    End Function

    Public Overridable Function spLiquidaciones_Det_Select_By_IDLiquidacion(iDLiquidacion As Nullable(Of Long)) As ObjectResult(Of spLiquidaciones_Det_Select_By_IDLiquidacion_Result)
        Dim iDLiquidacionParameter As ObjectParameter = If(iDLiquidacion.HasValue, New ObjectParameter("IDLiquidacion", iDLiquidacion), New ObjectParameter("IDLiquidacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spLiquidaciones_Det_Select_By_IDLiquidacion_Result)("spLiquidaciones_Det_Select_By_IDLiquidacion", iDLiquidacionParameter)
    End Function

    Public Overridable Function spLiquidaciones_Det_Select_By_IDLiquidacion_Respaldo(iDLiquidacion As Nullable(Of Long)) As ObjectResult(Of spLiquidaciones_Det_Select_By_IDLiquidacion_Respaldo_Result)
        Dim iDLiquidacionParameter As ObjectParameter = If(iDLiquidacion.HasValue, New ObjectParameter("IDLiquidacion", iDLiquidacion), New ObjectParameter("IDLiquidacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spLiquidaciones_Det_Select_By_IDLiquidacion_Respaldo_Result)("spLiquidaciones_Det_Select_By_IDLiquidacion_Respaldo", iDLiquidacionParameter)
    End Function

    Public Overridable Function spLiquidaciones_Insert_Update(id As ObjectParameter, codigo As String, idPresentacion As Nullable(Of Long), tipoPago As String, total As Nullable(Of Decimal), agrupado As Nullable(Of Boolean), liquidado As Nullable(Of Boolean), eliminado As Nullable(Of Boolean), user As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim idPresentacionParameter As ObjectParameter = If(idPresentacion.HasValue, New ObjectParameter("idPresentacion", idPresentacion), New ObjectParameter("idPresentacion", GetType(Long)))

        Dim tipoPagoParameter As ObjectParameter = If(tipoPago IsNot Nothing, New ObjectParameter("tipoPago", tipoPago), New ObjectParameter("tipoPago", GetType(String)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("total", total), New ObjectParameter("total", GetType(Decimal)))

        Dim agrupadoParameter As ObjectParameter = If(agrupado.HasValue, New ObjectParameter("agrupado", agrupado), New ObjectParameter("agrupado", GetType(Boolean)))

        Dim liquidadoParameter As ObjectParameter = If(liquidado.HasValue, New ObjectParameter("liquidado", liquidado), New ObjectParameter("liquidado", GetType(Boolean)))

        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("eliminado", eliminado), New ObjectParameter("eliminado", GetType(Boolean)))

        Dim userParameter As ObjectParameter = If(user.HasValue, New ObjectParameter("user", user), New ObjectParameter("user", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spLiquidaciones_Insert_Update", id, codigoParameter, idPresentacionParameter, tipoPagoParameter, totalParameter, agrupadoParameter, liquidadoParameter, eliminadoParameter, userParameter, res)
    End Function

    Public Overridable Function spLiquidaciones_Select_All() As ObjectResult(Of spLiquidaciones_Select_All_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spLiquidaciones_Select_All_Result)("spLiquidaciones_Select_All")
    End Function

    Public Overridable Function spLista_Precios_Delete(id As Nullable(Of Integer), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spLista_Precios_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spLista_Precios_Insert(id As ObjectParameter, codigo As ObjectParameter, descripcion As String, porcentaje As Nullable(Of Decimal), useradd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("descripcion", descripcion), New ObjectParameter("descripcion", GetType(String)))

        Dim porcentajeParameter As ObjectParameter = If(porcentaje.HasValue, New ObjectParameter("porcentaje", porcentaje), New ObjectParameter("porcentaje", GetType(Decimal)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spLista_Precios_Insert", id, codigo, descripcionParameter, porcentajeParameter, useraddParameter, res)
    End Function

    Public Overridable Function spLista_Precios_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spLista_Precios_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spLista_Precios_Select_All_Result)("spLista_Precios_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spLista_Precios_Update_borrar_(id As ObjectParameter, codigo As Nullable(Of Double), descripcion As String, porcentaje As Nullable(Of Decimal), userupd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo.HasValue, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(Double)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("descripcion", descripcion), New ObjectParameter("descripcion", GetType(String)))

        Dim porcentajeParameter As ObjectParameter = If(porcentaje.HasValue, New ObjectParameter("porcentaje", porcentaje), New ObjectParameter("porcentaje", GetType(Decimal)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spLista_Precios_Update_borrar_", id, codigoParameter, descripcionParameter, porcentajeParameter, userupdParameter, res)
    End Function

    Public Overridable Function spLocalidades_Insert(id As ObjectParameter, nombre As String, codArea As Nullable(Of Integer), idProvincia As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim codAreaParameter As ObjectParameter = If(codArea.HasValue, New ObjectParameter("CodArea", codArea), New ObjectParameter("CodArea", GetType(Integer)))

        Dim idProvinciaParameter As ObjectParameter = If(idProvincia.HasValue, New ObjectParameter("IdProvincia", idProvincia), New ObjectParameter("IdProvincia", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spLocalidades_Insert", id, nombreParameter, codAreaParameter, idProvinciaParameter, res)
    End Function

    Public Overridable Function spLocalidades_Update(id As ObjectParameter, nombre As String, codArea As Nullable(Of Integer), idProvincia As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim codAreaParameter As ObjectParameter = If(codArea.HasValue, New ObjectParameter("CodArea", codArea), New ObjectParameter("CodArea", GetType(Integer)))

        Dim idProvinciaParameter As ObjectParameter = If(idProvincia.HasValue, New ObjectParameter("IdProvincia", idProvincia), New ObjectParameter("IdProvincia", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spLocalidades_Update", id, nombreParameter, codAreaParameter, idProvinciaParameter, res)
    End Function

    Public Overridable Function spMail_CierredeCaja() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMail_CierredeCaja")
    End Function

    Public Overridable Function spMail_ContrasenaSistema(usuario As String) As Integer
        Dim usuarioParameter As ObjectParameter = If(usuario IsNot Nothing, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMail_ContrasenaSistema", usuarioParameter)
    End Function

    Public Overridable Function spMail_ControlGastos() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMail_ControlGastos")
    End Function

    Public Overridable Function spMail_ControlStock_AvisoMinimo() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMail_ControlStock_AvisoMinimo")
    End Function

    Public Overridable Function spMail_Empleados_Cumpleaños() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMail_Empleados_Cumpleaños")
    End Function

    Public Overridable Function spMail_GastosporVencer() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMail_GastosporVencer")
    End Function

    Public Overridable Function spMail_MaquinasHerramientasSGI() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMail_MaquinasHerramientasSGI")
    End Function

    Public Overridable Function spMail_PanolMovimientosporSector(iDSector As Nullable(Of Integer)) As Integer
        Dim iDSectorParameter As ObjectParameter = If(iDSector.HasValue, New ObjectParameter("IDSector", iDSector), New ObjectParameter("IDSector", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMail_PanolMovimientosporSector", iDSectorParameter)
    End Function

    Public Overridable Function spMail_Proveedores_SolicitudCuenta() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMail_Proveedores_SolicitudCuenta")
    End Function

    Public Overridable Function spMail_ValesDiaAnterior() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMail_ValesDiaAnterior")
    End Function

    Public Overridable Function spMandatarias_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMandatarias_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spMandatarias_Insert(id As ObjectParameter, codigo As String, nombre As String, direccion As String, idLocalidad As Nullable(Of Long), telefono As String, celular As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("Direccion", direccion), New ObjectParameter("Direccion", GetType(String)))

        Dim idLocalidadParameter As ObjectParameter = If(idLocalidad.HasValue, New ObjectParameter("IdLocalidad", idLocalidad), New ObjectParameter("IdLocalidad", GetType(Long)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(String)))

        Dim celularParameter As ObjectParameter = If(celular IsNot Nothing, New ObjectParameter("Celular", celular), New ObjectParameter("Celular", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMandatarias_Insert", id, codigoParameter, nombreParameter, direccionParameter, idLocalidadParameter, telefonoParameter, celularParameter, useraddParameter, res)
    End Function

    Public Overridable Function spMandatarias_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spMandatarias_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMandatarias_Select_All_Result)("spMandatarias_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spMandatarias_Update(id As ObjectParameter, codigo As String, nombre As String, direccion As String, idLocalidad As Nullable(Of Long), telefono As String, celular As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("Direccion", direccion), New ObjectParameter("Direccion", GetType(String)))

        Dim idLocalidadParameter As ObjectParameter = If(idLocalidad.HasValue, New ObjectParameter("IdLocalidad", idLocalidad), New ObjectParameter("IdLocalidad", GetType(Long)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(String)))

        Dim celularParameter As ObjectParameter = If(celular IsNot Nothing, New ObjectParameter("Celular", celular), New ObjectParameter("Celular", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMandatarias_Update", id, codigoParameter, nombreParameter, direccionParameter, idLocalidadParameter, telefonoParameter, celularParameter, userupdParameter, res)
    End Function

    Public Overridable Function spMaquinasHerramientas_Delete(id As Nullable(Of Long), motivo As String, userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim motivoParameter As ObjectParameter = If(motivo IsNot Nothing, New ObjectParameter("Motivo", motivo), New ObjectParameter("Motivo", GetType(String)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("Userdel", userdel), New ObjectParameter("Userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMaquinasHerramientas_Delete", idParameter, motivoParameter, userdelParameter, res)
    End Function

    Public Overridable Function spMaquinasHerramientas_Det_Delete(idmp As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idmpParameter As ObjectParameter = If(idmp.HasValue, New ObjectParameter("Idmp", idmp), New ObjectParameter("Idmp", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMaquinasHerramientas_Det_Delete", idmpParameter, res)
    End Function

    Public Overridable Function spMaquinasHerramientas_Det_Insert(id As ObjectParameter, idMaqHerramienta As Nullable(Of Long), fechamantenimiento As Nullable(Of Date), descripcion As String, idProveedor As Nullable(Of Long), idempleado As Nullable(Of Long), horas As Nullable(Of Decimal), preciohora As Nullable(Of Decimal), fechaproximomantenimiento As Nullable(Of Date), costoMO As Nullable(Of Decimal), costoinsumo As Nullable(Of Decimal), subtotalcostoMto As Nullable(Of Decimal), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idMaqHerramientaParameter As ObjectParameter = If(idMaqHerramienta.HasValue, New ObjectParameter("IdMaqHerramienta", idMaqHerramienta), New ObjectParameter("IdMaqHerramienta", GetType(Long)))

        Dim fechamantenimientoParameter As ObjectParameter = If(fechamantenimiento.HasValue, New ObjectParameter("fechamantenimiento", fechamantenimiento), New ObjectParameter("fechamantenimiento", GetType(Date)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("descripcion", descripcion), New ObjectParameter("descripcion", GetType(String)))

        Dim idProveedorParameter As ObjectParameter = If(idProveedor.HasValue, New ObjectParameter("IdProveedor", idProveedor), New ObjectParameter("IdProveedor", GetType(Long)))

        Dim idempleadoParameter As ObjectParameter = If(idempleado.HasValue, New ObjectParameter("idempleado", idempleado), New ObjectParameter("idempleado", GetType(Long)))

        Dim horasParameter As ObjectParameter = If(horas.HasValue, New ObjectParameter("horas", horas), New ObjectParameter("horas", GetType(Decimal)))

        Dim preciohoraParameter As ObjectParameter = If(preciohora.HasValue, New ObjectParameter("preciohora", preciohora), New ObjectParameter("preciohora", GetType(Decimal)))

        Dim fechaproximomantenimientoParameter As ObjectParameter = If(fechaproximomantenimiento.HasValue, New ObjectParameter("fechaproximomantenimiento", fechaproximomantenimiento), New ObjectParameter("fechaproximomantenimiento", GetType(Date)))

        Dim costoMOParameter As ObjectParameter = If(costoMO.HasValue, New ObjectParameter("costoMO", costoMO), New ObjectParameter("costoMO", GetType(Decimal)))

        Dim costoinsumoParameter As ObjectParameter = If(costoinsumo.HasValue, New ObjectParameter("costoinsumo", costoinsumo), New ObjectParameter("costoinsumo", GetType(Decimal)))

        Dim subtotalcostoMtoParameter As ObjectParameter = If(subtotalcostoMto.HasValue, New ObjectParameter("subtotalcostoMto", subtotalcostoMto), New ObjectParameter("subtotalcostoMto", GetType(Decimal)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMaquinasHerramientas_Det_Insert", id, idMaqHerramientaParameter, fechamantenimientoParameter, descripcionParameter, idProveedorParameter, idempleadoParameter, horasParameter, preciohoraParameter, fechaproximomantenimientoParameter, costoMOParameter, costoinsumoParameter, subtotalcostoMtoParameter, useraddParameter, res)
    End Function

    Public Overridable Function spMaquinasHerramientas_Det_Select_By_IdMaquinaHerramienta(idMaquinaHerramienta As Nullable(Of Long)) As ObjectResult(Of spMaquinasHerramientas_Det_Select_By_IdMaquinaHerramienta_Result)
        Dim idMaquinaHerramientaParameter As ObjectParameter = If(idMaquinaHerramienta.HasValue, New ObjectParameter("IdMaquinaHerramienta", idMaquinaHerramienta), New ObjectParameter("IdMaquinaHerramienta", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMaquinasHerramientas_Det_Select_By_IdMaquinaHerramienta_Result)("spMaquinasHerramientas_Det_Select_By_IdMaquinaHerramienta", idMaquinaHerramientaParameter)
    End Function

    Public Overridable Function spMaquinasHerramientas_Insert(id As ObjectParameter, codigo As Nullable(Of Long), idMarca As Nullable(Of Long), fechaAlta As Nullable(Of Date), nombre As String, modelo As String, nroSerie As String, certificadoCalibracion As Nullable(Of Boolean), descripcion As String, totalCostoMto As Nullable(Of Decimal), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo.HasValue, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(Long)))

        Dim idMarcaParameter As ObjectParameter = If(idMarca.HasValue, New ObjectParameter("IdMarca", idMarca), New ObjectParameter("IdMarca", GetType(Long)))

        Dim fechaAltaParameter As ObjectParameter = If(fechaAlta.HasValue, New ObjectParameter("FechaAlta", fechaAlta), New ObjectParameter("FechaAlta", GetType(Date)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim modeloParameter As ObjectParameter = If(modelo IsNot Nothing, New ObjectParameter("Modelo", modelo), New ObjectParameter("Modelo", GetType(String)))

        Dim nroSerieParameter As ObjectParameter = If(nroSerie IsNot Nothing, New ObjectParameter("NroSerie", nroSerie), New ObjectParameter("NroSerie", GetType(String)))

        Dim certificadoCalibracionParameter As ObjectParameter = If(certificadoCalibracion.HasValue, New ObjectParameter("CertificadoCalibracion", certificadoCalibracion), New ObjectParameter("CertificadoCalibracion", GetType(Boolean)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Dim totalCostoMtoParameter As ObjectParameter = If(totalCostoMto.HasValue, New ObjectParameter("TotalCostoMto", totalCostoMto), New ObjectParameter("TotalCostoMto", GetType(Decimal)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMaquinasHerramientas_Insert", id, codigoParameter, idMarcaParameter, fechaAltaParameter, nombreParameter, modeloParameter, nroSerieParameter, certificadoCalibracionParameter, descripcionParameter, totalCostoMtoParameter, useraddParameter, res)
    End Function

    Public Overridable Function spMaquinasHerramientas_Mov_Delete(id As Nullable(Of Long), observacionDev As String, res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim observacionDevParameter As ObjectParameter = If(observacionDev IsNot Nothing, New ObjectParameter("ObservacionDev", observacionDev), New ObjectParameter("ObservacionDev", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMaquinasHerramientas_Mov_Delete", idParameter, observacionDevParameter, res)
    End Function

    Public Overridable Function spMaquinasHerramientas_Mov_Delete_All(id As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMaquinasHerramientas_Mov_Delete_All", idParameter, res)
    End Function

    Public Overridable Function spMaquinasHerramientas_Mov_Det_Delete(idMaqMov As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idMaqMovParameter As ObjectParameter = If(idMaqMov.HasValue, New ObjectParameter("IdMaqMov", idMaqMov), New ObjectParameter("IdMaqMov", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMaquinasHerramientas_Mov_Det_Delete", idMaqMovParameter, res)
    End Function

    Public Overridable Function spMaquinasHerramientas_Mov_Det_Insert(idMaqMov As Nullable(Of Long), descripcionMaq As String, cantidad As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim idMaqMovParameter As ObjectParameter = If(idMaqMov.HasValue, New ObjectParameter("IdMaqMov", idMaqMov), New ObjectParameter("IdMaqMov", GetType(Long)))

        Dim descripcionMaqParameter As ObjectParameter = If(descripcionMaq IsNot Nothing, New ObjectParameter("DescripcionMaq", descripcionMaq), New ObjectParameter("DescripcionMaq", GetType(String)))

        Dim cantidadParameter As ObjectParameter = If(cantidad.HasValue, New ObjectParameter("Cantidad", cantidad), New ObjectParameter("Cantidad", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMaquinasHerramientas_Mov_Det_Insert", idMaqMovParameter, descripcionMaqParameter, cantidadParameter, res)
    End Function

    Public Overridable Function spMaquinasHerramientas_Mov_Det_Select_By_IdMaqMov(idMaqMov As Nullable(Of Long)) As ObjectResult(Of spMaquinasHerramientas_Mov_Det_Select_By_IdMaqMov_Result)
        Dim idMaqMovParameter As ObjectParameter = If(idMaqMov.HasValue, New ObjectParameter("IdMaqMov", idMaqMov), New ObjectParameter("IdMaqMov", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMaquinasHerramientas_Mov_Det_Select_By_IdMaqMov_Result)("spMaquinasHerramientas_Mov_Det_Select_By_IdMaqMov", idMaqMovParameter)
    End Function

    Public Overridable Function spMaquinasHerramientas_Mov_Insert(id As ObjectParameter, codigo As ObjectParameter, origen As String, destino As String, idEmpleado As Nullable(Of Long), fechaMov As Nullable(Of Date), observacion As String, res As ObjectParameter) As Integer
        Dim origenParameter As ObjectParameter = If(origen IsNot Nothing, New ObjectParameter("Origen", origen), New ObjectParameter("Origen", GetType(String)))

        Dim destinoParameter As ObjectParameter = If(destino IsNot Nothing, New ObjectParameter("Destino", destino), New ObjectParameter("Destino", GetType(String)))

        Dim idEmpleadoParameter As ObjectParameter = If(idEmpleado.HasValue, New ObjectParameter("IdEmpleado", idEmpleado), New ObjectParameter("IdEmpleado", GetType(Long)))

        Dim fechaMovParameter As ObjectParameter = If(fechaMov.HasValue, New ObjectParameter("FechaMov", fechaMov), New ObjectParameter("FechaMov", GetType(Date)))

        Dim observacionParameter As ObjectParameter = If(observacion IsNot Nothing, New ObjectParameter("Observacion", observacion), New ObjectParameter("Observacion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMaquinasHerramientas_Mov_Insert", id, codigo, origenParameter, destinoParameter, idEmpleadoParameter, fechaMovParameter, observacionParameter, res)
    End Function

    Public Overridable Function spMaquinasHerramientas_Mov_Select_ALL(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spMaquinasHerramientas_Mov_Select_ALL_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("eliminado", eliminado), New ObjectParameter("eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMaquinasHerramientas_Mov_Select_ALL_Result)("spMaquinasHerramientas_Mov_Select_ALL", eliminadoParameter)
    End Function

    Public Overridable Function spMaquinasHerramientas_Mov_Update(id As Nullable(Of Long), origen As String, destino As String, idEmpleado As Nullable(Of Long), fechaMov As Nullable(Of Date), observacion As String, res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim origenParameter As ObjectParameter = If(origen IsNot Nothing, New ObjectParameter("Origen", origen), New ObjectParameter("Origen", GetType(String)))

        Dim destinoParameter As ObjectParameter = If(destino IsNot Nothing, New ObjectParameter("Destino", destino), New ObjectParameter("Destino", GetType(String)))

        Dim idEmpleadoParameter As ObjectParameter = If(idEmpleado.HasValue, New ObjectParameter("IdEmpleado", idEmpleado), New ObjectParameter("IdEmpleado", GetType(Long)))

        Dim fechaMovParameter As ObjectParameter = If(fechaMov.HasValue, New ObjectParameter("FechaMov", fechaMov), New ObjectParameter("FechaMov", GetType(Date)))

        Dim observacionParameter As ObjectParameter = If(observacion IsNot Nothing, New ObjectParameter("Observacion", observacion), New ObjectParameter("Observacion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMaquinasHerramientas_Mov_Update", idParameter, origenParameter, destinoParameter, idEmpleadoParameter, fechaMovParameter, observacionParameter, res)
    End Function

    Public Overridable Function spMaquinasHerramientas_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spMaquinasHerramientas_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMaquinasHerramientas_Select_All_Result)("spMaquinasHerramientas_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spMaquinasHerramientas_Update(id As Nullable(Of Long), idMarca As Nullable(Of Long), fechaAlta As Nullable(Of Date), nombre As String, modelo As String, nroSerie As String, certificadoCalibracion As Nullable(Of Boolean), descripcion As String, totalCostoMto As Nullable(Of Decimal), fechaBaja As Nullable(Of Date), motivoBaja As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim idMarcaParameter As ObjectParameter = If(idMarca.HasValue, New ObjectParameter("IdMarca", idMarca), New ObjectParameter("IdMarca", GetType(Long)))

        Dim fechaAltaParameter As ObjectParameter = If(fechaAlta.HasValue, New ObjectParameter("FechaAlta", fechaAlta), New ObjectParameter("FechaAlta", GetType(Date)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim modeloParameter As ObjectParameter = If(modelo IsNot Nothing, New ObjectParameter("Modelo", modelo), New ObjectParameter("Modelo", GetType(String)))

        Dim nroSerieParameter As ObjectParameter = If(nroSerie IsNot Nothing, New ObjectParameter("NroSerie", nroSerie), New ObjectParameter("NroSerie", GetType(String)))

        Dim certificadoCalibracionParameter As ObjectParameter = If(certificadoCalibracion.HasValue, New ObjectParameter("CertificadoCalibracion", certificadoCalibracion), New ObjectParameter("CertificadoCalibracion", GetType(Boolean)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Dim totalCostoMtoParameter As ObjectParameter = If(totalCostoMto.HasValue, New ObjectParameter("TotalCostoMto", totalCostoMto), New ObjectParameter("TotalCostoMto", GetType(Decimal)))

        Dim fechaBajaParameter As ObjectParameter = If(fechaBaja.HasValue, New ObjectParameter("FechaBaja", fechaBaja), New ObjectParameter("FechaBaja", GetType(Date)))

        Dim motivoBajaParameter As ObjectParameter = If(motivoBaja IsNot Nothing, New ObjectParameter("MotivoBaja", motivoBaja), New ObjectParameter("MotivoBaja", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMaquinasHerramientas_Update", idParameter, idMarcaParameter, fechaAltaParameter, nombreParameter, modeloParameter, nroSerieParameter, certificadoCalibracionParameter, descripcionParameter, totalCostoMtoParameter, fechaBajaParameter, motivoBajaParameter, useraddParameter, res)
    End Function

    Public Overridable Function spMarcarValesImpresos() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMarcarValesImpresos")
    End Function

    Public Overridable Function spMarcas_Delete(id As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMarcas_Delete", idParameter, res)
    End Function

    Public Overridable Function spMarcas_Insert(id As ObjectParameter, codigo As ObjectParameter, nombre As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMarcas_Insert", id, codigo, nombreParameter, useraddParameter, res)
    End Function

    Public Overridable Function spMarcas_Insert_DesdePresup(idMarca As ObjectParameter, codMarca As String, nombreMarca As String, useraddMarca As Nullable(Of Long), resMarca As ObjectParameter) As Integer
        Dim codMarcaParameter As ObjectParameter = If(codMarca IsNot Nothing, New ObjectParameter("CodMarca", codMarca), New ObjectParameter("CodMarca", GetType(String)))

        Dim nombreMarcaParameter As ObjectParameter = If(nombreMarca IsNot Nothing, New ObjectParameter("NombreMarca", nombreMarca), New ObjectParameter("NombreMarca", GetType(String)))

        Dim useraddMarcaParameter As ObjectParameter = If(useraddMarca.HasValue, New ObjectParameter("useraddMarca", useraddMarca), New ObjectParameter("useraddMarca", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMarcas_Insert_DesdePresup", idMarca, codMarcaParameter, nombreMarcaParameter, useraddMarcaParameter, resMarca)
    End Function

    Public Overridable Function spMarcas_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spMarcas_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMarcas_Select_All_Result)("spMarcas_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spMarcas_Select_By_Codigo(codigo As String, idMarca As ObjectParameter, marca As ObjectParameter, codMarca As ObjectParameter, res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMarcas_Select_By_Codigo", codigoParameter, idMarca, marca, codMarca, res)
    End Function

    Public Overridable Function spMarcas_Update(id As Nullable(Of Long), codigo As String, nombre As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMarcas_Update", idParameter, codigoParameter, nombreParameter, userupdParameter, res)
    End Function

    Public Overridable Function spMateriales_ActualizacionPrecios_Det_Insert(id As ObjectParameter, codigo As String, iDActPre As Nullable(Of Long), iDMaterial As String, precioCompra As Nullable(Of Decimal), precioCosto As Nullable(Of Decimal), precioMayorista As Nullable(Of Decimal), ganancia As Nullable(Of Decimal), ganancia2 As Nullable(Of Decimal), nota As String, userAdd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Dim iDActPreParameter As ObjectParameter = If(iDActPre.HasValue, New ObjectParameter("IDActPre", iDActPre), New ObjectParameter("IDActPre", GetType(Long)))

        Dim iDMaterialParameter As ObjectParameter = If(iDMaterial IsNot Nothing, New ObjectParameter("IDMaterial", iDMaterial), New ObjectParameter("IDMaterial", GetType(String)))

        Dim precioCompraParameter As ObjectParameter = If(precioCompra.HasValue, New ObjectParameter("PrecioCompra", precioCompra), New ObjectParameter("PrecioCompra", GetType(Decimal)))

        Dim precioCostoParameter As ObjectParameter = If(precioCosto.HasValue, New ObjectParameter("PrecioCosto", precioCosto), New ObjectParameter("PrecioCosto", GetType(Decimal)))

        Dim precioMayoristaParameter As ObjectParameter = If(precioMayorista.HasValue, New ObjectParameter("PrecioMayorista", precioMayorista), New ObjectParameter("PrecioMayorista", GetType(Decimal)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("Ganancia", ganancia), New ObjectParameter("Ganancia", GetType(Decimal)))

        Dim ganancia2Parameter As ObjectParameter = If(ganancia2.HasValue, New ObjectParameter("Ganancia2", ganancia2), New ObjectParameter("Ganancia2", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim userAddParameter As ObjectParameter = If(userAdd.HasValue, New ObjectParameter("UserAdd", userAdd), New ObjectParameter("UserAdd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_ActualizacionPrecios_Det_Insert", id, codigoParameter, iDActPreParameter, iDMaterialParameter, precioCompraParameter, precioCostoParameter, precioMayoristaParameter, gananciaParameter, ganancia2Parameter, notaParameter, userAddParameter, res)
    End Function

    Public Overridable Function spMateriales_ActualizacionPrecios_Insert(id As ObjectParameter, codigo As ObjectParameter, fecha As Nullable(Of Date), masivo As Nullable(Of Boolean), masivoPorcen As Nullable(Of Decimal), nota As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim masivoParameter As ObjectParameter = If(masivo.HasValue, New ObjectParameter("masivo", masivo), New ObjectParameter("masivo", GetType(Boolean)))

        Dim masivoPorcenParameter As ObjectParameter = If(masivoPorcen.HasValue, New ObjectParameter("MasivoPorcen", masivoPorcen), New ObjectParameter("MasivoPorcen", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_ActualizacionPrecios_Insert", id, codigo, fechaParameter, masivoParameter, masivoPorcenParameter, notaParameter, useraddParameter, res)
    End Function

    Public Overridable Function spMateriales_ActualizarPrecios_Det_Select_All() As ObjectResult(Of spMateriales_ActualizarPrecios_Det_Select_All_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMateriales_ActualizarPrecios_Det_Select_All_Result)("spMateriales_ActualizarPrecios_Det_Select_All")
    End Function

    Public Overridable Function spMateriales_ActualizarPrecios_Det_Select_By_IDActPre(idActPre As Nullable(Of Long)) As ObjectResult(Of spMateriales_ActualizarPrecios_Det_Select_By_IDActPre_Result)
        Dim idActPreParameter As ObjectParameter = If(idActPre.HasValue, New ObjectParameter("idActPre", idActPre), New ObjectParameter("idActPre", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMateriales_ActualizarPrecios_Det_Select_By_IDActPre_Result)("spMateriales_ActualizarPrecios_Det_Select_By_IDActPre", idActPreParameter)
    End Function

    Public Overridable Function spMateriales_ActualizarPrecios_Select_All() As ObjectResult(Of spMateriales_ActualizarPrecios_Select_All_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMateriales_ActualizarPrecios_Select_All_Result)("spMateriales_ActualizarPrecios_Select_All")
    End Function

    Public Overridable Function spMateriales_CodBarra_Update(codigo As String, codigobarra As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim codigobarraParameter As ObjectParameter = If(codigobarra IsNot Nothing, New ObjectParameter("codigobarra", codigobarra), New ObjectParameter("codigobarra", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_CodBarra_Update", codigoParameter, codigobarraParameter, userupdParameter, res)
    End Function

    Public Overridable Function spMateriales_ControlarNombre(nombre As String, cant As ObjectParameter) As ObjectResult(Of spMateriales_ControlarNombre_Result)
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMateriales_ControlarNombre_Result)("spMateriales_ControlarNombre", nombreParameter, cant)
    End Function

    Public Overridable Function spMateriales_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spMateriales_Importar_Distribuidor(res As ObjectParameter, cantNuevo As ObjectParameter, cantAct As ObjectParameter, mENSAJE As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Importar_Distribuidor", res, cantNuevo, cantAct, mENSAJE)
    End Function

    Public Overridable Function spMateriales_Importar_Distribuidor_OLD(res As ObjectParameter, cantNuevo As ObjectParameter, cantAct As ObjectParameter, mENSAJE As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Importar_Distribuidor_OLD", res, cantNuevo, cantAct, mENSAJE)
    End Function

    Public Overridable Function spMateriales_Importar_Original(res As ObjectParameter, cantNuevo As ObjectParameter, cantAct As ObjectParameter, mENSAJE As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Importar_Original", res, cantNuevo, cantAct, mENSAJE)
    End Function

    Public Overridable Function spMateriales_Importar_OTRO(res As ObjectParameter, cantNuevo As ObjectParameter, cantAct As ObjectParameter, mENSAJE As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Importar_OTRO", res, cantNuevo, cantAct, mENSAJE)
    End Function

    Public Overridable Function spMateriales_Importar_Tablerista(res As ObjectParameter, cantNuevo As ObjectParameter, cantAct As ObjectParameter, mENSAJE As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Importar_Tablerista", res, cantNuevo, cantAct, mENSAJE)
    End Function

    Public Overridable Function spMateriales_Importar_Tablerista_OLD(res As ObjectParameter, cantNuevo As ObjectParameter, cantAct As ObjectParameter, mENSAJE As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Importar_Tablerista_OLD", res, cantNuevo, cantAct, mENSAJE)
    End Function

    Public Overridable Function spMateriales_Insert(id As ObjectParameter, idmarca As String, idfamilia As String, idAlmacen As Nullable(Of Long), idunidad As String, codigo As ObjectParameter, nombre As String, preciocosto As Nullable(Of Decimal), preciocompra As Nullable(Of Decimal), precioperon As Nullable(Of Decimal), preciomayorista As Nullable(Of Decimal), preciomayoristaperon As Nullable(Of Decimal), idlistamayorista As Nullable(Of Long), idlistamayoristaperon As Nullable(Of Long), idlistaminorista As Nullable(Of Long), idlistaminoristaperon As Nullable(Of Long), preciolista3 As Nullable(Of Decimal), idlista3 As Nullable(Of Long), preciolista4 As Nullable(Of Decimal), idlista4 As Nullable(Of Long), unidadref As String, ganancia As Nullable(Of Decimal), minimo As Nullable(Of Decimal), maximo As Nullable(Of Decimal), stockInicial As Nullable(Of Decimal), stockInicialPeron As Nullable(Of Decimal), codBarra As String, pasillo As String, estante As String, fila As String, controlStock As Nullable(Of Boolean), cambiar1 As Nullable(Of Boolean), cambiar2 As Nullable(Of Boolean), cambiar3 As Nullable(Of Boolean), cambiar4 As Nullable(Of Boolean), ventaMayorista As Nullable(Of Boolean), cantidadpack As Nullable(Of Decimal), ganancia2 As Nullable(Of Decimal), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idmarcaParameter As ObjectParameter = If(idmarca IsNot Nothing, New ObjectParameter("idmarca", idmarca), New ObjectParameter("idmarca", GetType(String)))

        Dim idfamiliaParameter As ObjectParameter = If(idfamilia IsNot Nothing, New ObjectParameter("idfamilia", idfamilia), New ObjectParameter("idfamilia", GetType(String)))

        Dim idAlmacenParameter As ObjectParameter = If(idAlmacen.HasValue, New ObjectParameter("IdAlmacen", idAlmacen), New ObjectParameter("IdAlmacen", GetType(Long)))

        Dim idunidadParameter As ObjectParameter = If(idunidad IsNot Nothing, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim preciocostoParameter As ObjectParameter = If(preciocosto.HasValue, New ObjectParameter("preciocosto", preciocosto), New ObjectParameter("preciocosto", GetType(Decimal)))

        Dim preciocompraParameter As ObjectParameter = If(preciocompra.HasValue, New ObjectParameter("preciocompra", preciocompra), New ObjectParameter("preciocompra", GetType(Decimal)))

        Dim precioperonParameter As ObjectParameter = If(precioperon.HasValue, New ObjectParameter("precioperon", precioperon), New ObjectParameter("precioperon", GetType(Decimal)))

        Dim preciomayoristaParameter As ObjectParameter = If(preciomayorista.HasValue, New ObjectParameter("preciomayorista", preciomayorista), New ObjectParameter("preciomayorista", GetType(Decimal)))

        Dim preciomayoristaperonParameter As ObjectParameter = If(preciomayoristaperon.HasValue, New ObjectParameter("preciomayoristaperon", preciomayoristaperon), New ObjectParameter("preciomayoristaperon", GetType(Decimal)))

        Dim idlistamayoristaParameter As ObjectParameter = If(idlistamayorista.HasValue, New ObjectParameter("idlistamayorista", idlistamayorista), New ObjectParameter("idlistamayorista", GetType(Long)))

        Dim idlistamayoristaperonParameter As ObjectParameter = If(idlistamayoristaperon.HasValue, New ObjectParameter("idlistamayoristaperon", idlistamayoristaperon), New ObjectParameter("idlistamayoristaperon", GetType(Long)))

        Dim idlistaminoristaParameter As ObjectParameter = If(idlistaminorista.HasValue, New ObjectParameter("idlistaminorista", idlistaminorista), New ObjectParameter("idlistaminorista", GetType(Long)))

        Dim idlistaminoristaperonParameter As ObjectParameter = If(idlistaminoristaperon.HasValue, New ObjectParameter("idlistaminoristaperon", idlistaminoristaperon), New ObjectParameter("idlistaminoristaperon", GetType(Long)))

        Dim preciolista3Parameter As ObjectParameter = If(preciolista3.HasValue, New ObjectParameter("preciolista3", preciolista3), New ObjectParameter("preciolista3", GetType(Decimal)))

        Dim idlista3Parameter As ObjectParameter = If(idlista3.HasValue, New ObjectParameter("idlista3", idlista3), New ObjectParameter("idlista3", GetType(Long)))

        Dim preciolista4Parameter As ObjectParameter = If(preciolista4.HasValue, New ObjectParameter("preciolista4", preciolista4), New ObjectParameter("preciolista4", GetType(Decimal)))

        Dim idlista4Parameter As ObjectParameter = If(idlista4.HasValue, New ObjectParameter("idlista4", idlista4), New ObjectParameter("idlista4", GetType(Long)))

        Dim unidadrefParameter As ObjectParameter = If(unidadref IsNot Nothing, New ObjectParameter("unidadref", unidadref), New ObjectParameter("unidadref", GetType(String)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("ganancia", ganancia), New ObjectParameter("ganancia", GetType(Decimal)))

        Dim minimoParameter As ObjectParameter = If(minimo.HasValue, New ObjectParameter("minimo", minimo), New ObjectParameter("minimo", GetType(Decimal)))

        Dim maximoParameter As ObjectParameter = If(maximo.HasValue, New ObjectParameter("maximo", maximo), New ObjectParameter("maximo", GetType(Decimal)))

        Dim stockInicialParameter As ObjectParameter = If(stockInicial.HasValue, New ObjectParameter("StockInicial", stockInicial), New ObjectParameter("StockInicial", GetType(Decimal)))

        Dim stockInicialPeronParameter As ObjectParameter = If(stockInicialPeron.HasValue, New ObjectParameter("StockInicialPeron", stockInicialPeron), New ObjectParameter("StockInicialPeron", GetType(Decimal)))

        Dim codBarraParameter As ObjectParameter = If(codBarra IsNot Nothing, New ObjectParameter("CodBarra", codBarra), New ObjectParameter("CodBarra", GetType(String)))

        Dim pasilloParameter As ObjectParameter = If(pasillo IsNot Nothing, New ObjectParameter("Pasillo", pasillo), New ObjectParameter("Pasillo", GetType(String)))

        Dim estanteParameter As ObjectParameter = If(estante IsNot Nothing, New ObjectParameter("Estante", estante), New ObjectParameter("Estante", GetType(String)))

        Dim filaParameter As ObjectParameter = If(fila IsNot Nothing, New ObjectParameter("Fila", fila), New ObjectParameter("Fila", GetType(String)))

        Dim controlStockParameter As ObjectParameter = If(controlStock.HasValue, New ObjectParameter("ControlStock", controlStock), New ObjectParameter("ControlStock", GetType(Boolean)))

        Dim cambiar1Parameter As ObjectParameter = If(cambiar1.HasValue, New ObjectParameter("cambiar1", cambiar1), New ObjectParameter("cambiar1", GetType(Boolean)))

        Dim cambiar2Parameter As ObjectParameter = If(cambiar2.HasValue, New ObjectParameter("cambiar2", cambiar2), New ObjectParameter("cambiar2", GetType(Boolean)))

        Dim cambiar3Parameter As ObjectParameter = If(cambiar3.HasValue, New ObjectParameter("cambiar3", cambiar3), New ObjectParameter("cambiar3", GetType(Boolean)))

        Dim cambiar4Parameter As ObjectParameter = If(cambiar4.HasValue, New ObjectParameter("cambiar4", cambiar4), New ObjectParameter("cambiar4", GetType(Boolean)))

        Dim ventaMayoristaParameter As ObjectParameter = If(ventaMayorista.HasValue, New ObjectParameter("VentaMayorista", ventaMayorista), New ObjectParameter("VentaMayorista", GetType(Boolean)))

        Dim cantidadpackParameter As ObjectParameter = If(cantidadpack.HasValue, New ObjectParameter("cantidadpack", cantidadpack), New ObjectParameter("cantidadpack", GetType(Decimal)))

        Dim ganancia2Parameter As ObjectParameter = If(ganancia2.HasValue, New ObjectParameter("ganancia2", ganancia2), New ObjectParameter("ganancia2", GetType(Decimal)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Insert", id, idmarcaParameter, idfamiliaParameter, idAlmacenParameter, idunidadParameter, codigo, nombreParameter, preciocostoParameter, preciocompraParameter, precioperonParameter, preciomayoristaParameter, preciomayoristaperonParameter, idlistamayoristaParameter, idlistamayoristaperonParameter, idlistaminoristaParameter, idlistaminoristaperonParameter, preciolista3Parameter, idlista3Parameter, preciolista4Parameter, idlista4Parameter, unidadrefParameter, gananciaParameter, minimoParameter, maximoParameter, stockInicialParameter, stockInicialPeronParameter, codBarraParameter, pasilloParameter, estanteParameter, filaParameter, controlStockParameter, cambiar1Parameter, cambiar2Parameter, cambiar3Parameter, cambiar4Parameter, ventaMayoristaParameter, cantidadpackParameter, ganancia2Parameter, useraddParameter, res)
    End Function

    Public Overridable Function spMateriales_Mas_Solicitados(desde As Nullable(Of Date), hasta As Nullable(Of Date)) As ObjectResult(Of spMateriales_Mas_Solicitados_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("desde", desde), New ObjectParameter("desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("hasta", hasta), New ObjectParameter("hasta", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMateriales_Mas_Solicitados_Result)("spMateriales_Mas_Solicitados", desdeParameter, hastaParameter)
    End Function

    Public Overridable Function spMateriales_Proveedor_Det_Delete_OLD(idmp As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idmpParameter As ObjectParameter = If(idmp.HasValue, New ObjectParameter("Idmp", idmp), New ObjectParameter("Idmp", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Proveedor_Det_Delete_OLD", idmpParameter, res)
    End Function

    Public Overridable Function spMateriales_Proveedor_Det_Insert(id As ObjectParameter, idMaterial As Nullable(Of Long), codigo_Mat_Prov As String, idProveedor As Nullable(Of Long), plazoEntrega As String, idUnidadCompra As Nullable(Of Long), idMonedaCompra As Nullable(Of Long), bonif1 As Nullable(Of Decimal), bonif2 As Nullable(Of Decimal), bonif1_dis As Nullable(Of Decimal), bonif2_dis As Nullable(Of Decimal), bonif3 As Nullable(Of Decimal), bonif4 As Nullable(Of Decimal), bonif5 As Nullable(Of Decimal), ganancia As Nullable(Of Decimal), ganancia_dis As Nullable(Of Decimal), precioxMt As Nullable(Of Decimal), precioxKg As Nullable(Of Decimal), pesoxMetro As Nullable(Of Decimal), cantxLongitud As Nullable(Of Decimal), pesoxUnidad As Nullable(Of Decimal), precioLista As Nullable(Of Decimal), precioLista_Distribuidor As Nullable(Of Decimal), precioVentaSinIva As Nullable(Of Decimal), precioVentaxBulto As Nullable(Of Decimal), precioVentaSinIva_Dis As Nullable(Of Decimal), precioVentaxBulto_Dis As Nullable(Of Decimal), cantxBulto As Nullable(Of Integer), iva As Nullable(Of Decimal), iva_Dis As Nullable(Of Decimal), idMarca As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idMaterialParameter As ObjectParameter = If(idMaterial.HasValue, New ObjectParameter("idMaterial", idMaterial), New ObjectParameter("idMaterial", GetType(Long)))

        Dim codigo_Mat_ProvParameter As ObjectParameter = If(codigo_Mat_Prov IsNot Nothing, New ObjectParameter("Codigo_Mat_Prov", codigo_Mat_Prov), New ObjectParameter("Codigo_Mat_Prov", GetType(String)))

        Dim idProveedorParameter As ObjectParameter = If(idProveedor.HasValue, New ObjectParameter("idProveedor", idProveedor), New ObjectParameter("idProveedor", GetType(Long)))

        Dim plazoEntregaParameter As ObjectParameter = If(plazoEntrega IsNot Nothing, New ObjectParameter("PlazoEntrega", plazoEntrega), New ObjectParameter("PlazoEntrega", GetType(String)))

        Dim idUnidadCompraParameter As ObjectParameter = If(idUnidadCompra.HasValue, New ObjectParameter("IdUnidadCompra", idUnidadCompra), New ObjectParameter("IdUnidadCompra", GetType(Long)))

        Dim idMonedaCompraParameter As ObjectParameter = If(idMonedaCompra.HasValue, New ObjectParameter("IdMonedaCompra", idMonedaCompra), New ObjectParameter("IdMonedaCompra", GetType(Long)))

        Dim bonif1Parameter As ObjectParameter = If(bonif1.HasValue, New ObjectParameter("bonif1", bonif1), New ObjectParameter("bonif1", GetType(Decimal)))

        Dim bonif2Parameter As ObjectParameter = If(bonif2.HasValue, New ObjectParameter("bonif2", bonif2), New ObjectParameter("bonif2", GetType(Decimal)))

        Dim bonif1_disParameter As ObjectParameter = If(bonif1_dis.HasValue, New ObjectParameter("bonif1_dis", bonif1_dis), New ObjectParameter("bonif1_dis", GetType(Decimal)))

        Dim bonif2_disParameter As ObjectParameter = If(bonif2_dis.HasValue, New ObjectParameter("bonif2_dis", bonif2_dis), New ObjectParameter("bonif2_dis", GetType(Decimal)))

        Dim bonif3Parameter As ObjectParameter = If(bonif3.HasValue, New ObjectParameter("bonif3", bonif3), New ObjectParameter("bonif3", GetType(Decimal)))

        Dim bonif4Parameter As ObjectParameter = If(bonif4.HasValue, New ObjectParameter("bonif4", bonif4), New ObjectParameter("bonif4", GetType(Decimal)))

        Dim bonif5Parameter As ObjectParameter = If(bonif5.HasValue, New ObjectParameter("bonif5", bonif5), New ObjectParameter("bonif5", GetType(Decimal)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("ganancia", ganancia), New ObjectParameter("ganancia", GetType(Decimal)))

        Dim ganancia_disParameter As ObjectParameter = If(ganancia_dis.HasValue, New ObjectParameter("ganancia_dis", ganancia_dis), New ObjectParameter("ganancia_dis", GetType(Decimal)))

        Dim precioxMtParameter As ObjectParameter = If(precioxMt.HasValue, New ObjectParameter("PrecioxMt", precioxMt), New ObjectParameter("PrecioxMt", GetType(Decimal)))

        Dim precioxKgParameter As ObjectParameter = If(precioxKg.HasValue, New ObjectParameter("PrecioxKg", precioxKg), New ObjectParameter("PrecioxKg", GetType(Decimal)))

        Dim pesoxMetroParameter As ObjectParameter = If(pesoxMetro.HasValue, New ObjectParameter("PesoxMetro", pesoxMetro), New ObjectParameter("PesoxMetro", GetType(Decimal)))

        Dim cantxLongitudParameter As ObjectParameter = If(cantxLongitud.HasValue, New ObjectParameter("CantxLongitud", cantxLongitud), New ObjectParameter("CantxLongitud", GetType(Decimal)))

        Dim pesoxUnidadParameter As ObjectParameter = If(pesoxUnidad.HasValue, New ObjectParameter("PesoxUnidad", pesoxUnidad), New ObjectParameter("PesoxUnidad", GetType(Decimal)))

        Dim precioListaParameter As ObjectParameter = If(precioLista.HasValue, New ObjectParameter("PrecioLista", precioLista), New ObjectParameter("PrecioLista", GetType(Decimal)))

        Dim precioLista_DistribuidorParameter As ObjectParameter = If(precioLista_Distribuidor.HasValue, New ObjectParameter("PrecioLista_Distribuidor", precioLista_Distribuidor), New ObjectParameter("PrecioLista_Distribuidor", GetType(Decimal)))

        Dim precioVentaSinIvaParameter As ObjectParameter = If(precioVentaSinIva.HasValue, New ObjectParameter("PrecioVentaSinIva", precioVentaSinIva), New ObjectParameter("PrecioVentaSinIva", GetType(Decimal)))

        Dim precioVentaxBultoParameter As ObjectParameter = If(precioVentaxBulto.HasValue, New ObjectParameter("PrecioVentaxBulto", precioVentaxBulto), New ObjectParameter("PrecioVentaxBulto", GetType(Decimal)))

        Dim precioVentaSinIva_DisParameter As ObjectParameter = If(precioVentaSinIva_Dis.HasValue, New ObjectParameter("PrecioVentaSinIva_Dis", precioVentaSinIva_Dis), New ObjectParameter("PrecioVentaSinIva_Dis", GetType(Decimal)))

        Dim precioVentaxBulto_DisParameter As ObjectParameter = If(precioVentaxBulto_Dis.HasValue, New ObjectParameter("PrecioVentaxBulto_Dis", precioVentaxBulto_Dis), New ObjectParameter("PrecioVentaxBulto_Dis", GetType(Decimal)))

        Dim cantxBultoParameter As ObjectParameter = If(cantxBulto.HasValue, New ObjectParameter("CantxBulto", cantxBulto), New ObjectParameter("CantxBulto", GetType(Integer)))

        Dim ivaParameter As ObjectParameter = If(iva.HasValue, New ObjectParameter("Iva", iva), New ObjectParameter("Iva", GetType(Decimal)))

        Dim iva_DisParameter As ObjectParameter = If(iva_Dis.HasValue, New ObjectParameter("Iva_Dis", iva_Dis), New ObjectParameter("Iva_Dis", GetType(Decimal)))

        Dim idMarcaParameter As ObjectParameter = If(idMarca.HasValue, New ObjectParameter("IdMarca", idMarca), New ObjectParameter("IdMarca", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Proveedor_Det_Insert", id, idMaterialParameter, codigo_Mat_ProvParameter, idProveedorParameter, plazoEntregaParameter, idUnidadCompraParameter, idMonedaCompraParameter, bonif1Parameter, bonif2Parameter, bonif1_disParameter, bonif2_disParameter, bonif3Parameter, bonif4Parameter, bonif5Parameter, gananciaParameter, ganancia_disParameter, precioxMtParameter, precioxKgParameter, pesoxMetroParameter, cantxLongitudParameter, pesoxUnidadParameter, precioListaParameter, precioLista_DistribuidorParameter, precioVentaSinIvaParameter, precioVentaxBultoParameter, precioVentaSinIva_DisParameter, precioVentaxBulto_DisParameter, cantxBultoParameter, ivaParameter, iva_DisParameter, idMarcaParameter, res)
    End Function

    Public Overridable Function spMateriales_Proveedor_Det_Update(id As Nullable(Of Long), idMaterial As Nullable(Of Long), codigo_Mat_Prov As String, idProveedor As Nullable(Of Long), plazoEntrega As String, idUnidadCompra As Nullable(Of Long), idMonedaCompra As Nullable(Of Long), bonif1 As Nullable(Of Decimal), bonif2 As Nullable(Of Decimal), bonif1_dis As Nullable(Of Decimal), bonif2_dis As Nullable(Of Decimal), bonif3 As Nullable(Of Decimal), bonif4 As Nullable(Of Decimal), bonif5 As Nullable(Of Decimal), ganancia As Nullable(Of Decimal), ganancia_dis As Nullable(Of Decimal), precioxMt As Nullable(Of Decimal), precioxKg As Nullable(Of Decimal), pesoxMetro As Nullable(Of Decimal), cantxLongitud As Nullable(Of Decimal), pesoxUnidad As Nullable(Of Decimal), precioLista As Nullable(Of Decimal), precioLista_Distribuidor As Nullable(Of Decimal), precioVentaSinIva As Nullable(Of Decimal), precioVentaxBulto As Nullable(Of Decimal), precioVentaSinIva_Dis As Nullable(Of Decimal), precioVentaxBulto_Dis As Nullable(Of Decimal), cantxBulto As Nullable(Of Integer), iva As Nullable(Of Decimal), iva_Dis As Nullable(Of Decimal), idMarca As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim idMaterialParameter As ObjectParameter = If(idMaterial.HasValue, New ObjectParameter("idMaterial", idMaterial), New ObjectParameter("idMaterial", GetType(Long)))

        Dim codigo_Mat_ProvParameter As ObjectParameter = If(codigo_Mat_Prov IsNot Nothing, New ObjectParameter("Codigo_Mat_Prov", codigo_Mat_Prov), New ObjectParameter("Codigo_Mat_Prov", GetType(String)))

        Dim idProveedorParameter As ObjectParameter = If(idProveedor.HasValue, New ObjectParameter("idProveedor", idProveedor), New ObjectParameter("idProveedor", GetType(Long)))

        Dim plazoEntregaParameter As ObjectParameter = If(plazoEntrega IsNot Nothing, New ObjectParameter("PlazoEntrega", plazoEntrega), New ObjectParameter("PlazoEntrega", GetType(String)))

        Dim idUnidadCompraParameter As ObjectParameter = If(idUnidadCompra.HasValue, New ObjectParameter("IdUnidadCompra", idUnidadCompra), New ObjectParameter("IdUnidadCompra", GetType(Long)))

        Dim idMonedaCompraParameter As ObjectParameter = If(idMonedaCompra.HasValue, New ObjectParameter("IdMonedaCompra", idMonedaCompra), New ObjectParameter("IdMonedaCompra", GetType(Long)))

        Dim bonif1Parameter As ObjectParameter = If(bonif1.HasValue, New ObjectParameter("bonif1", bonif1), New ObjectParameter("bonif1", GetType(Decimal)))

        Dim bonif2Parameter As ObjectParameter = If(bonif2.HasValue, New ObjectParameter("bonif2", bonif2), New ObjectParameter("bonif2", GetType(Decimal)))

        Dim bonif1_disParameter As ObjectParameter = If(bonif1_dis.HasValue, New ObjectParameter("bonif1_dis", bonif1_dis), New ObjectParameter("bonif1_dis", GetType(Decimal)))

        Dim bonif2_disParameter As ObjectParameter = If(bonif2_dis.HasValue, New ObjectParameter("bonif2_dis", bonif2_dis), New ObjectParameter("bonif2_dis", GetType(Decimal)))

        Dim bonif3Parameter As ObjectParameter = If(bonif3.HasValue, New ObjectParameter("bonif3", bonif3), New ObjectParameter("bonif3", GetType(Decimal)))

        Dim bonif4Parameter As ObjectParameter = If(bonif4.HasValue, New ObjectParameter("bonif4", bonif4), New ObjectParameter("bonif4", GetType(Decimal)))

        Dim bonif5Parameter As ObjectParameter = If(bonif5.HasValue, New ObjectParameter("bonif5", bonif5), New ObjectParameter("bonif5", GetType(Decimal)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("ganancia", ganancia), New ObjectParameter("ganancia", GetType(Decimal)))

        Dim ganancia_disParameter As ObjectParameter = If(ganancia_dis.HasValue, New ObjectParameter("ganancia_dis", ganancia_dis), New ObjectParameter("ganancia_dis", GetType(Decimal)))

        Dim precioxMtParameter As ObjectParameter = If(precioxMt.HasValue, New ObjectParameter("PrecioxMt", precioxMt), New ObjectParameter("PrecioxMt", GetType(Decimal)))

        Dim precioxKgParameter As ObjectParameter = If(precioxKg.HasValue, New ObjectParameter("PrecioxKg", precioxKg), New ObjectParameter("PrecioxKg", GetType(Decimal)))

        Dim pesoxMetroParameter As ObjectParameter = If(pesoxMetro.HasValue, New ObjectParameter("PesoxMetro", pesoxMetro), New ObjectParameter("PesoxMetro", GetType(Decimal)))

        Dim cantxLongitudParameter As ObjectParameter = If(cantxLongitud.HasValue, New ObjectParameter("CantxLongitud", cantxLongitud), New ObjectParameter("CantxLongitud", GetType(Decimal)))

        Dim pesoxUnidadParameter As ObjectParameter = If(pesoxUnidad.HasValue, New ObjectParameter("PesoxUnidad", pesoxUnidad), New ObjectParameter("PesoxUnidad", GetType(Decimal)))

        Dim precioListaParameter As ObjectParameter = If(precioLista.HasValue, New ObjectParameter("PrecioLista", precioLista), New ObjectParameter("PrecioLista", GetType(Decimal)))

        Dim precioLista_DistribuidorParameter As ObjectParameter = If(precioLista_Distribuidor.HasValue, New ObjectParameter("PrecioLista_Distribuidor", precioLista_Distribuidor), New ObjectParameter("PrecioLista_Distribuidor", GetType(Decimal)))

        Dim precioVentaSinIvaParameter As ObjectParameter = If(precioVentaSinIva.HasValue, New ObjectParameter("PrecioVentaSinIva", precioVentaSinIva), New ObjectParameter("PrecioVentaSinIva", GetType(Decimal)))

        Dim precioVentaxBultoParameter As ObjectParameter = If(precioVentaxBulto.HasValue, New ObjectParameter("PrecioVentaxBulto", precioVentaxBulto), New ObjectParameter("PrecioVentaxBulto", GetType(Decimal)))

        Dim precioVentaSinIva_DisParameter As ObjectParameter = If(precioVentaSinIva_Dis.HasValue, New ObjectParameter("PrecioVentaSinIva_Dis", precioVentaSinIva_Dis), New ObjectParameter("PrecioVentaSinIva_Dis", GetType(Decimal)))

        Dim precioVentaxBulto_DisParameter As ObjectParameter = If(precioVentaxBulto_Dis.HasValue, New ObjectParameter("PrecioVentaxBulto_Dis", precioVentaxBulto_Dis), New ObjectParameter("PrecioVentaxBulto_Dis", GetType(Decimal)))

        Dim cantxBultoParameter As ObjectParameter = If(cantxBulto.HasValue, New ObjectParameter("CantxBulto", cantxBulto), New ObjectParameter("CantxBulto", GetType(Integer)))

        Dim ivaParameter As ObjectParameter = If(iva.HasValue, New ObjectParameter("Iva", iva), New ObjectParameter("Iva", GetType(Decimal)))

        Dim iva_DisParameter As ObjectParameter = If(iva_Dis.HasValue, New ObjectParameter("Iva_Dis", iva_Dis), New ObjectParameter("Iva_Dis", GetType(Decimal)))

        Dim idMarcaParameter As ObjectParameter = If(idMarca.HasValue, New ObjectParameter("IdMarca", idMarca), New ObjectParameter("IdMarca", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Proveedor_Det_Update", idParameter, idMaterialParameter, codigo_Mat_ProvParameter, idProveedorParameter, plazoEntregaParameter, idUnidadCompraParameter, idMonedaCompraParameter, bonif1Parameter, bonif2Parameter, bonif1_disParameter, bonif2_disParameter, bonif3Parameter, bonif4Parameter, bonif5Parameter, gananciaParameter, ganancia_disParameter, precioxMtParameter, precioxKgParameter, pesoxMetroParameter, cantxLongitudParameter, pesoxUnidadParameter, precioListaParameter, precioLista_DistribuidorParameter, precioVentaSinIvaParameter, precioVentaxBultoParameter, precioVentaSinIva_DisParameter, precioVentaxBulto_DisParameter, cantxBultoParameter, ivaParameter, iva_DisParameter, idMarcaParameter, res)
    End Function

    Public Overridable Function spMateriales_Proveedor_Select_By_Codigo(codigo As String, iD_prov As ObjectParameter, nombre_prov As ObjectParameter, bonificacion As ObjectParameter, ganancia As ObjectParameter, res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Proveedor_Select_By_Codigo", codigoParameter, iD_prov, nombre_prov, bonificacion, ganancia, res)
    End Function

    Public Overridable Function spMateriales_Proveedor_Select_By_IdMaterial(idMaterial As Nullable(Of Long)) As Integer
        Dim idMaterialParameter As ObjectParameter = If(idMaterial.HasValue, New ObjectParameter("IdMaterial", idMaterial), New ObjectParameter("IdMaterial", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Proveedor_Select_By_IdMaterial", idMaterialParameter)
    End Function

    Public Overridable Function spMateriales_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spMateriales_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMateriales_Select_All_Result)("spMateriales_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spMateriales_Select_All_Excel(bitRubro As Nullable(Of Boolean), rubro As String, bitLista As Nullable(Of Boolean), lista As Nullable(Of Long)) As ObjectResult(Of spMateriales_Select_All_Excel_Result)
        Dim bitRubroParameter As ObjectParameter = If(bitRubro.HasValue, New ObjectParameter("BitRubro", bitRubro), New ObjectParameter("BitRubro", GetType(Boolean)))

        Dim rubroParameter As ObjectParameter = If(rubro IsNot Nothing, New ObjectParameter("Rubro", rubro), New ObjectParameter("Rubro", GetType(String)))

        Dim bitListaParameter As ObjectParameter = If(bitLista.HasValue, New ObjectParameter("BitLista", bitLista), New ObjectParameter("BitLista", GetType(Boolean)))

        Dim listaParameter As ObjectParameter = If(lista.HasValue, New ObjectParameter("Lista", lista), New ObjectParameter("Lista", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMateriales_Select_All_Excel_Result)("spMateriales_Select_All_Excel", bitRubroParameter, rubroParameter, bitListaParameter, listaParameter)
    End Function

    Public Overridable Function spMateriales_Select_All_Excel_2(bitRubro As Nullable(Of Boolean), rubro As String, mayorista As Nullable(Of Boolean), minorista As Nullable(Of Boolean)) As ObjectResult(Of spMateriales_Select_All_Excel_2_Result)
        Dim bitRubroParameter As ObjectParameter = If(bitRubro.HasValue, New ObjectParameter("BitRubro", bitRubro), New ObjectParameter("BitRubro", GetType(Boolean)))

        Dim rubroParameter As ObjectParameter = If(rubro IsNot Nothing, New ObjectParameter("Rubro", rubro), New ObjectParameter("Rubro", GetType(String)))

        Dim mayoristaParameter As ObjectParameter = If(mayorista.HasValue, New ObjectParameter("Mayorista", mayorista), New ObjectParameter("Mayorista", GetType(Boolean)))

        Dim minoristaParameter As ObjectParameter = If(minorista.HasValue, New ObjectParameter("Minorista", minorista), New ObjectParameter("Minorista", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMateriales_Select_All_Excel_2_Result)("spMateriales_Select_All_Excel_2", bitRubroParameter, rubroParameter, mayoristaParameter, minoristaParameter)
    End Function

    Public Overridable Function spMateriales_Select_By_Codigo(codigo As String, codigo_mat_prov As ObjectParameter, iD As ObjectParameter, nombre As ObjectParameter, iDUnidad As ObjectParameter, codigoUnidad As ObjectParameter, nombreUnidad As ObjectParameter, qtyStock As ObjectParameter, minimo As ObjectParameter, maximo As ObjectParameter, preciolista As ObjectParameter, ganancia As ObjectParameter, precioVta As ObjectParameter, precioVtaOrig As ObjectParameter, gananciaOrig As ObjectParameter, iVA As ObjectParameter, dATEUPD As ObjectParameter, idProveedor As ObjectParameter, proveedor As ObjectParameter, idMarca As ObjectParameter, marca As ObjectParameter, idMoneda As ObjectParameter, codMoneda As ObjectParameter, valorcambio As ObjectParameter, plazoEntrega As ObjectParameter, montoIVA As ObjectParameter, idMat_Prov As ObjectParameter, tablerista As Nullable(Of Boolean), codBarra As ObjectParameter, pasillo As ObjectParameter, estante As ObjectParameter, fila As ObjectParameter, res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim tableristaParameter As ObjectParameter = If(tablerista.HasValue, New ObjectParameter("Tablerista", tablerista), New ObjectParameter("Tablerista", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Select_By_Codigo", codigoParameter, codigo_mat_prov, iD, nombre, iDUnidad, codigoUnidad, nombreUnidad, qtyStock, minimo, maximo, preciolista, ganancia, precioVta, precioVtaOrig, gananciaOrig, iVA, dATEUPD, idProveedor, proveedor, idMarca, marca, idMoneda, codMoneda, valorcambio, plazoEntrega, montoIVA, idMat_Prov, tableristaParameter, codBarra, pasillo, estante, fila, res)
    End Function

    Public Overridable Function spMateriales_Select_By_Codigo_Almacen(codigo As String, iD As ObjectParameter, nombre As ObjectParameter, iDUnidad As ObjectParameter, nombreUnidad As ObjectParameter, qtyStock As ObjectParameter, minimo As ObjectParameter, maximo As ObjectParameter, res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Select_By_Codigo_Almacen", codigoParameter, iD, nombre, iDUnidad, nombreUnidad, qtyStock, minimo, maximo, res)
    End Function

    Public Overridable Function spMateriales_Select_By_Codigo_Almacen_Lote(codigo As String, iD As ObjectParameter, nombre As ObjectParameter, iDUnidad As ObjectParameter, nombreUnidad As ObjectParameter, manejaLote As ObjectParameter, qtyStock As ObjectParameter, minimo As ObjectParameter, maximo As ObjectParameter, ubicacion As ObjectParameter, almacen As Nullable(Of Long), lote As Nullable(Of Long), status As ObjectParameter, res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim almacenParameter As ObjectParameter = If(almacen.HasValue, New ObjectParameter("almacen", almacen), New ObjectParameter("almacen", GetType(Long)))

        Dim loteParameter As ObjectParameter = If(lote.HasValue, New ObjectParameter("lote", lote), New ObjectParameter("lote", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Select_By_Codigo_Almacen_Lote", codigoParameter, iD, nombre, iDUnidad, nombreUnidad, manejaLote, qtyStock, minimo, maximo, ubicacion, almacenParameter, loteParameter, status, res)
    End Function

    Public Overridable Function spMateriales_Select_By_Nombre(nombreMaterial As String, codigo As String, codigoBarra As String) As Integer
        Dim nombreMaterialParameter As ObjectParameter = If(nombreMaterial IsNot Nothing, New ObjectParameter("NombreMaterial", nombreMaterial), New ObjectParameter("NombreMaterial", GetType(String)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Dim codigoBarraParameter As ObjectParameter = If(codigoBarra IsNot Nothing, New ObjectParameter("CodigoBarra", codigoBarra), New ObjectParameter("CodigoBarra", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Select_By_Nombre", nombreMaterialParameter, codigoParameter, codigoBarraParameter)
    End Function

    Public Overridable Function spMateriales_Select_Combo() As ObjectResult(Of spMateriales_Select_Combo_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMateriales_Select_Combo_Result)("spMateriales_Select_Combo")
    End Function

    Public Overridable Function spMateriales_Stock_ALmacen(idMaterial As String) As Integer
        Dim idMaterialParameter As ObjectParameter = If(idMaterial IsNot Nothing, New ObjectParameter("IdMaterial", idMaterial), New ObjectParameter("IdMaterial", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Stock_ALmacen", idMaterialParameter)
    End Function

    Public Overridable Function spMateriales_StockMovSalon_Insert(iDALMACEN As Nullable(Of Double), aPERTURAPACK As Nullable(Of Boolean), iDPack As String, iDUnidadPack As String, qTYPack As Nullable(Of Decimal), iDUnitario As String, iDUnidadUnitario As String, qTYUnitario As Nullable(Of Decimal), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim iDALMACENParameter As ObjectParameter = If(iDALMACEN.HasValue, New ObjectParameter("IDALMACEN", iDALMACEN), New ObjectParameter("IDALMACEN", GetType(Double)))

        Dim aPERTURAPACKParameter As ObjectParameter = If(aPERTURAPACK.HasValue, New ObjectParameter("APERTURAPACK", aPERTURAPACK), New ObjectParameter("APERTURAPACK", GetType(Boolean)))

        Dim iDPackParameter As ObjectParameter = If(iDPack IsNot Nothing, New ObjectParameter("IDPack", iDPack), New ObjectParameter("IDPack", GetType(String)))

        Dim iDUnidadPackParameter As ObjectParameter = If(iDUnidadPack IsNot Nothing, New ObjectParameter("IDUnidadPack", iDUnidadPack), New ObjectParameter("IDUnidadPack", GetType(String)))

        Dim qTYPackParameter As ObjectParameter = If(qTYPack.HasValue, New ObjectParameter("QTYPack", qTYPack), New ObjectParameter("QTYPack", GetType(Decimal)))

        Dim iDUnitarioParameter As ObjectParameter = If(iDUnitario IsNot Nothing, New ObjectParameter("IDUnitario", iDUnitario), New ObjectParameter("IDUnitario", GetType(String)))

        Dim iDUnidadUnitarioParameter As ObjectParameter = If(iDUnidadUnitario IsNot Nothing, New ObjectParameter("IDUnidadUnitario", iDUnidadUnitario), New ObjectParameter("IDUnidadUnitario", GetType(String)))

        Dim qTYUnitarioParameter As ObjectParameter = If(qTYUnitario.HasValue, New ObjectParameter("QTYUnitario", qTYUnitario), New ObjectParameter("QTYUnitario", GetType(Decimal)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_StockMovSalon_Insert", iDALMACENParameter, aPERTURAPACKParameter, iDPackParameter, iDUnidadPackParameter, qTYPackParameter, iDUnitarioParameter, iDUnidadUnitarioParameter, qTYUnitarioParameter, userupdParameter, res)
    End Function

    Public Overridable Function spMateriales_Update(id As Nullable(Of Long), idmarca As String, idfamilia As String, idunidad As String, codigo As String, nombre As String, preciocosto As Nullable(Of Decimal), preciocompra As Nullable(Of Decimal), precioPeron As Nullable(Of Decimal), preciomayorista As Nullable(Of Decimal), preciomayoristaperon As Nullable(Of Decimal), idlistamayorista As Nullable(Of Long), idlistamayoristaperon As Nullable(Of Long), idlistaminorista As Nullable(Of Long), idlistaminoristaperon As Nullable(Of Long), preciolista3 As Nullable(Of Decimal), idlista3 As Nullable(Of Long), preciolista4 As Nullable(Of Decimal), idlista4 As Nullable(Of Long), unidadref As String, ganancia As Nullable(Of Decimal), minimo As Nullable(Of Decimal), maximo As Nullable(Of Decimal), codBarra As String, pasillo As String, estante As String, fila As String, controlStock As Nullable(Of Boolean), cambiar1 As Nullable(Of Boolean), cambiar2 As Nullable(Of Boolean), cambiar3 As Nullable(Of Boolean), cambiar4 As Nullable(Of Boolean), ventaMayorista As Nullable(Of Boolean), mensaje As ObjectParameter, cantidadpack As Nullable(Of Decimal), ganancia2 As Nullable(Of Decimal), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim idmarcaParameter As ObjectParameter = If(idmarca IsNot Nothing, New ObjectParameter("idmarca", idmarca), New ObjectParameter("idmarca", GetType(String)))

        Dim idfamiliaParameter As ObjectParameter = If(idfamilia IsNot Nothing, New ObjectParameter("idfamilia", idfamilia), New ObjectParameter("idfamilia", GetType(String)))

        Dim idunidadParameter As ObjectParameter = If(idunidad IsNot Nothing, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(String)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim preciocostoParameter As ObjectParameter = If(preciocosto.HasValue, New ObjectParameter("preciocosto", preciocosto), New ObjectParameter("preciocosto", GetType(Decimal)))

        Dim preciocompraParameter As ObjectParameter = If(preciocompra.HasValue, New ObjectParameter("preciocompra", preciocompra), New ObjectParameter("preciocompra", GetType(Decimal)))

        Dim precioPeronParameter As ObjectParameter = If(precioPeron.HasValue, New ObjectParameter("precioPeron", precioPeron), New ObjectParameter("precioPeron", GetType(Decimal)))

        Dim preciomayoristaParameter As ObjectParameter = If(preciomayorista.HasValue, New ObjectParameter("preciomayorista", preciomayorista), New ObjectParameter("preciomayorista", GetType(Decimal)))

        Dim preciomayoristaperonParameter As ObjectParameter = If(preciomayoristaperon.HasValue, New ObjectParameter("preciomayoristaperon", preciomayoristaperon), New ObjectParameter("preciomayoristaperon", GetType(Decimal)))

        Dim idlistamayoristaParameter As ObjectParameter = If(idlistamayorista.HasValue, New ObjectParameter("idlistamayorista", idlistamayorista), New ObjectParameter("idlistamayorista", GetType(Long)))

        Dim idlistamayoristaperonParameter As ObjectParameter = If(idlistamayoristaperon.HasValue, New ObjectParameter("idlistamayoristaperon", idlistamayoristaperon), New ObjectParameter("idlistamayoristaperon", GetType(Long)))

        Dim idlistaminoristaParameter As ObjectParameter = If(idlistaminorista.HasValue, New ObjectParameter("idlistaminorista", idlistaminorista), New ObjectParameter("idlistaminorista", GetType(Long)))

        Dim idlistaminoristaperonParameter As ObjectParameter = If(idlistaminoristaperon.HasValue, New ObjectParameter("idlistaminoristaperon", idlistaminoristaperon), New ObjectParameter("idlistaminoristaperon", GetType(Long)))

        Dim preciolista3Parameter As ObjectParameter = If(preciolista3.HasValue, New ObjectParameter("preciolista3", preciolista3), New ObjectParameter("preciolista3", GetType(Decimal)))

        Dim idlista3Parameter As ObjectParameter = If(idlista3.HasValue, New ObjectParameter("idlista3", idlista3), New ObjectParameter("idlista3", GetType(Long)))

        Dim preciolista4Parameter As ObjectParameter = If(preciolista4.HasValue, New ObjectParameter("preciolista4", preciolista4), New ObjectParameter("preciolista4", GetType(Decimal)))

        Dim idlista4Parameter As ObjectParameter = If(idlista4.HasValue, New ObjectParameter("idlista4", idlista4), New ObjectParameter("idlista4", GetType(Long)))

        Dim unidadrefParameter As ObjectParameter = If(unidadref IsNot Nothing, New ObjectParameter("unidadref", unidadref), New ObjectParameter("unidadref", GetType(String)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("ganancia", ganancia), New ObjectParameter("ganancia", GetType(Decimal)))

        Dim minimoParameter As ObjectParameter = If(minimo.HasValue, New ObjectParameter("minimo", minimo), New ObjectParameter("minimo", GetType(Decimal)))

        Dim maximoParameter As ObjectParameter = If(maximo.HasValue, New ObjectParameter("maximo", maximo), New ObjectParameter("maximo", GetType(Decimal)))

        Dim codBarraParameter As ObjectParameter = If(codBarra IsNot Nothing, New ObjectParameter("CodBarra", codBarra), New ObjectParameter("CodBarra", GetType(String)))

        Dim pasilloParameter As ObjectParameter = If(pasillo IsNot Nothing, New ObjectParameter("Pasillo", pasillo), New ObjectParameter("Pasillo", GetType(String)))

        Dim estanteParameter As ObjectParameter = If(estante IsNot Nothing, New ObjectParameter("Estante", estante), New ObjectParameter("Estante", GetType(String)))

        Dim filaParameter As ObjectParameter = If(fila IsNot Nothing, New ObjectParameter("Fila", fila), New ObjectParameter("Fila", GetType(String)))

        Dim controlStockParameter As ObjectParameter = If(controlStock.HasValue, New ObjectParameter("ControlStock", controlStock), New ObjectParameter("ControlStock", GetType(Boolean)))

        Dim cambiar1Parameter As ObjectParameter = If(cambiar1.HasValue, New ObjectParameter("cambiar1", cambiar1), New ObjectParameter("cambiar1", GetType(Boolean)))

        Dim cambiar2Parameter As ObjectParameter = If(cambiar2.HasValue, New ObjectParameter("cambiar2", cambiar2), New ObjectParameter("cambiar2", GetType(Boolean)))

        Dim cambiar3Parameter As ObjectParameter = If(cambiar3.HasValue, New ObjectParameter("cambiar3", cambiar3), New ObjectParameter("cambiar3", GetType(Boolean)))

        Dim cambiar4Parameter As ObjectParameter = If(cambiar4.HasValue, New ObjectParameter("cambiar4", cambiar4), New ObjectParameter("cambiar4", GetType(Boolean)))

        Dim ventaMayoristaParameter As ObjectParameter = If(ventaMayorista.HasValue, New ObjectParameter("VentaMayorista", ventaMayorista), New ObjectParameter("VentaMayorista", GetType(Boolean)))

        Dim cantidadpackParameter As ObjectParameter = If(cantidadpack.HasValue, New ObjectParameter("cantidadpack", cantidadpack), New ObjectParameter("cantidadpack", GetType(Decimal)))

        Dim ganancia2Parameter As ObjectParameter = If(ganancia2.HasValue, New ObjectParameter("ganancia2", ganancia2), New ObjectParameter("ganancia2", GetType(Decimal)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Update", idParameter, idmarcaParameter, idfamiliaParameter, idunidadParameter, codigoParameter, nombreParameter, preciocostoParameter, preciocompraParameter, precioPeronParameter, preciomayoristaParameter, preciomayoristaperonParameter, idlistamayoristaParameter, idlistamayoristaperonParameter, idlistaminoristaParameter, idlistaminoristaperonParameter, preciolista3Parameter, idlista3Parameter, preciolista4Parameter, idlista4Parameter, unidadrefParameter, gananciaParameter, minimoParameter, maximoParameter, codBarraParameter, pasilloParameter, estanteParameter, filaParameter, controlStockParameter, cambiar1Parameter, cambiar2Parameter, cambiar3Parameter, cambiar4Parameter, ventaMayoristaParameter, mensaje, cantidadpackParameter, ganancia2Parameter, userupdParameter, res)
    End Function

    Public Overridable Function spMateriales_Update_Orden(id As Nullable(Of Long), orden As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim ordenParameter As ObjectParameter = If(orden.HasValue, New ObjectParameter("orden", orden), New ObjectParameter("orden", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Update_Orden", idParameter, ordenParameter)
    End Function

    Public Overridable Function spMateriales_Update_Precio(id As Nullable(Of Long), tablerista As Nullable(Of Boolean), idMaterial As Nullable(Of Long), preciolista As Nullable(Of Decimal), bonif1 As Nullable(Of Decimal), bonif2 As Nullable(Of Decimal), bonif3 As Nullable(Of Decimal), bonif4 As Nullable(Of Decimal), bonif5 As Nullable(Of Decimal), ganancia As Nullable(Of Decimal), precio As Nullable(Of Decimal), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim tableristaParameter As ObjectParameter = If(tablerista.HasValue, New ObjectParameter("Tablerista", tablerista), New ObjectParameter("Tablerista", GetType(Boolean)))

        Dim idMaterialParameter As ObjectParameter = If(idMaterial.HasValue, New ObjectParameter("IdMaterial", idMaterial), New ObjectParameter("IdMaterial", GetType(Long)))

        Dim preciolistaParameter As ObjectParameter = If(preciolista.HasValue, New ObjectParameter("preciolista", preciolista), New ObjectParameter("preciolista", GetType(Decimal)))

        Dim bonif1Parameter As ObjectParameter = If(bonif1.HasValue, New ObjectParameter("bonif1", bonif1), New ObjectParameter("bonif1", GetType(Decimal)))

        Dim bonif2Parameter As ObjectParameter = If(bonif2.HasValue, New ObjectParameter("bonif2", bonif2), New ObjectParameter("bonif2", GetType(Decimal)))

        Dim bonif3Parameter As ObjectParameter = If(bonif3.HasValue, New ObjectParameter("bonif3", bonif3), New ObjectParameter("bonif3", GetType(Decimal)))

        Dim bonif4Parameter As ObjectParameter = If(bonif4.HasValue, New ObjectParameter("bonif4", bonif4), New ObjectParameter("bonif4", GetType(Decimal)))

        Dim bonif5Parameter As ObjectParameter = If(bonif5.HasValue, New ObjectParameter("bonif5", bonif5), New ObjectParameter("bonif5", GetType(Decimal)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("ganancia", ganancia), New ObjectParameter("ganancia", GetType(Decimal)))

        Dim precioParameter As ObjectParameter = If(precio.HasValue, New ObjectParameter("precio", precio), New ObjectParameter("precio", GetType(Decimal)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMateriales_Update_Precio", idParameter, tableristaParameter, idMaterialParameter, preciolistaParameter, bonif1Parameter, bonif2Parameter, bonif3Parameter, bonif4Parameter, bonif5Parameter, gananciaParameter, precioParameter, userupdParameter, res)
    End Function

    Public Overridable Function spMonedas_Select_By_Codigo(codigo As String, idMoneda As ObjectParameter, moneda As ObjectParameter, codMoneda As ObjectParameter, valorCambio As ObjectParameter, res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMonedas_Select_By_Codigo", codigoParameter, idMoneda, moneda, codMoneda, valorCambio, res)
    End Function

    Public Overridable Function spMonedas_Update(peso As Nullable(Of Decimal), dolar As Nullable(Of Decimal), euro As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim pesoParameter As ObjectParameter = If(peso.HasValue, New ObjectParameter("peso", peso), New ObjectParameter("peso", GetType(Decimal)))

        Dim dolarParameter As ObjectParameter = If(dolar.HasValue, New ObjectParameter("dolar", dolar), New ObjectParameter("dolar", GetType(Decimal)))

        Dim euroParameter As ObjectParameter = If(euro.HasValue, New ObjectParameter("euro", euro), New ObjectParameter("euro", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMonedas_Update", pesoParameter, dolarParameter, euroParameter, res)
    End Function

    Public Overridable Function spMovimientos_Caja(fecha As String) As ObjectResult(Of spMovimientos_Caja_Result)
        Dim fechaParameter As ObjectParameter = If(fecha IsNot Nothing, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMovimientos_Caja_Result)("spMovimientos_Caja", fechaParameter)
    End Function

    Public Overridable Function spMovimientos_Caja_All() As ObjectResult(Of spMovimientos_Caja_All_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMovimientos_Caja_All_Result)("spMovimientos_Caja_All")
    End Function

    Public Overridable Function spMovimientos_de_caja_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMovimientos_de_caja_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spMovimientos_de_caja_Insert(id As ObjectParameter, idAlmacen As Nullable(Of Long), observacion As String, monto As Nullable(Of Decimal), movimiento As String, fecha As Nullable(Of Date), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idAlmacenParameter As ObjectParameter = If(idAlmacen.HasValue, New ObjectParameter("IdAlmacen", idAlmacen), New ObjectParameter("IdAlmacen", GetType(Long)))

        Dim observacionParameter As ObjectParameter = If(observacion IsNot Nothing, New ObjectParameter("observacion", observacion), New ObjectParameter("observacion", GetType(String)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("monto", monto), New ObjectParameter("monto", GetType(Decimal)))

        Dim movimientoParameter As ObjectParameter = If(movimiento IsNot Nothing, New ObjectParameter("movimiento", movimiento), New ObjectParameter("movimiento", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMovimientos_de_caja_Insert", id, idAlmacenParameter, observacionParameter, montoParameter, movimientoParameter, fechaParameter, useraddParameter, res)
    End Function

    Public Overridable Function spMovimientos_de_caja_selecting(idAlmacen As Nullable(Of Long), movimiento As String, fecha As Nullable(Of Date), eliminado As Nullable(Of Boolean)) As ObjectResult(Of spMovimientos_de_caja_selecting_Result)
        Dim idAlmacenParameter As ObjectParameter = If(idAlmacen.HasValue, New ObjectParameter("IdAlmacen", idAlmacen), New ObjectParameter("IdAlmacen", GetType(Long)))

        Dim movimientoParameter As ObjectParameter = If(movimiento IsNot Nothing, New ObjectParameter("movimiento", movimiento), New ObjectParameter("movimiento", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("eliminado", eliminado), New ObjectParameter("eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMovimientos_de_caja_selecting_Result)("spMovimientos_de_caja_selecting", idAlmacenParameter, movimientoParameter, fechaParameter, eliminadoParameter)
    End Function

    Public Overridable Function spMovimientos_de_caja_Update(id As ObjectParameter, idAlmacen As Nullable(Of Long), observacion As String, monto As Nullable(Of Decimal), movimiento As String, fecha As Nullable(Of Date), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idAlmacenParameter As ObjectParameter = If(idAlmacen.HasValue, New ObjectParameter("IdAlmacen", idAlmacen), New ObjectParameter("IdAlmacen", GetType(Long)))

        Dim observacionParameter As ObjectParameter = If(observacion IsNot Nothing, New ObjectParameter("observacion", observacion), New ObjectParameter("observacion", GetType(String)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("monto", monto), New ObjectParameter("monto", GetType(Decimal)))

        Dim movimientoParameter As ObjectParameter = If(movimiento IsNot Nothing, New ObjectParameter("movimiento", movimiento), New ObjectParameter("movimiento", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spMovimientos_de_caja_Update", id, idAlmacenParameter, observacionParameter, montoParameter, movimientoParameter, fechaParameter, userupdParameter, res)
    End Function

    Public Overridable Function spMovimientosdelDia(desde As Nullable(Of Date), hasta As Nullable(Of Date)) As ObjectResult(Of spMovimientosdelDia_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMovimientosdelDia_Result)("spMovimientosdelDia", desdeParameter, hastaParameter)
    End Function

    Public Overridable Function spNotas_Delete(id As Nullable(Of Integer), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spNotas_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spNotas_Insert(id As ObjectParameter, nota As String, obligatorio As Nullable(Of Boolean), orden As Nullable(Of Short), soloDolar As Nullable(Of Boolean), soloPeso As Nullable(Of Boolean), useradd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim obligatorioParameter As ObjectParameter = If(obligatorio.HasValue, New ObjectParameter("Obligatorio", obligatorio), New ObjectParameter("Obligatorio", GetType(Boolean)))

        Dim ordenParameter As ObjectParameter = If(orden.HasValue, New ObjectParameter("Orden", orden), New ObjectParameter("Orden", GetType(Short)))

        Dim soloDolarParameter As ObjectParameter = If(soloDolar.HasValue, New ObjectParameter("SoloDolar", soloDolar), New ObjectParameter("SoloDolar", GetType(Boolean)))

        Dim soloPesoParameter As ObjectParameter = If(soloPeso.HasValue, New ObjectParameter("SoloPeso", soloPeso), New ObjectParameter("SoloPeso", GetType(Boolean)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spNotas_Insert", id, notaParameter, obligatorioParameter, ordenParameter, soloDolarParameter, soloPesoParameter, useraddParameter, res)
    End Function

    Public Overridable Function spNotas_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spNotas_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spNotas_Select_All_Result)("spNotas_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spNotas_Update(id As Nullable(Of Integer), nota As String, obligatorio As Nullable(Of Boolean), orden As Nullable(Of Short), soloDolar As Nullable(Of Boolean), soloPeso As Nullable(Of Boolean), userupd As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim obligatorioParameter As ObjectParameter = If(obligatorio.HasValue, New ObjectParameter("Obligatorio", obligatorio), New ObjectParameter("Obligatorio", GetType(Boolean)))

        Dim ordenParameter As ObjectParameter = If(orden.HasValue, New ObjectParameter("Orden", orden), New ObjectParameter("Orden", GetType(Short)))

        Dim soloDolarParameter As ObjectParameter = If(soloDolar.HasValue, New ObjectParameter("SoloDolar", soloDolar), New ObjectParameter("SoloDolar", GetType(Boolean)))

        Dim soloPesoParameter As ObjectParameter = If(soloPeso.HasValue, New ObjectParameter("SoloPeso", soloPeso), New ObjectParameter("SoloPeso", GetType(Boolean)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spNotas_Update", idParameter, notaParameter, obligatorioParameter, ordenParameter, soloDolarParameter, soloPesoParameter, userupdParameter, res)
    End Function

    Public Overridable Function spNotasCredito_Delete(id As Nullable(Of Long), idFacturacion As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim idFacturacionParameter As ObjectParameter = If(idFacturacion.HasValue, New ObjectParameter("IdFacturacion", idFacturacion), New ObjectParameter("IdFacturacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spNotasCredito_Delete", idParameter, idFacturacionParameter, res)
    End Function

    Public Overridable Function spNotasCredito_Insert(fecha As Nullable(Of Date), idCliente As Nullable(Of Long), idIngreso As Nullable(Of Long), monto As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spNotasCredito_Insert", fechaParameter, idClienteParameter, idIngresoParameter, montoParameter, res)
    End Function

    Public Overridable Function spNotasCredito_Select_ALL() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spNotasCredito_Select_ALL")
    End Function

    Public Overridable Function spNotasCredito_Update(id As Nullable(Of Long), idCliente As Nullable(Of Long), idFacturacion As Nullable(Of Long), monto As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim idFacturacionParameter As ObjectParameter = If(idFacturacion.HasValue, New ObjectParameter("IdFacturacion", idFacturacion), New ObjectParameter("IdFacturacion", GetType(Long)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spNotasCredito_Update", idParameter, idClienteParameter, idFacturacionParameter, montoParameter, res)
    End Function

    Public Overridable Function spNotasDebito_Insert(fecha As Nullable(Of Date), idCliente As Nullable(Of Long), idIngreso As Nullable(Of Long), monto As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spNotasDebito_Insert", fechaParameter, idClienteParameter, idIngresoParameter, montoParameter, res)
    End Function

    Public Overridable Function spNuevaLiquidacionConceptos_Select(agrupado As Nullable(Of Boolean), idpresentacion As Nullable(Of Long)) As ObjectResult(Of spNuevaLiquidacionConceptos_Select_Result)
        Dim agrupadoParameter As ObjectParameter = If(agrupado.HasValue, New ObjectParameter("agrupado", agrupado), New ObjectParameter("agrupado", GetType(Boolean)))

        Dim idpresentacionParameter As ObjectParameter = If(idpresentacion.HasValue, New ObjectParameter("idpresentacion", idpresentacion), New ObjectParameter("idpresentacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spNuevaLiquidacionConceptos_Select_Result)("spNuevaLiquidacionConceptos_Select", agrupadoParameter, idpresentacionParameter)
    End Function

    Public Overridable Function spNuevaLiquidacionDetalle_Select(agrupado As Nullable(Of Boolean), idpresentacion As Nullable(Of Long)) As ObjectResult(Of spNuevaLiquidacionDetalle_Select_Result)
        Dim agrupadoParameter As ObjectParameter = If(agrupado.HasValue, New ObjectParameter("agrupado", agrupado), New ObjectParameter("agrupado", GetType(Boolean)))

        Dim idpresentacionParameter As ObjectParameter = If(idpresentacion.HasValue, New ObjectParameter("idpresentacion", idpresentacion), New ObjectParameter("idpresentacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spNuevaLiquidacionDetalle_Select_Result)("spNuevaLiquidacionDetalle_Select", agrupadoParameter, idpresentacionParameter)
    End Function

    Public Overridable Function spObrasSociales_Delete(id As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spObrasSociales_Delete", idParameter, res)
    End Function

    Public Overridable Function spObrasSociales_Insert(id As ObjectParameter, codigo As ObjectParameter, codFACAF As String, nombre As String, descripcion As String, domicilio As String, localidad As Nullable(Of Long), telefono As String, email As String, cuit As Nullable(Of Long), bonificacion As Nullable(Of Decimal), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codFACAFParameter As ObjectParameter = If(codFACAF IsNot Nothing, New ObjectParameter("codFACAF", codFACAF), New ObjectParameter("codFACAF", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("descripcion", descripcion), New ObjectParameter("descripcion", GetType(String)))

        Dim domicilioParameter As ObjectParameter = If(domicilio IsNot Nothing, New ObjectParameter("domicilio", domicilio), New ObjectParameter("domicilio", GetType(String)))

        Dim localidadParameter As ObjectParameter = If(localidad.HasValue, New ObjectParameter("localidad", localidad), New ObjectParameter("localidad", GetType(Long)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("telefono", telefono), New ObjectParameter("telefono", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("email", email), New ObjectParameter("email", GetType(String)))

        Dim cuitParameter As ObjectParameter = If(cuit.HasValue, New ObjectParameter("cuit", cuit), New ObjectParameter("cuit", GetType(Long)))

        Dim bonificacionParameter As ObjectParameter = If(bonificacion.HasValue, New ObjectParameter("Bonificacion", bonificacion), New ObjectParameter("Bonificacion", GetType(Decimal)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spObrasSociales_Insert", id, codigo, codFACAFParameter, nombreParameter, descripcionParameter, domicilioParameter, localidadParameter, telefonoParameter, emailParameter, cuitParameter, bonificacionParameter, useraddParameter, res)
    End Function

    Public Overridable Function spObrasSociales_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spObrasSociales_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spObrasSociales_Select_All_Result)("spObrasSociales_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spObrasSociales_Select_All_By_IDMandataria(iDMandataria As Nullable(Of Long)) As ObjectResult(Of spObrasSociales_Select_All_By_IDMandataria_Result)
        Dim iDMandatariaParameter As ObjectParameter = If(iDMandataria.HasValue, New ObjectParameter("IDMandataria", iDMandataria), New ObjectParameter("IDMandataria", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spObrasSociales_Select_All_By_IDMandataria_Result)("spObrasSociales_Select_All_By_IDMandataria", iDMandatariaParameter)
    End Function

    Public Overridable Function spObrasSociales_Update(id As Nullable(Of Long), nombre As String, codFACAF As String, telefono As String, email As String, cuit As Nullable(Of Long), descripcion As String, domicilio As String, localidad As Nullable(Of Long), bonificacion As Nullable(Of Decimal), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim codFACAFParameter As ObjectParameter = If(codFACAF IsNot Nothing, New ObjectParameter("codFACAF", codFACAF), New ObjectParameter("codFACAF", GetType(String)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("telefono", telefono), New ObjectParameter("telefono", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("email", email), New ObjectParameter("email", GetType(String)))

        Dim cuitParameter As ObjectParameter = If(cuit.HasValue, New ObjectParameter("cuit", cuit), New ObjectParameter("cuit", GetType(Long)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("descripcion", descripcion), New ObjectParameter("descripcion", GetType(String)))

        Dim domicilioParameter As ObjectParameter = If(domicilio IsNot Nothing, New ObjectParameter("domicilio", domicilio), New ObjectParameter("domicilio", GetType(String)))

        Dim localidadParameter As ObjectParameter = If(localidad.HasValue, New ObjectParameter("localidad", localidad), New ObjectParameter("localidad", GetType(Long)))

        Dim bonificacionParameter As ObjectParameter = If(bonificacion.HasValue, New ObjectParameter("bonificacion", bonificacion), New ObjectParameter("bonificacion", GetType(Decimal)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spObrasSociales_Update", idParameter, nombreParameter, codFACAFParameter, telefonoParameter, emailParameter, cuitParameter, descripcionParameter, domicilioParameter, localidadParameter, bonificacionParameter, userupdParameter, res)
    End Function

    Public Overridable Function spObtenerDatosDelUserId(id As Nullable(Of Long), codigo As ObjectParameter, nombre As ObjectParameter, pass As ObjectParameter, res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spObtenerDatosDelUserId", idParameter, codigo, nombre, pass, res)
    End Function

    Public Overridable Function spObtenerTipoMoneda(peso As ObjectParameter, dolar As ObjectParameter, euro As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spObtenerTipoMoneda", peso, dolar, euro)
    End Function

    Public Overridable Function spOrdenDeCompra_Delete_All(idordendecompra As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idordendecompraParameter As ObjectParameter = If(idordendecompra.HasValue, New ObjectParameter("idordendecompra", idordendecompra), New ObjectParameter("idordendecompra", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeCompra_Delete_All", idordendecompraParameter, userdelParameter, res)
    End Function

    Public Overridable Function spOrdenDeCompra_Delete_Finalizar(idordendecompra As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idordendecompraParameter As ObjectParameter = If(idordendecompra.HasValue, New ObjectParameter("idordendecompra", idordendecompra), New ObjectParameter("idordendecompra", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeCompra_Delete_Finalizar", idordendecompraParameter, userdelParameter, res)
    End Function

    Public Overridable Function spOrdenDeCompra_Det_Delete_Item(idoc As Nullable(Of Long), item As Nullable(Of Long), subtotal As Nullable(Of Decimal), montoIVATotal As Nullable(Of Decimal), total As Nullable(Of Decimal), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idocParameter As ObjectParameter = If(idoc.HasValue, New ObjectParameter("idoc", idoc), New ObjectParameter("idoc", GetType(Long)))

        Dim itemParameter As ObjectParameter = If(item.HasValue, New ObjectParameter("item", item), New ObjectParameter("item", GetType(Long)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim montoIVATotalParameter As ObjectParameter = If(montoIVATotal.HasValue, New ObjectParameter("MontoIVATotal", montoIVATotal), New ObjectParameter("MontoIVATotal", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeCompra_Det_Delete_Item", idocParameter, itemParameter, subtotalParameter, montoIVATotalParameter, totalParameter, userdelParameter, res)
    End Function

    Public Overridable Function spOrdenDeCompra_Det_Insert(id As ObjectParameter, idordendecompra As Nullable(Of Long), idmaterial As String, idmaterial_Prov As Nullable(Of Long), precio As Nullable(Of Decimal), preciolista As Nullable(Of Decimal), iva As Nullable(Of Decimal), peso As Nullable(Of Decimal), bonif1 As Nullable(Of Decimal), bonif2 As Nullable(Of Decimal), bonif3 As Nullable(Of Decimal), bonif4 As Nullable(Of Decimal), bonif5 As Nullable(Of Decimal), preciofinal As Nullable(Of Decimal), qty As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), idunidad As String, idproveedor As String, ordenItem As Nullable(Of Short), nota_Det As String, nuevo As Nullable(Of Boolean), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idordendecompraParameter As ObjectParameter = If(idordendecompra.HasValue, New ObjectParameter("idordendecompra", idordendecompra), New ObjectParameter("idordendecompra", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial IsNot Nothing, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(String)))

        Dim idmaterial_ProvParameter As ObjectParameter = If(idmaterial_Prov.HasValue, New ObjectParameter("idmaterial_Prov", idmaterial_Prov), New ObjectParameter("idmaterial_Prov", GetType(Long)))

        Dim precioParameter As ObjectParameter = If(precio.HasValue, New ObjectParameter("precio", precio), New ObjectParameter("precio", GetType(Decimal)))

        Dim preciolistaParameter As ObjectParameter = If(preciolista.HasValue, New ObjectParameter("preciolista", preciolista), New ObjectParameter("preciolista", GetType(Decimal)))

        Dim ivaParameter As ObjectParameter = If(iva.HasValue, New ObjectParameter("Iva", iva), New ObjectParameter("Iva", GetType(Decimal)))

        Dim pesoParameter As ObjectParameter = If(peso.HasValue, New ObjectParameter("peso", peso), New ObjectParameter("peso", GetType(Decimal)))

        Dim bonif1Parameter As ObjectParameter = If(bonif1.HasValue, New ObjectParameter("bonif1", bonif1), New ObjectParameter("bonif1", GetType(Decimal)))

        Dim bonif2Parameter As ObjectParameter = If(bonif2.HasValue, New ObjectParameter("bonif2", bonif2), New ObjectParameter("bonif2", GetType(Decimal)))

        Dim bonif3Parameter As ObjectParameter = If(bonif3.HasValue, New ObjectParameter("bonif3", bonif3), New ObjectParameter("bonif3", GetType(Decimal)))

        Dim bonif4Parameter As ObjectParameter = If(bonif4.HasValue, New ObjectParameter("bonif4", bonif4), New ObjectParameter("bonif4", GetType(Decimal)))

        Dim bonif5Parameter As ObjectParameter = If(bonif5.HasValue, New ObjectParameter("bonif5", bonif5), New ObjectParameter("bonif5", GetType(Decimal)))

        Dim preciofinalParameter As ObjectParameter = If(preciofinal.HasValue, New ObjectParameter("preciofinal", preciofinal), New ObjectParameter("preciofinal", GetType(Decimal)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("subtotal", subtotal), New ObjectParameter("subtotal", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad IsNot Nothing, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(String)))

        Dim idproveedorParameter As ObjectParameter = If(idproveedor IsNot Nothing, New ObjectParameter("idproveedor", idproveedor), New ObjectParameter("idproveedor", GetType(String)))

        Dim ordenItemParameter As ObjectParameter = If(ordenItem.HasValue, New ObjectParameter("OrdenItem", ordenItem), New ObjectParameter("OrdenItem", GetType(Short)))

        Dim nota_DetParameter As ObjectParameter = If(nota_Det IsNot Nothing, New ObjectParameter("Nota_Det", nota_Det), New ObjectParameter("Nota_Det", GetType(String)))

        Dim nuevoParameter As ObjectParameter = If(nuevo.HasValue, New ObjectParameter("Nuevo", nuevo), New ObjectParameter("Nuevo", GetType(Boolean)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeCompra_Det_Insert", id, idordendecompraParameter, idmaterialParameter, idmaterial_ProvParameter, precioParameter, preciolistaParameter, ivaParameter, pesoParameter, bonif1Parameter, bonif2Parameter, bonif3Parameter, bonif4Parameter, bonif5Parameter, preciofinalParameter, qtyParameter, subtotalParameter, idunidadParameter, idproveedorParameter, ordenItemParameter, nota_DetParameter, nuevoParameter, useraddParameter, res)
    End Function

    Public Overridable Function spOrdenDeCompra_Det_Select_By_IDOrdenDeCompra(iDOrdenDeCompra As Nullable(Of Long), anulado As Nullable(Of Boolean)) As ObjectResult(Of spOrdenDeCompra_Det_Select_By_IDOrdenDeCompra_Result)
        Dim iDOrdenDeCompraParameter As ObjectParameter = If(iDOrdenDeCompra.HasValue, New ObjectParameter("IDOrdenDeCompra", iDOrdenDeCompra), New ObjectParameter("IDOrdenDeCompra", GetType(Long)))

        Dim anuladoParameter As ObjectParameter = If(anulado.HasValue, New ObjectParameter("Anulado", anulado), New ObjectParameter("Anulado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spOrdenDeCompra_Det_Select_By_IDOrdenDeCompra_Result)("spOrdenDeCompra_Det_Select_By_IDOrdenDeCompra", iDOrdenDeCompraParameter, anuladoParameter)
    End Function

    Public Overridable Function spOrdenDeCompra_Det_Select_By_IDPresupuesto(iDPresupuesto As Nullable(Of Long)) As Integer
        Dim iDPresupuestoParameter As ObjectParameter = If(iDPresupuesto.HasValue, New ObjectParameter("IDPresupuesto", iDPresupuesto), New ObjectParameter("IDPresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeCompra_Det_Select_By_IDPresupuesto", iDPresupuestoParameter)
    End Function

    Public Overridable Function spOrdenDeCompra_Det_Update(id As ObjectParameter, idordendecompra As Nullable(Of Long), idmaterial As String, idmaterial_Prov As Nullable(Of Long), precio As Nullable(Of Decimal), preciolista As Nullable(Of Decimal), iva As Nullable(Of Decimal), peso As Nullable(Of Decimal), bonif1 As Nullable(Of Decimal), bonif2 As Nullable(Of Decimal), bonif3 As Nullable(Of Decimal), bonif4 As Nullable(Of Decimal), bonif5 As Nullable(Of Decimal), preciofinal As Nullable(Of Decimal), qty As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), idunidad As String, idproveedor As String, orden As Nullable(Of Short), nota_Det As String, nuevo As Nullable(Of Boolean), mensaje As ObjectParameter, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idordendecompraParameter As ObjectParameter = If(idordendecompra.HasValue, New ObjectParameter("idordendecompra", idordendecompra), New ObjectParameter("idordendecompra", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial IsNot Nothing, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(String)))

        Dim idmaterial_ProvParameter As ObjectParameter = If(idmaterial_Prov.HasValue, New ObjectParameter("idmaterial_Prov", idmaterial_Prov), New ObjectParameter("idmaterial_Prov", GetType(Long)))

        Dim precioParameter As ObjectParameter = If(precio.HasValue, New ObjectParameter("precio", precio), New ObjectParameter("precio", GetType(Decimal)))

        Dim preciolistaParameter As ObjectParameter = If(preciolista.HasValue, New ObjectParameter("preciolista", preciolista), New ObjectParameter("preciolista", GetType(Decimal)))

        Dim ivaParameter As ObjectParameter = If(iva.HasValue, New ObjectParameter("Iva", iva), New ObjectParameter("Iva", GetType(Decimal)))

        Dim pesoParameter As ObjectParameter = If(peso.HasValue, New ObjectParameter("peso", peso), New ObjectParameter("peso", GetType(Decimal)))

        Dim bonif1Parameter As ObjectParameter = If(bonif1.HasValue, New ObjectParameter("bonif1", bonif1), New ObjectParameter("bonif1", GetType(Decimal)))

        Dim bonif2Parameter As ObjectParameter = If(bonif2.HasValue, New ObjectParameter("bonif2", bonif2), New ObjectParameter("bonif2", GetType(Decimal)))

        Dim bonif3Parameter As ObjectParameter = If(bonif3.HasValue, New ObjectParameter("bonif3", bonif3), New ObjectParameter("bonif3", GetType(Decimal)))

        Dim bonif4Parameter As ObjectParameter = If(bonif4.HasValue, New ObjectParameter("bonif4", bonif4), New ObjectParameter("bonif4", GetType(Decimal)))

        Dim bonif5Parameter As ObjectParameter = If(bonif5.HasValue, New ObjectParameter("bonif5", bonif5), New ObjectParameter("bonif5", GetType(Decimal)))

        Dim preciofinalParameter As ObjectParameter = If(preciofinal.HasValue, New ObjectParameter("preciofinal", preciofinal), New ObjectParameter("preciofinal", GetType(Decimal)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("subtotal", subtotal), New ObjectParameter("subtotal", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad IsNot Nothing, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(String)))

        Dim idproveedorParameter As ObjectParameter = If(idproveedor IsNot Nothing, New ObjectParameter("idproveedor", idproveedor), New ObjectParameter("idproveedor", GetType(String)))

        Dim ordenParameter As ObjectParameter = If(orden.HasValue, New ObjectParameter("Orden", orden), New ObjectParameter("Orden", GetType(Short)))

        Dim nota_DetParameter As ObjectParameter = If(nota_Det IsNot Nothing, New ObjectParameter("Nota_Det", nota_Det), New ObjectParameter("Nota_Det", GetType(String)))

        Dim nuevoParameter As ObjectParameter = If(nuevo.HasValue, New ObjectParameter("Nuevo", nuevo), New ObjectParameter("Nuevo", GetType(Boolean)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeCompra_Det_Update", id, idordendecompraParameter, idmaterialParameter, idmaterial_ProvParameter, precioParameter, preciolistaParameter, ivaParameter, pesoParameter, bonif1Parameter, bonif2Parameter, bonif3Parameter, bonif4Parameter, bonif5Parameter, preciofinalParameter, qtyParameter, subtotalParameter, idunidadParameter, idproveedorParameter, ordenParameter, nota_DetParameter, nuevoParameter, mensaje, userupdParameter, res)
    End Function

    Public Overridable Function spOrdenDeCompra_Det_Update_SinCodificar(id As Nullable(Of Long), idOrdendeCompra As Nullable(Of Long), idUnidad As Nullable(Of Long), idMoneda As Nullable(Of Long), idmaterial As Nullable(Of Long), idmaterial_prov As Nullable(Of Long), idproveedor As Nullable(Of Long), qty As Nullable(Of Decimal), precio As Nullable(Of Decimal), preciolista As Nullable(Of Decimal), bonif1 As Nullable(Of Decimal), bonif2 As Nullable(Of Decimal), bonif3 As Nullable(Of Decimal), bonif4 As Nullable(Of Decimal), bonif5 As Nullable(Of Decimal), preciofinal As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), nota_Det As String, orden As Nullable(Of Short), mensaje As ObjectParameter, nuevo As Nullable(Of Boolean), ocultar As Nullable(Of Boolean), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim idOrdendeCompraParameter As ObjectParameter = If(idOrdendeCompra.HasValue, New ObjectParameter("idOrdendeCompra", idOrdendeCompra), New ObjectParameter("idOrdendeCompra", GetType(Long)))

        Dim idUnidadParameter As ObjectParameter = If(idUnidad.HasValue, New ObjectParameter("IdUnidad", idUnidad), New ObjectParameter("IdUnidad", GetType(Long)))

        Dim idMonedaParameter As ObjectParameter = If(idMoneda.HasValue, New ObjectParameter("IdMoneda", idMoneda), New ObjectParameter("IdMoneda", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim idmaterial_provParameter As ObjectParameter = If(idmaterial_prov.HasValue, New ObjectParameter("idmaterial_prov", idmaterial_prov), New ObjectParameter("idmaterial_prov", GetType(Long)))

        Dim idproveedorParameter As ObjectParameter = If(idproveedor.HasValue, New ObjectParameter("idproveedor", idproveedor), New ObjectParameter("idproveedor", GetType(Long)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim precioParameter As ObjectParameter = If(precio.HasValue, New ObjectParameter("Precio", precio), New ObjectParameter("Precio", GetType(Decimal)))

        Dim preciolistaParameter As ObjectParameter = If(preciolista.HasValue, New ObjectParameter("preciolista", preciolista), New ObjectParameter("preciolista", GetType(Decimal)))

        Dim bonif1Parameter As ObjectParameter = If(bonif1.HasValue, New ObjectParameter("bonif1", bonif1), New ObjectParameter("bonif1", GetType(Decimal)))

        Dim bonif2Parameter As ObjectParameter = If(bonif2.HasValue, New ObjectParameter("bonif2", bonif2), New ObjectParameter("bonif2", GetType(Decimal)))

        Dim bonif3Parameter As ObjectParameter = If(bonif3.HasValue, New ObjectParameter("bonif3", bonif3), New ObjectParameter("bonif3", GetType(Decimal)))

        Dim bonif4Parameter As ObjectParameter = If(bonif4.HasValue, New ObjectParameter("bonif4", bonif4), New ObjectParameter("bonif4", GetType(Decimal)))

        Dim bonif5Parameter As ObjectParameter = If(bonif5.HasValue, New ObjectParameter("bonif5", bonif5), New ObjectParameter("bonif5", GetType(Decimal)))

        Dim preciofinalParameter As ObjectParameter = If(preciofinal.HasValue, New ObjectParameter("preciofinal", preciofinal), New ObjectParameter("preciofinal", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim nota_DetParameter As ObjectParameter = If(nota_Det IsNot Nothing, New ObjectParameter("Nota_Det", nota_Det), New ObjectParameter("Nota_Det", GetType(String)))

        Dim ordenParameter As ObjectParameter = If(orden.HasValue, New ObjectParameter("Orden", orden), New ObjectParameter("Orden", GetType(Short)))

        Dim nuevoParameter As ObjectParameter = If(nuevo.HasValue, New ObjectParameter("Nuevo", nuevo), New ObjectParameter("Nuevo", GetType(Boolean)))

        Dim ocultarParameter As ObjectParameter = If(ocultar.HasValue, New ObjectParameter("Ocultar", ocultar), New ObjectParameter("Ocultar", GetType(Boolean)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeCompra_Det_Update_SinCodificar", idParameter, idOrdendeCompraParameter, idUnidadParameter, idMonedaParameter, idmaterialParameter, idmaterial_provParameter, idproveedorParameter, qtyParameter, precioParameter, preciolistaParameter, bonif1Parameter, bonif2Parameter, bonif3Parameter, bonif4Parameter, bonif5Parameter, preciofinalParameter, subtotalParameter, nota_DetParameter, ordenParameter, mensaje, nuevoParameter, ocultarParameter, userupdParameter, res)
    End Function

    Public Overridable Function spOrdenDeCompra_Excel(idOC As Nullable(Of Long)) As ObjectResult(Of spOrdenDeCompra_Excel_Result)
        Dim idOCParameter As ObjectParameter = If(idOC.HasValue, New ObjectParameter("IdOC", idOC), New ObjectParameter("IdOC", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spOrdenDeCompra_Excel_Result)("spOrdenDeCompra_Excel", idOCParameter)
    End Function

    Public Overridable Function spOrdenDeCompra_Insert(id As ObjectParameter, codigo As ObjectParameter, fecha As Nullable(Of Date), idproveedor As String, idcondicionpago As Nullable(Of Long), subtotal As Nullable(Of Decimal), montoIVATotal As Nullable(Of Decimal), total As Nullable(Of Decimal), contactoProveedor As String, idComprador As String, nota As String, notainterna As String, useradd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim idproveedorParameter As ObjectParameter = If(idproveedor IsNot Nothing, New ObjectParameter("idproveedor", idproveedor), New ObjectParameter("idproveedor", GetType(String)))

        Dim idcondicionpagoParameter As ObjectParameter = If(idcondicionpago.HasValue, New ObjectParameter("idcondicionpago", idcondicionpago), New ObjectParameter("idcondicionpago", GetType(Long)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim montoIVATotalParameter As ObjectParameter = If(montoIVATotal.HasValue, New ObjectParameter("MontoIVATotal", montoIVATotal), New ObjectParameter("MontoIVATotal", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim contactoProveedorParameter As ObjectParameter = If(contactoProveedor IsNot Nothing, New ObjectParameter("ContactoProveedor", contactoProveedor), New ObjectParameter("ContactoProveedor", GetType(String)))

        Dim idCompradorParameter As ObjectParameter = If(idComprador IsNot Nothing, New ObjectParameter("IdComprador", idComprador), New ObjectParameter("IdComprador", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim notainternaParameter As ObjectParameter = If(notainterna IsNot Nothing, New ObjectParameter("notainterna", notainterna), New ObjectParameter("notainterna", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeCompra_Insert", id, codigo, fechaParameter, idproveedorParameter, idcondicionpagoParameter, subtotalParameter, montoIVATotalParameter, totalParameter, contactoProveedorParameter, idCompradorParameter, notaParameter, notainternaParameter, useraddParameter, res)
    End Function

    Public Overridable Function spOrdendeCompra_Materiales_Insert(id As ObjectParameter, idoc As Nullable(Of Long), idmarca As Nullable(Of Long), cod_Mat_Prov As String, idfamilia As Nullable(Of Long), idsubrubro As Nullable(Of Long), idunidad As Nullable(Of Long), idmoneda As Nullable(Of Long), codigo As String, nombre As String, preciolista As Nullable(Of Decimal), bonif1 As Nullable(Of Decimal), bonif2 As Nullable(Of Decimal), bonif3 As Nullable(Of Decimal), bonif4 As Nullable(Of Decimal), bonif5 As Nullable(Of Decimal), preciofinal As Nullable(Of Decimal), ganancia As Nullable(Of Decimal), minimo As Nullable(Of Decimal), maximo As Nullable(Of Decimal), stockInicial As Nullable(Of Decimal), nivel1 As String, nivel2 As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idocParameter As ObjectParameter = If(idoc.HasValue, New ObjectParameter("idoc", idoc), New ObjectParameter("idoc", GetType(Long)))

        Dim idmarcaParameter As ObjectParameter = If(idmarca.HasValue, New ObjectParameter("idmarca", idmarca), New ObjectParameter("idmarca", GetType(Long)))

        Dim cod_Mat_ProvParameter As ObjectParameter = If(cod_Mat_Prov IsNot Nothing, New ObjectParameter("Cod_Mat_Prov", cod_Mat_Prov), New ObjectParameter("Cod_Mat_Prov", GetType(String)))

        Dim idfamiliaParameter As ObjectParameter = If(idfamilia.HasValue, New ObjectParameter("idfamilia", idfamilia), New ObjectParameter("idfamilia", GetType(Long)))

        Dim idsubrubroParameter As ObjectParameter = If(idsubrubro.HasValue, New ObjectParameter("idsubrubro", idsubrubro), New ObjectParameter("idsubrubro", GetType(Long)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim idmonedaParameter As ObjectParameter = If(idmoneda.HasValue, New ObjectParameter("idmoneda", idmoneda), New ObjectParameter("idmoneda", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim preciolistaParameter As ObjectParameter = If(preciolista.HasValue, New ObjectParameter("preciolista", preciolista), New ObjectParameter("preciolista", GetType(Decimal)))

        Dim bonif1Parameter As ObjectParameter = If(bonif1.HasValue, New ObjectParameter("bonif1", bonif1), New ObjectParameter("bonif1", GetType(Decimal)))

        Dim bonif2Parameter As ObjectParameter = If(bonif2.HasValue, New ObjectParameter("bonif2", bonif2), New ObjectParameter("bonif2", GetType(Decimal)))

        Dim bonif3Parameter As ObjectParameter = If(bonif3.HasValue, New ObjectParameter("bonif3", bonif3), New ObjectParameter("bonif3", GetType(Decimal)))

        Dim bonif4Parameter As ObjectParameter = If(bonif4.HasValue, New ObjectParameter("bonif4", bonif4), New ObjectParameter("bonif4", GetType(Decimal)))

        Dim bonif5Parameter As ObjectParameter = If(bonif5.HasValue, New ObjectParameter("bonif5", bonif5), New ObjectParameter("bonif5", GetType(Decimal)))

        Dim preciofinalParameter As ObjectParameter = If(preciofinal.HasValue, New ObjectParameter("preciofinal", preciofinal), New ObjectParameter("preciofinal", GetType(Decimal)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("ganancia", ganancia), New ObjectParameter("ganancia", GetType(Decimal)))

        Dim minimoParameter As ObjectParameter = If(minimo.HasValue, New ObjectParameter("minimo", minimo), New ObjectParameter("minimo", GetType(Decimal)))

        Dim maximoParameter As ObjectParameter = If(maximo.HasValue, New ObjectParameter("maximo", maximo), New ObjectParameter("maximo", GetType(Decimal)))

        Dim stockInicialParameter As ObjectParameter = If(stockInicial.HasValue, New ObjectParameter("StockInicial", stockInicial), New ObjectParameter("StockInicial", GetType(Decimal)))

        Dim nivel1Parameter As ObjectParameter = If(nivel1 IsNot Nothing, New ObjectParameter("nivel1", nivel1), New ObjectParameter("nivel1", GetType(String)))

        Dim nivel2Parameter As ObjectParameter = If(nivel2 IsNot Nothing, New ObjectParameter("nivel2", nivel2), New ObjectParameter("nivel2", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdendeCompra_Materiales_Insert", id, idocParameter, idmarcaParameter, cod_Mat_ProvParameter, idfamiliaParameter, idsubrubroParameter, idunidadParameter, idmonedaParameter, codigoParameter, nombreParameter, preciolistaParameter, bonif1Parameter, bonif2Parameter, bonif3Parameter, bonif4Parameter, bonif5Parameter, preciofinalParameter, gananciaParameter, minimoParameter, maximoParameter, stockInicialParameter, nivel1Parameter, nivel2Parameter, useraddParameter, res)
    End Function

    Public Overridable Function spOrdenDeCompra_Select_All(eliminado As Nullable(Of Boolean), pendientes As Nullable(Of Boolean), pendientesyCumplidas As Nullable(Of Boolean)) As ObjectResult(Of spOrdenDeCompra_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Dim pendientesParameter As ObjectParameter = If(pendientes.HasValue, New ObjectParameter("Pendientes", pendientes), New ObjectParameter("Pendientes", GetType(Boolean)))

        Dim pendientesyCumplidasParameter As ObjectParameter = If(pendientesyCumplidas.HasValue, New ObjectParameter("PendientesyCumplidas", pendientesyCumplidas), New ObjectParameter("PendientesyCumplidas", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spOrdenDeCompra_Select_All_Result)("spOrdenDeCompra_Select_All", eliminadoParameter, pendientesParameter, pendientesyCumplidasParameter)
    End Function

    Public Overridable Function spOrdenDeCompra_Update(id As ObjectParameter, codigo As ObjectParameter, fecha As Nullable(Of Date), idproveedor As String, idcondicionpago As Nullable(Of Long), subtotal As Nullable(Of Decimal), montoIVATotal As Nullable(Of Decimal), total As Nullable(Of Decimal), contactoProveedor As String, idComprador As String, nota As String, notainterna As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim idproveedorParameter As ObjectParameter = If(idproveedor IsNot Nothing, New ObjectParameter("idproveedor", idproveedor), New ObjectParameter("idproveedor", GetType(String)))

        Dim idcondicionpagoParameter As ObjectParameter = If(idcondicionpago.HasValue, New ObjectParameter("idcondicionpago", idcondicionpago), New ObjectParameter("idcondicionpago", GetType(Long)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim montoIVATotalParameter As ObjectParameter = If(montoIVATotal.HasValue, New ObjectParameter("MontoIVATotal", montoIVATotal), New ObjectParameter("MontoIVATotal", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim contactoProveedorParameter As ObjectParameter = If(contactoProveedor IsNot Nothing, New ObjectParameter("ContactoProveedor", contactoProveedor), New ObjectParameter("ContactoProveedor", GetType(String)))

        Dim idCompradorParameter As ObjectParameter = If(idComprador IsNot Nothing, New ObjectParameter("IdComprador", idComprador), New ObjectParameter("IdComprador", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim notainternaParameter As ObjectParameter = If(notainterna IsNot Nothing, New ObjectParameter("notainterna", notainterna), New ObjectParameter("notainterna", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeCompra_Update", id, codigo, fechaParameter, idproveedorParameter, idcondicionpagoParameter, subtotalParameter, montoIVATotalParameter, totalParameter, contactoProveedorParameter, idCompradorParameter, notaParameter, notainternaParameter, userupdParameter, res)
    End Function

    Public Overridable Function spOrdenDeTrabajo_Empleados_Delete(idOT As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idOTParameter As ObjectParameter = If(idOT.HasValue, New ObjectParameter("IdOT", idOT), New ObjectParameter("IdOT", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeTrabajo_Empleados_Delete", idOTParameter, res)
    End Function

    Public Overridable Function spOrdenDeTrabajo_Empleados_Insert(idOT As Nullable(Of Long), idEmpleado As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idOTParameter As ObjectParameter = If(idOT.HasValue, New ObjectParameter("IdOT", idOT), New ObjectParameter("IdOT", GetType(Long)))

        Dim idEmpleadoParameter As ObjectParameter = If(idEmpleado.HasValue, New ObjectParameter("IdEmpleado", idEmpleado), New ObjectParameter("IdEmpleado", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeTrabajo_Empleados_Insert", idOTParameter, idEmpleadoParameter, res)
    End Function

    Public Overridable Function spOrdenDeTrabajo_Empleados_Select_ALL(idOT As Nullable(Of Long)) As ObjectResult(Of spOrdenDeTrabajo_Empleados_Select_ALL_Result)
        Dim idOTParameter As ObjectParameter = If(idOT.HasValue, New ObjectParameter("idOT", idOT), New ObjectParameter("idOT", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spOrdenDeTrabajo_Empleados_Select_ALL_Result)("spOrdenDeTrabajo_Empleados_Select_ALL", idOTParameter)
    End Function

    Public Overridable Function spOrdenDeTrabajo_Insert(id As ObjectParameter, codigo As Nullable(Of Integer), presupuesto As Nullable(Of Boolean), idPresupuesto As Nullable(Of Long), idCliente As Nullable(Of Long), tituloOT As String, descripcion As String, fechainicio As Nullable(Of Date), tiempoestimado As Nullable(Of Integer), nroOC As String, useradd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo.HasValue, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(Integer)))

        Dim presupuestoParameter As ObjectParameter = If(presupuesto.HasValue, New ObjectParameter("Presupuesto", presupuesto), New ObjectParameter("Presupuesto", GetType(Boolean)))

        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("idPresupuesto", idPresupuesto), New ObjectParameter("idPresupuesto", GetType(Long)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim tituloOTParameter As ObjectParameter = If(tituloOT IsNot Nothing, New ObjectParameter("TituloOT", tituloOT), New ObjectParameter("TituloOT", GetType(String)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Dim fechainicioParameter As ObjectParameter = If(fechainicio.HasValue, New ObjectParameter("fechainicio", fechainicio), New ObjectParameter("fechainicio", GetType(Date)))

        Dim tiempoestimadoParameter As ObjectParameter = If(tiempoestimado.HasValue, New ObjectParameter("tiempoestimado", tiempoestimado), New ObjectParameter("tiempoestimado", GetType(Integer)))

        Dim nroOCParameter As ObjectParameter = If(nroOC IsNot Nothing, New ObjectParameter("NroOC", nroOC), New ObjectParameter("NroOC", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeTrabajo_Insert", id, codigoParameter, presupuestoParameter, idPresupuestoParameter, idClienteParameter, tituloOTParameter, descripcionParameter, fechainicioParameter, tiempoestimadoParameter, nroOCParameter, useraddParameter, res)
    End Function

    Public Overridable Function spOrdenDeTrabajo_Materiales_Insert(id As ObjectParameter, idOT As Nullable(Of Long), idpresupuesto As Nullable(Of Long), idpres_det As Nullable(Of Long), nroOT As Nullable(Of Integer), idmaterial As Nullable(Of Long), qty As Nullable(Of Decimal), qtyOT As Nullable(Of Decimal), preciovta As Nullable(Of Decimal), idunidad As Nullable(Of Long), idcliente As Nullable(Of Long), useradd As Nullable(Of Long), res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim idOTParameter As ObjectParameter = If(idOT.HasValue, New ObjectParameter("idOT", idOT), New ObjectParameter("idOT", GetType(Long)))

        Dim idpresupuestoParameter As ObjectParameter = If(idpresupuesto.HasValue, New ObjectParameter("idpresupuesto", idpresupuesto), New ObjectParameter("idpresupuesto", GetType(Long)))

        Dim idpres_detParameter As ObjectParameter = If(idpres_det.HasValue, New ObjectParameter("idpres_det", idpres_det), New ObjectParameter("idpres_det", GetType(Long)))

        Dim nroOTParameter As ObjectParameter = If(nroOT.HasValue, New ObjectParameter("NroOT", nroOT), New ObjectParameter("NroOT", GetType(Integer)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim qtyOTParameter As ObjectParameter = If(qtyOT.HasValue, New ObjectParameter("qtyOT", qtyOT), New ObjectParameter("qtyOT", GetType(Decimal)))

        Dim preciovtaParameter As ObjectParameter = If(preciovta.HasValue, New ObjectParameter("preciovta", preciovta), New ObjectParameter("preciovta", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim idclienteParameter As ObjectParameter = If(idcliente.HasValue, New ObjectParameter("idcliente", idcliente), New ObjectParameter("idcliente", GetType(Long)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeTrabajo_Materiales_Insert", id, idOTParameter, idpresupuestoParameter, idpres_detParameter, nroOTParameter, idmaterialParameter, qtyParameter, qtyOTParameter, preciovtaParameter, idunidadParameter, idclienteParameter, useraddParameter, res, mensaje)
    End Function

    Public Overridable Function spOrdenDeTrabajo_Materiales_Select_ALL(idPresupuesto As Nullable(Of Long), idCliente As Nullable(Of Long), idOT As Nullable(Of Long)) As Integer
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim idOTParameter As ObjectParameter = If(idOT.HasValue, New ObjectParameter("IdOT", idOT), New ObjectParameter("IdOT", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeTrabajo_Materiales_Select_ALL", idPresupuestoParameter, idClienteParameter, idOTParameter)
    End Function

    Public Overridable Function spOrdenDeTrabajo_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spOrdenDeTrabajo_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spOrdenDeTrabajo_Select_All_Result)("spOrdenDeTrabajo_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spOrdenDeTrabajo_Update(id As ObjectParameter, presupuesto As Nullable(Of Boolean), idPresupuesto As Nullable(Of Long), tituloOT As String, descripcion As String, fechainicio As Nullable(Of Date), tiempoestimado As Nullable(Of Integer), nroOC As String, userupd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim presupuestoParameter As ObjectParameter = If(presupuesto.HasValue, New ObjectParameter("Presupuesto", presupuesto), New ObjectParameter("Presupuesto", GetType(Boolean)))

        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("idPresupuesto", idPresupuesto), New ObjectParameter("idPresupuesto", GetType(Long)))

        Dim tituloOTParameter As ObjectParameter = If(tituloOT IsNot Nothing, New ObjectParameter("TituloOT", tituloOT), New ObjectParameter("TituloOT", GetType(String)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Dim fechainicioParameter As ObjectParameter = If(fechainicio.HasValue, New ObjectParameter("fechainicio", fechainicio), New ObjectParameter("fechainicio", GetType(Date)))

        Dim tiempoestimadoParameter As ObjectParameter = If(tiempoestimado.HasValue, New ObjectParameter("tiempoestimado", tiempoestimado), New ObjectParameter("tiempoestimado", GetType(Integer)))

        Dim nroOCParameter As ObjectParameter = If(nroOC IsNot Nothing, New ObjectParameter("NroOC", nroOC), New ObjectParameter("NroOC", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spOrdenDeTrabajo_Update", id, presupuestoParameter, idPresupuestoParameter, tituloOTParameter, descripcionParameter, fechainicioParameter, tiempoestimadoParameter, nroOCParameter, userupdParameter, res)
    End Function

    Public Overridable Function spPagos_Cheques_EliminarItems(idPago As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Cheques_EliminarItems", idPagoParameter, res)
    End Function

    Public Overridable Function spPagos_Cheques_Insert(idCheque As Nullable(Of Long), idPago As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idChequeParameter As ObjectParameter = If(idCheque.HasValue, New ObjectParameter("IdCheque", idCheque), New ObjectParameter("IdCheque", GetType(Long)))

        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Cheques_Insert", idChequeParameter, idPagoParameter, res)
    End Function

    Public Overridable Function spPagos_Cheques_Propios_EliminarItems(idPago As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Cheques_Propios_EliminarItems", idPagoParameter, res)
    End Function

    Public Overridable Function spPagos_Cheques_Propios_Insert(idCheque As Nullable(Of Long), idPago As Nullable(Of Long), monto As Nullable(Of Decimal), venc As Nullable(Of Date), res As ObjectParameter) As Integer
        Dim idChequeParameter As ObjectParameter = If(idCheque.HasValue, New ObjectParameter("IdCheque", idCheque), New ObjectParameter("IdCheque", GetType(Long)))

        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Dim vencParameter As ObjectParameter = If(venc.HasValue, New ObjectParameter("Venc", venc), New ObjectParameter("Venc", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Cheques_Propios_Insert", idChequeParameter, idPagoParameter, montoParameter, vencParameter, res)
    End Function

    Public Overridable Function spPagos_Cheques_Propios_Select_All(idPago As Nullable(Of Long), modo As Nullable(Of Boolean)) As ObjectResult(Of spPagos_Cheques_Propios_Select_All_Result)
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim modoParameter As ObjectParameter = If(modo.HasValue, New ObjectParameter("Modo", modo), New ObjectParameter("Modo", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPagos_Cheques_Propios_Select_All_Result)("spPagos_Cheques_Propios_Select_All", idPagoParameter, modoParameter)
    End Function

    Public Overridable Function spPagos_Cheques_Propios_TMP(idPago As Nullable(Of Long), idCheque As Nullable(Of Long)) As Integer
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim idChequeParameter As ObjectParameter = If(idCheque.HasValue, New ObjectParameter("IdCheque", idCheque), New ObjectParameter("IdCheque", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Cheques_Propios_TMP", idPagoParameter, idChequeParameter)
    End Function

    Public Overridable Function spPagos_Cheques_Select_All(idPago As Nullable(Of Long), modo As Nullable(Of Boolean)) As ObjectResult(Of spPagos_Cheques_Select_All_Result)
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim modoParameter As ObjectParameter = If(modo.HasValue, New ObjectParameter("Modo", modo), New ObjectParameter("Modo", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPagos_Cheques_Select_All_Result)("spPagos_Cheques_Select_All", idPagoParameter, modoParameter)
    End Function

    Public Overridable Function spPagos_Cheques_TMP(idPago As Nullable(Of Long), idCheque As Nullable(Of Long)) As Integer
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim idChequeParameter As ObjectParameter = If(idCheque.HasValue, New ObjectParameter("IdCheque", idCheque), New ObjectParameter("IdCheque", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Cheques_TMP", idPagoParameter, idChequeParameter)
    End Function

    Public Overridable Function spPagos_Delete(id As Nullable(Of Long), userDel As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim userDelParameter As ObjectParameter = If(userDel.HasValue, New ObjectParameter("UserDel", userDel), New ObjectParameter("UserDel", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Delete", idParameter, userDelParameter, res)
    End Function

    Public Overridable Function spPagos_Delete_OLD(idPago As Nullable(Of Long), idGasto As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim idGastoParameter As ObjectParameter = If(idGasto.HasValue, New ObjectParameter("IdGasto", idGasto), New ObjectParameter("IdGasto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Delete_OLD", idPagoParameter, idGastoParameter, res)
    End Function

    Public Overridable Function spPagos_Gastos(idProveedor As Nullable(Of Long), modo As Nullable(Of Boolean), idPago As Nullable(Of Long)) As ObjectResult(Of spPagos_Gastos_Result)
        Dim idProveedorParameter As ObjectParameter = If(idProveedor.HasValue, New ObjectParameter("IdProveedor", idProveedor), New ObjectParameter("IdProveedor", GetType(Long)))

        Dim modoParameter As ObjectParameter = If(modo.HasValue, New ObjectParameter("Modo", modo), New ObjectParameter("Modo", GetType(Boolean)))

        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPagos_Gastos_Result)("spPagos_Gastos", idProveedorParameter, modoParameter, idPagoParameter)
    End Function

    Public Overridable Function spPagos_Gastos_Insert(idPago As Nullable(Of Long), idGasto As Nullable(Of Long), cancelarTodo As Nullable(Of Boolean), deuda As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim idGastoParameter As ObjectParameter = If(idGasto.HasValue, New ObjectParameter("IdGasto", idGasto), New ObjectParameter("IdGasto", GetType(Long)))

        Dim cancelarTodoParameter As ObjectParameter = If(cancelarTodo.HasValue, New ObjectParameter("CancelarTodo", cancelarTodo), New ObjectParameter("CancelarTodo", GetType(Boolean)))

        Dim deudaParameter As ObjectParameter = If(deuda.HasValue, New ObjectParameter("Deuda", deuda), New ObjectParameter("Deuda", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Gastos_Insert", idPagoParameter, idGastoParameter, cancelarTodoParameter, deudaParameter, res)
    End Function

    Public Overridable Function spPagos_Impuestos_EliminarItems(idPago As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Impuestos_EliminarItems", idPagoParameter, res)
    End Function

    Public Overridable Function spPagos_Impuestos_Insert(idPago As Nullable(Of Long), idImpuesto As Nullable(Of Long), nroDocumento As String, monto As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim idImpuestoParameter As ObjectParameter = If(idImpuesto.HasValue, New ObjectParameter("IdImpuesto", idImpuesto), New ObjectParameter("IdImpuesto", GetType(Long)))

        Dim nroDocumentoParameter As ObjectParameter = If(nroDocumento IsNot Nothing, New ObjectParameter("NroDocumento", nroDocumento), New ObjectParameter("NroDocumento", GetType(String)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Impuestos_Insert", idPagoParameter, idImpuestoParameter, nroDocumentoParameter, montoParameter, res)
    End Function

    Public Overridable Function spPagos_Impuestos_Select_All(idPago As Nullable(Of Long), idImpuesto As ObjectParameter, nroDocumento As ObjectParameter, monto As ObjectParameter, observaciones As ObjectParameter) As Integer
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Impuestos_Select_All", idPagoParameter, idImpuesto, nroDocumento, monto, observaciones)
    End Function

    Public Overridable Function spPagos_Impuestos_TMP(id As Nullable(Of Long), idPago As Nullable(Of Long), idImpuesto As Nullable(Of Long)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim idImpuestoParameter As ObjectParameter = If(idImpuesto.HasValue, New ObjectParameter("IdImpuesto", idImpuesto), New ObjectParameter("IdImpuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Impuestos_TMP", idParameter, idPagoParameter, idImpuestoParameter)
    End Function

    Public Overridable Function spPagos_Impuestos_Update(id As Nullable(Of Long), idPago As Nullable(Of Long), idImpuesto As Nullable(Of Long), nroDocumento As String, monto As Nullable(Of Decimal), mensaje As ObjectParameter, res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim idImpuestoParameter As ObjectParameter = If(idImpuesto.HasValue, New ObjectParameter("IdImpuesto", idImpuesto), New ObjectParameter("IdImpuesto", GetType(Long)))

        Dim nroDocumentoParameter As ObjectParameter = If(nroDocumento IsNot Nothing, New ObjectParameter("NroDocumento", nroDocumento), New ObjectParameter("NroDocumento", GetType(String)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Impuestos_Update", idParameter, idPagoParameter, idImpuestoParameter, nroDocumentoParameter, montoParameter, mensaje, res)
    End Function

    Public Overridable Function spPagos_Insert(id As ObjectParameter, codigo As ObjectParameter, fechaPago As Nullable(Of Date), idProveedor As Nullable(Of Long), contado As Nullable(Of Boolean), montoContado As Nullable(Of Decimal), tarjeta As Nullable(Of Boolean), montoTarjeta As Nullable(Of Decimal), cheque As Nullable(Of Boolean), montoCheque As Nullable(Of Decimal), montoChequePropio As Nullable(Of Decimal), transferencia As Nullable(Of Boolean), montoTransf As Nullable(Of Decimal), impuestos As Nullable(Of Boolean), montoImpuesto As Nullable(Of Decimal), montoIva As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), total As Nullable(Of Decimal), redondeo As Nullable(Of Decimal), nota As String, userAdd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim fechaPagoParameter As ObjectParameter = If(fechaPago.HasValue, New ObjectParameter("FechaPago", fechaPago), New ObjectParameter("FechaPago", GetType(Date)))

        Dim idProveedorParameter As ObjectParameter = If(idProveedor.HasValue, New ObjectParameter("IdProveedor", idProveedor), New ObjectParameter("IdProveedor", GetType(Long)))

        Dim contadoParameter As ObjectParameter = If(contado.HasValue, New ObjectParameter("Contado", contado), New ObjectParameter("Contado", GetType(Boolean)))

        Dim montoContadoParameter As ObjectParameter = If(montoContado.HasValue, New ObjectParameter("MontoContado", montoContado), New ObjectParameter("MontoContado", GetType(Decimal)))

        Dim tarjetaParameter As ObjectParameter = If(tarjeta.HasValue, New ObjectParameter("Tarjeta", tarjeta), New ObjectParameter("Tarjeta", GetType(Boolean)))

        Dim montoTarjetaParameter As ObjectParameter = If(montoTarjeta.HasValue, New ObjectParameter("MontoTarjeta", montoTarjeta), New ObjectParameter("MontoTarjeta", GetType(Decimal)))

        Dim chequeParameter As ObjectParameter = If(cheque.HasValue, New ObjectParameter("Cheque", cheque), New ObjectParameter("Cheque", GetType(Boolean)))

        Dim montoChequeParameter As ObjectParameter = If(montoCheque.HasValue, New ObjectParameter("MontoCheque", montoCheque), New ObjectParameter("MontoCheque", GetType(Decimal)))

        Dim montoChequePropioParameter As ObjectParameter = If(montoChequePropio.HasValue, New ObjectParameter("MontoChequePropio", montoChequePropio), New ObjectParameter("MontoChequePropio", GetType(Decimal)))

        Dim transferenciaParameter As ObjectParameter = If(transferencia.HasValue, New ObjectParameter("Transferencia", transferencia), New ObjectParameter("Transferencia", GetType(Boolean)))

        Dim montoTransfParameter As ObjectParameter = If(montoTransf.HasValue, New ObjectParameter("MontoTransf", montoTransf), New ObjectParameter("MontoTransf", GetType(Decimal)))

        Dim impuestosParameter As ObjectParameter = If(impuestos.HasValue, New ObjectParameter("Impuestos", impuestos), New ObjectParameter("Impuestos", GetType(Boolean)))

        Dim montoImpuestoParameter As ObjectParameter = If(montoImpuesto.HasValue, New ObjectParameter("MontoImpuesto", montoImpuesto), New ObjectParameter("MontoImpuesto", GetType(Decimal)))

        Dim montoIvaParameter As ObjectParameter = If(montoIva.HasValue, New ObjectParameter("MontoIva", montoIva), New ObjectParameter("MontoIva", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim redondeoParameter As ObjectParameter = If(redondeo.HasValue, New ObjectParameter("Redondeo", redondeo), New ObjectParameter("Redondeo", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim userAddParameter As ObjectParameter = If(userAdd.HasValue, New ObjectParameter("UserAdd", userAdd), New ObjectParameter("UserAdd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Insert", id, codigo, fechaPagoParameter, idProveedorParameter, contadoParameter, montoContadoParameter, tarjetaParameter, montoTarjetaParameter, chequeParameter, montoChequeParameter, montoChequePropioParameter, transferenciaParameter, montoTransfParameter, impuestosParameter, montoImpuestoParameter, montoIvaParameter, subtotalParameter, totalParameter, redondeoParameter, notaParameter, userAddParameter, res)
    End Function

    Public Overridable Function spPagos_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spPagos_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPagos_Select_All_Result)("spPagos_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spPagos_Transferencias_EliminarItems(idPago As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Transferencias_EliminarItems", idPagoParameter, res)
    End Function

    Public Overridable Function spPagos_Transferencias_Insert(idPago As Nullable(Of Long), cuentaorigen As String, cuentaDestino As String, bancoOrigen As String, bancoDestino As String, fechaTransf As Nullable(Of Date), idMoneda As Nullable(Of Long), nroOP As String, monto As Nullable(Of Decimal), observaciones As String, res As ObjectParameter) As Integer
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim cuentaorigenParameter As ObjectParameter = If(cuentaorigen IsNot Nothing, New ObjectParameter("Cuentaorigen", cuentaorigen), New ObjectParameter("Cuentaorigen", GetType(String)))

        Dim cuentaDestinoParameter As ObjectParameter = If(cuentaDestino IsNot Nothing, New ObjectParameter("CuentaDestino", cuentaDestino), New ObjectParameter("CuentaDestino", GetType(String)))

        Dim bancoOrigenParameter As ObjectParameter = If(bancoOrigen IsNot Nothing, New ObjectParameter("BancoOrigen", bancoOrigen), New ObjectParameter("BancoOrigen", GetType(String)))

        Dim bancoDestinoParameter As ObjectParameter = If(bancoDestino IsNot Nothing, New ObjectParameter("BancoDestino", bancoDestino), New ObjectParameter("BancoDestino", GetType(String)))

        Dim fechaTransfParameter As ObjectParameter = If(fechaTransf.HasValue, New ObjectParameter("FechaTransf", fechaTransf), New ObjectParameter("FechaTransf", GetType(Date)))

        Dim idMonedaParameter As ObjectParameter = If(idMoneda.HasValue, New ObjectParameter("IdMoneda", idMoneda), New ObjectParameter("IdMoneda", GetType(Long)))

        Dim nroOPParameter As ObjectParameter = If(nroOP IsNot Nothing, New ObjectParameter("NroOP", nroOP), New ObjectParameter("NroOP", GetType(String)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("Observaciones", observaciones), New ObjectParameter("Observaciones", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Transferencias_Insert", idPagoParameter, cuentaorigenParameter, cuentaDestinoParameter, bancoOrigenParameter, bancoDestinoParameter, fechaTransfParameter, idMonedaParameter, nroOPParameter, montoParameter, observacionesParameter, res)
    End Function

    Public Overridable Function spPagos_Transferencias_TMP(idPago As Nullable(Of Long), idTransferencia As Nullable(Of Long)) As Integer
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim idTransferenciaParameter As ObjectParameter = If(idTransferencia.HasValue, New ObjectParameter("IdTransferencia", idTransferencia), New ObjectParameter("IdTransferencia", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Transferencias_TMP", idPagoParameter, idTransferenciaParameter)
    End Function

    Public Overridable Function spPagos_Transferencias_Update(iD As Nullable(Of Long), idPago As Nullable(Of Long), cuentaorigen As String, cuentaDestino As String, bancoOrigen As String, bancoDestino As String, fechaTransf As Nullable(Of Date), idMoneda As Nullable(Of Long), nroOP As String, monto As Nullable(Of Decimal), observaciones As String, mensaje As ObjectParameter, res As ObjectParameter) As Integer
        Dim iDParameter As ObjectParameter = If(iD.HasValue, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(Long)))

        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("IdPago", idPago), New ObjectParameter("IdPago", GetType(Long)))

        Dim cuentaorigenParameter As ObjectParameter = If(cuentaorigen IsNot Nothing, New ObjectParameter("Cuentaorigen", cuentaorigen), New ObjectParameter("Cuentaorigen", GetType(String)))

        Dim cuentaDestinoParameter As ObjectParameter = If(cuentaDestino IsNot Nothing, New ObjectParameter("CuentaDestino", cuentaDestino), New ObjectParameter("CuentaDestino", GetType(String)))

        Dim bancoOrigenParameter As ObjectParameter = If(bancoOrigen IsNot Nothing, New ObjectParameter("BancoOrigen", bancoOrigen), New ObjectParameter("BancoOrigen", GetType(String)))

        Dim bancoDestinoParameter As ObjectParameter = If(bancoDestino IsNot Nothing, New ObjectParameter("BancoDestino", bancoDestino), New ObjectParameter("BancoDestino", GetType(String)))

        Dim fechaTransfParameter As ObjectParameter = If(fechaTransf.HasValue, New ObjectParameter("FechaTransf", fechaTransf), New ObjectParameter("FechaTransf", GetType(Date)))

        Dim idMonedaParameter As ObjectParameter = If(idMoneda.HasValue, New ObjectParameter("IdMoneda", idMoneda), New ObjectParameter("IdMoneda", GetType(Long)))

        Dim nroOPParameter As ObjectParameter = If(nroOP IsNot Nothing, New ObjectParameter("NroOP", nroOP), New ObjectParameter("NroOP", GetType(String)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("Observaciones", observaciones), New ObjectParameter("Observaciones", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Transferencias_Update", iDParameter, idPagoParameter, cuentaorigenParameter, cuentaDestinoParameter, bancoOrigenParameter, bancoDestinoParameter, fechaTransfParameter, idMonedaParameter, nroOPParameter, montoParameter, observacionesParameter, mensaje, res)
    End Function

    Public Overridable Function spPagos_Update(id As ObjectParameter, codigo As ObjectParameter, fechaPago As Nullable(Of Date), idProveedor As Nullable(Of Long), contado As Nullable(Of Boolean), montoContado As Nullable(Of Decimal), tarjeta As Nullable(Of Boolean), montoTarjeta As Nullable(Of Decimal), cheque As Nullable(Of Boolean), montoCheque As Nullable(Of Decimal), montoChequePropio As Nullable(Of Decimal), transferencia As Nullable(Of Boolean), montoTransf As Nullable(Of Decimal), impuestos As Nullable(Of Boolean), montoImpuesto As Nullable(Of Decimal), montoIva As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), total As Nullable(Of Decimal), redondeo As Nullable(Of Decimal), nota As String, userUpd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim fechaPagoParameter As ObjectParameter = If(fechaPago.HasValue, New ObjectParameter("FechaPago", fechaPago), New ObjectParameter("FechaPago", GetType(Date)))

        Dim idProveedorParameter As ObjectParameter = If(idProveedor.HasValue, New ObjectParameter("IdProveedor", idProveedor), New ObjectParameter("IdProveedor", GetType(Long)))

        Dim contadoParameter As ObjectParameter = If(contado.HasValue, New ObjectParameter("Contado", contado), New ObjectParameter("Contado", GetType(Boolean)))

        Dim montoContadoParameter As ObjectParameter = If(montoContado.HasValue, New ObjectParameter("MontoContado", montoContado), New ObjectParameter("MontoContado", GetType(Decimal)))

        Dim tarjetaParameter As ObjectParameter = If(tarjeta.HasValue, New ObjectParameter("Tarjeta", tarjeta), New ObjectParameter("Tarjeta", GetType(Boolean)))

        Dim montoTarjetaParameter As ObjectParameter = If(montoTarjeta.HasValue, New ObjectParameter("MontoTarjeta", montoTarjeta), New ObjectParameter("MontoTarjeta", GetType(Decimal)))

        Dim chequeParameter As ObjectParameter = If(cheque.HasValue, New ObjectParameter("Cheque", cheque), New ObjectParameter("Cheque", GetType(Boolean)))

        Dim montoChequeParameter As ObjectParameter = If(montoCheque.HasValue, New ObjectParameter("MontoCheque", montoCheque), New ObjectParameter("MontoCheque", GetType(Decimal)))

        Dim montoChequePropioParameter As ObjectParameter = If(montoChequePropio.HasValue, New ObjectParameter("MontoChequePropio", montoChequePropio), New ObjectParameter("MontoChequePropio", GetType(Decimal)))

        Dim transferenciaParameter As ObjectParameter = If(transferencia.HasValue, New ObjectParameter("Transferencia", transferencia), New ObjectParameter("Transferencia", GetType(Boolean)))

        Dim montoTransfParameter As ObjectParameter = If(montoTransf.HasValue, New ObjectParameter("MontoTransf", montoTransf), New ObjectParameter("MontoTransf", GetType(Decimal)))

        Dim impuestosParameter As ObjectParameter = If(impuestos.HasValue, New ObjectParameter("Impuestos", impuestos), New ObjectParameter("Impuestos", GetType(Boolean)))

        Dim montoImpuestoParameter As ObjectParameter = If(montoImpuesto.HasValue, New ObjectParameter("MontoImpuesto", montoImpuesto), New ObjectParameter("MontoImpuesto", GetType(Decimal)))

        Dim montoIvaParameter As ObjectParameter = If(montoIva.HasValue, New ObjectParameter("MontoIva", montoIva), New ObjectParameter("MontoIva", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim redondeoParameter As ObjectParameter = If(redondeo.HasValue, New ObjectParameter("Redondeo", redondeo), New ObjectParameter("Redondeo", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim userUpdParameter As ObjectParameter = If(userUpd.HasValue, New ObjectParameter("UserUpd", userUpd), New ObjectParameter("UserUpd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPagos_Update", id, codigo, fechaPagoParameter, idProveedorParameter, contadoParameter, montoContadoParameter, tarjetaParameter, montoTarjetaParameter, chequeParameter, montoChequeParameter, montoChequePropioParameter, transferenciaParameter, montoTransfParameter, impuestosParameter, montoImpuestoParameter, montoIvaParameter, subtotalParameter, totalParameter, redondeoParameter, notaParameter, userUpdParameter, res)
    End Function

    Public Overridable Function spPedidosWEB_Delete(ordenPedido As String, nota As String, iDAutoriza As String, userDel As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim ordenPedidoParameter As ObjectParameter = If(ordenPedido IsNot Nothing, New ObjectParameter("OrdenPedido", ordenPedido), New ObjectParameter("OrdenPedido", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim iDAutorizaParameter As ObjectParameter = If(iDAutoriza IsNot Nothing, New ObjectParameter("IDAutoriza", iDAutoriza), New ObjectParameter("IDAutoriza", GetType(String)))

        Dim userDelParameter As ObjectParameter = If(userDel.HasValue, New ObjectParameter("UserDel", userDel), New ObjectParameter("UserDel", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPedidosWEB_Delete", ordenPedidoParameter, notaParameter, iDAutorizaParameter, userDelParameter, res)
    End Function

    Public Overridable Function spPedidosWEB_Delete_Det(id As ObjectParameter, iDALMACEN As Nullable(Of Double), iDPEDIDOSWEB As String, iDMATERIAL As String, iDUNIDAD As String, qTYENVIADA As Nullable(Of Decimal), nOTA_DET As String, userdel As Nullable(Of Long), rEINTEGRAR_STOCK As Nullable(Of Boolean), dEVOLUCION As Nullable(Of Boolean), pRESUPUESTO As Nullable(Of Boolean), idStockMov As ObjectParameter, comprob As ObjectParameter, stock As ObjectParameter, res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim iDALMACENParameter As ObjectParameter = If(iDALMACEN.HasValue, New ObjectParameter("IDALMACEN", iDALMACEN), New ObjectParameter("IDALMACEN", GetType(Double)))

        Dim iDPEDIDOSWEBParameter As ObjectParameter = If(iDPEDIDOSWEB IsNot Nothing, New ObjectParameter("IDPEDIDOSWEB", iDPEDIDOSWEB), New ObjectParameter("IDPEDIDOSWEB", GetType(String)))

        Dim iDMATERIALParameter As ObjectParameter = If(iDMATERIAL IsNot Nothing, New ObjectParameter("IDMATERIAL", iDMATERIAL), New ObjectParameter("IDMATERIAL", GetType(String)))

        Dim iDUNIDADParameter As ObjectParameter = If(iDUNIDAD IsNot Nothing, New ObjectParameter("IDUNIDAD", iDUNIDAD), New ObjectParameter("IDUNIDAD", GetType(String)))

        Dim qTYENVIADAParameter As ObjectParameter = If(qTYENVIADA.HasValue, New ObjectParameter("QTYENVIADA", qTYENVIADA), New ObjectParameter("QTYENVIADA", GetType(Decimal)))

        Dim nOTA_DETParameter As ObjectParameter = If(nOTA_DET IsNot Nothing, New ObjectParameter("NOTA_DET", nOTA_DET), New ObjectParameter("NOTA_DET", GetType(String)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Long)))

        Dim rEINTEGRAR_STOCKParameter As ObjectParameter = If(rEINTEGRAR_STOCK.HasValue, New ObjectParameter("REINTEGRAR_STOCK", rEINTEGRAR_STOCK), New ObjectParameter("REINTEGRAR_STOCK", GetType(Boolean)))

        Dim dEVOLUCIONParameter As ObjectParameter = If(dEVOLUCION.HasValue, New ObjectParameter("DEVOLUCION", dEVOLUCION), New ObjectParameter("DEVOLUCION", GetType(Boolean)))

        Dim pRESUPUESTOParameter As ObjectParameter = If(pRESUPUESTO.HasValue, New ObjectParameter("PRESUPUESTO", pRESUPUESTO), New ObjectParameter("PRESUPUESTO", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPedidosWEB_Delete_Det", id, iDALMACENParameter, iDPEDIDOSWEBParameter, iDMATERIALParameter, iDUNIDADParameter, qTYENVIADAParameter, nOTA_DETParameter, userdelParameter, rEINTEGRAR_STOCKParameter, dEVOLUCIONParameter, pRESUPUESTOParameter, idStockMov, comprob, stock, res, mensaje)
    End Function

    Public Overridable Function spPedidosWEB_Delete_Finalizar(ordenPedido As String, nota As String, userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim ordenPedidoParameter As ObjectParameter = If(ordenPedido IsNot Nothing, New ObjectParameter("OrdenPedido", ordenPedido), New ObjectParameter("OrdenPedido", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPedidosWEB_Delete_Finalizar", ordenPedidoParameter, notaParameter, userdelParameter, res)
    End Function

    Public Overridable Function spPedidosWEB_Det_GetDetalle_Devolucion(idPedidosWEB As String, ventas_Norte As Nullable(Of Boolean)) As ObjectResult(Of spPedidosWEB_Det_GetDetalle_Devolucion_Result)
        Dim idPedidosWEBParameter As ObjectParameter = If(idPedidosWEB IsNot Nothing, New ObjectParameter("IdPedidosWEB", idPedidosWEB), New ObjectParameter("IdPedidosWEB", GetType(String)))

        Dim ventas_NorteParameter As ObjectParameter = If(ventas_Norte.HasValue, New ObjectParameter("Ventas_Norte", ventas_Norte), New ObjectParameter("Ventas_Norte", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPedidosWEB_Det_GetDetalle_Devolucion_Result)("spPedidosWEB_Det_GetDetalle_Devolucion", idPedidosWEBParameter, ventas_NorteParameter)
    End Function

    Public Overridable Function spPedidosWEB_Det_Insert(id As ObjectParameter, iDALMACEN As Nullable(Of Double), iDPEDIDOSWEB As String, iDMATERIAL As String, iDMARCA As String, iDUNIDAD As String, pRECIO As Nullable(Of Decimal), qTYSALDO As Nullable(Of Decimal), qTYENVIADA As Nullable(Of Decimal), sUBTOTAL As Nullable(Of Decimal), iVA As Nullable(Of Decimal), oRDENITEM As Nullable(Of Short), nOTA_DET As String, uNIDADFAC As Nullable(Of Decimal), uSERADD As Nullable(Of Long), fECHACUMPLIDO As Nullable(Of Date), dESCUENTO As Nullable(Of Decimal), rEINTEGRAR_STOCK As Nullable(Of Boolean), bONIFICACION As Nullable(Of Boolean), pROMO As Nullable(Of Boolean), dEVOLUCION As Nullable(Of Boolean), pRESUPUESTO As Nullable(Of Boolean), fINPRESU As Nullable(Of Boolean), pROCESADO As Nullable(Of Boolean), oRDENPROCESADO As String, idStockMov As ObjectParameter, comprob As ObjectParameter, stock As ObjectParameter, res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim iDALMACENParameter As ObjectParameter = If(iDALMACEN.HasValue, New ObjectParameter("IDALMACEN", iDALMACEN), New ObjectParameter("IDALMACEN", GetType(Double)))

        Dim iDPEDIDOSWEBParameter As ObjectParameter = If(iDPEDIDOSWEB IsNot Nothing, New ObjectParameter("IDPEDIDOSWEB", iDPEDIDOSWEB), New ObjectParameter("IDPEDIDOSWEB", GetType(String)))

        Dim iDMATERIALParameter As ObjectParameter = If(iDMATERIAL IsNot Nothing, New ObjectParameter("IDMATERIAL", iDMATERIAL), New ObjectParameter("IDMATERIAL", GetType(String)))

        Dim iDMARCAParameter As ObjectParameter = If(iDMARCA IsNot Nothing, New ObjectParameter("IDMARCA", iDMARCA), New ObjectParameter("IDMARCA", GetType(String)))

        Dim iDUNIDADParameter As ObjectParameter = If(iDUNIDAD IsNot Nothing, New ObjectParameter("IDUNIDAD", iDUNIDAD), New ObjectParameter("IDUNIDAD", GetType(String)))

        Dim pRECIOParameter As ObjectParameter = If(pRECIO.HasValue, New ObjectParameter("PRECIO", pRECIO), New ObjectParameter("PRECIO", GetType(Decimal)))

        Dim qTYSALDOParameter As ObjectParameter = If(qTYSALDO.HasValue, New ObjectParameter("QTYSALDO", qTYSALDO), New ObjectParameter("QTYSALDO", GetType(Decimal)))

        Dim qTYENVIADAParameter As ObjectParameter = If(qTYENVIADA.HasValue, New ObjectParameter("QTYENVIADA", qTYENVIADA), New ObjectParameter("QTYENVIADA", GetType(Decimal)))

        Dim sUBTOTALParameter As ObjectParameter = If(sUBTOTAL.HasValue, New ObjectParameter("SUBTOTAL", sUBTOTAL), New ObjectParameter("SUBTOTAL", GetType(Decimal)))

        Dim iVAParameter As ObjectParameter = If(iVA.HasValue, New ObjectParameter("IVA", iVA), New ObjectParameter("IVA", GetType(Decimal)))

        Dim oRDENITEMParameter As ObjectParameter = If(oRDENITEM.HasValue, New ObjectParameter("ORDENITEM", oRDENITEM), New ObjectParameter("ORDENITEM", GetType(Short)))

        Dim nOTA_DETParameter As ObjectParameter = If(nOTA_DET IsNot Nothing, New ObjectParameter("NOTA_DET", nOTA_DET), New ObjectParameter("NOTA_DET", GetType(String)))

        Dim uNIDADFACParameter As ObjectParameter = If(uNIDADFAC.HasValue, New ObjectParameter("UNIDADFAC", uNIDADFAC), New ObjectParameter("UNIDADFAC", GetType(Decimal)))

        Dim uSERADDParameter As ObjectParameter = If(uSERADD.HasValue, New ObjectParameter("USERADD", uSERADD), New ObjectParameter("USERADD", GetType(Long)))

        Dim fECHACUMPLIDOParameter As ObjectParameter = If(fECHACUMPLIDO.HasValue, New ObjectParameter("FECHACUMPLIDO", fECHACUMPLIDO), New ObjectParameter("FECHACUMPLIDO", GetType(Date)))

        Dim dESCUENTOParameter As ObjectParameter = If(dESCUENTO.HasValue, New ObjectParameter("DESCUENTO", dESCUENTO), New ObjectParameter("DESCUENTO", GetType(Decimal)))

        Dim rEINTEGRAR_STOCKParameter As ObjectParameter = If(rEINTEGRAR_STOCK.HasValue, New ObjectParameter("REINTEGRAR_STOCK", rEINTEGRAR_STOCK), New ObjectParameter("REINTEGRAR_STOCK", GetType(Boolean)))

        Dim bONIFICACIONParameter As ObjectParameter = If(bONIFICACION.HasValue, New ObjectParameter("BONIFICACION", bONIFICACION), New ObjectParameter("BONIFICACION", GetType(Boolean)))

        Dim pROMOParameter As ObjectParameter = If(pROMO.HasValue, New ObjectParameter("PROMO", pROMO), New ObjectParameter("PROMO", GetType(Boolean)))

        Dim dEVOLUCIONParameter As ObjectParameter = If(dEVOLUCION.HasValue, New ObjectParameter("DEVOLUCION", dEVOLUCION), New ObjectParameter("DEVOLUCION", GetType(Boolean)))

        Dim pRESUPUESTOParameter As ObjectParameter = If(pRESUPUESTO.HasValue, New ObjectParameter("PRESUPUESTO", pRESUPUESTO), New ObjectParameter("PRESUPUESTO", GetType(Boolean)))

        Dim fINPRESUParameter As ObjectParameter = If(fINPRESU.HasValue, New ObjectParameter("FINPRESU", fINPRESU), New ObjectParameter("FINPRESU", GetType(Boolean)))

        Dim pROCESADOParameter As ObjectParameter = If(pROCESADO.HasValue, New ObjectParameter("PROCESADO", pROCESADO), New ObjectParameter("PROCESADO", GetType(Boolean)))

        Dim oRDENPROCESADOParameter As ObjectParameter = If(oRDENPROCESADO IsNot Nothing, New ObjectParameter("ORDENPROCESADO", oRDENPROCESADO), New ObjectParameter("ORDENPROCESADO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPedidosWEB_Det_Insert", id, iDALMACENParameter, iDPEDIDOSWEBParameter, iDMATERIALParameter, iDMARCAParameter, iDUNIDADParameter, pRECIOParameter, qTYSALDOParameter, qTYENVIADAParameter, sUBTOTALParameter, iVAParameter, oRDENITEMParameter, nOTA_DETParameter, uNIDADFACParameter, uSERADDParameter, fECHACUMPLIDOParameter, dESCUENTOParameter, rEINTEGRAR_STOCKParameter, bONIFICACIONParameter, pROMOParameter, dEVOLUCIONParameter, pRESUPUESTOParameter, fINPRESUParameter, pROCESADOParameter, oRDENPROCESADOParameter, idStockMov, comprob, stock, res, mensaje)
    End Function

    Public Overridable Function spPedidosWEB_Det_Select_By_IDPedidosWEB(idPedidosWEB As String) As ObjectResult(Of spPedidosWEB_Det_Select_By_IDPedidosWEB_Result)
        Dim idPedidosWEBParameter As ObjectParameter = If(idPedidosWEB IsNot Nothing, New ObjectParameter("IdPedidosWEB", idPedidosWEB), New ObjectParameter("IdPedidosWEB", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPedidosWEB_Det_Select_By_IDPedidosWEB_Result)("spPedidosWEB_Det_Select_By_IDPedidosWEB", idPedidosWEBParameter)
    End Function

    Public Overridable Function spPedidosWEB_Det_Update(id As ObjectParameter, iDALMACEN As Nullable(Of Double), iDPEDIDOSWEB As String, iDMATERIAL As String, iDMARCA As String, iDUNIDAD As String, pRECIO As Nullable(Of Decimal), qTYENVIADA As Nullable(Of Decimal), sUBTOTAL As Nullable(Of Decimal), iVA As Nullable(Of Decimal), nOTA_DET As String, unidadFac As Nullable(Of Decimal), useradd As Nullable(Of Long), idStockMov As ObjectParameter, comprob As ObjectParameter, stock As ObjectParameter, control As Nullable(Of Short), res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim iDALMACENParameter As ObjectParameter = If(iDALMACEN.HasValue, New ObjectParameter("IDALMACEN", iDALMACEN), New ObjectParameter("IDALMACEN", GetType(Double)))

        Dim iDPEDIDOSWEBParameter As ObjectParameter = If(iDPEDIDOSWEB IsNot Nothing, New ObjectParameter("IDPEDIDOSWEB", iDPEDIDOSWEB), New ObjectParameter("IDPEDIDOSWEB", GetType(String)))

        Dim iDMATERIALParameter As ObjectParameter = If(iDMATERIAL IsNot Nothing, New ObjectParameter("IDMATERIAL", iDMATERIAL), New ObjectParameter("IDMATERIAL", GetType(String)))

        Dim iDMARCAParameter As ObjectParameter = If(iDMARCA IsNot Nothing, New ObjectParameter("IDMARCA", iDMARCA), New ObjectParameter("IDMARCA", GetType(String)))

        Dim iDUNIDADParameter As ObjectParameter = If(iDUNIDAD IsNot Nothing, New ObjectParameter("IDUNIDAD", iDUNIDAD), New ObjectParameter("IDUNIDAD", GetType(String)))

        Dim pRECIOParameter As ObjectParameter = If(pRECIO.HasValue, New ObjectParameter("PRECIO", pRECIO), New ObjectParameter("PRECIO", GetType(Decimal)))

        Dim qTYENVIADAParameter As ObjectParameter = If(qTYENVIADA.HasValue, New ObjectParameter("QTYENVIADA", qTYENVIADA), New ObjectParameter("QTYENVIADA", GetType(Decimal)))

        Dim sUBTOTALParameter As ObjectParameter = If(sUBTOTAL.HasValue, New ObjectParameter("SUBTOTAL", sUBTOTAL), New ObjectParameter("SUBTOTAL", GetType(Decimal)))

        Dim iVAParameter As ObjectParameter = If(iVA.HasValue, New ObjectParameter("IVA", iVA), New ObjectParameter("IVA", GetType(Decimal)))

        Dim nOTA_DETParameter As ObjectParameter = If(nOTA_DET IsNot Nothing, New ObjectParameter("NOTA_DET", nOTA_DET), New ObjectParameter("NOTA_DET", GetType(String)))

        Dim unidadFacParameter As ObjectParameter = If(unidadFac.HasValue, New ObjectParameter("UnidadFac", unidadFac), New ObjectParameter("UnidadFac", GetType(Decimal)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Dim controlParameter As ObjectParameter = If(control.HasValue, New ObjectParameter("Control", control), New ObjectParameter("Control", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPedidosWEB_Det_Update", id, iDALMACENParameter, iDPEDIDOSWEBParameter, iDMATERIALParameter, iDMARCAParameter, iDUNIDADParameter, pRECIOParameter, qTYENVIADAParameter, sUBTOTALParameter, iVAParameter, nOTA_DETParameter, unidadFacParameter, useraddParameter, idStockMov, comprob, stock, controlParameter, res, mensaje)
    End Function

    Public Overridable Function spPedidosWEB_Insert(iD As ObjectParameter, oRDENPEDIDO As ObjectParameter, iDALMACEN As Nullable(Of Double), iDCLIENTE As String, fECHA As Nullable(Of Date), fECHAENTREGA As Nullable(Of Date), lUGARENTREGA As String, sUBTOTAL As Nullable(Of Decimal), iVA As Nullable(Of Decimal), tOTAL As Nullable(Of Decimal), nOTA As String, dEUDA As Nullable(Of Decimal), cANCELADO As Nullable(Of Boolean), fECHACANCELADO As Nullable(Of Date), dESCUENTO As Nullable(Of Boolean), pORCENTAJE As Nullable(Of Boolean), vALORDESCUENTO As Nullable(Of Decimal), iDEMPLEADO As String, tRANSFERENCIA As Nullable(Of Boolean), vENTAS_NORTE As Nullable(Of Boolean), dEVOLUCION As Nullable(Of Boolean), pRESUPUESTO As Nullable(Of Boolean), fINPRESU As Nullable(Of Boolean), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim iDALMACENParameter As ObjectParameter = If(iDALMACEN.HasValue, New ObjectParameter("IDALMACEN", iDALMACEN), New ObjectParameter("IDALMACEN", GetType(Double)))

        Dim iDCLIENTEParameter As ObjectParameter = If(iDCLIENTE IsNot Nothing, New ObjectParameter("IDCLIENTE", iDCLIENTE), New ObjectParameter("IDCLIENTE", GetType(String)))

        Dim fECHAParameter As ObjectParameter = If(fECHA.HasValue, New ObjectParameter("FECHA", fECHA), New ObjectParameter("FECHA", GetType(Date)))

        Dim fECHAENTREGAParameter As ObjectParameter = If(fECHAENTREGA.HasValue, New ObjectParameter("FECHAENTREGA", fECHAENTREGA), New ObjectParameter("FECHAENTREGA", GetType(Date)))

        Dim lUGARENTREGAParameter As ObjectParameter = If(lUGARENTREGA IsNot Nothing, New ObjectParameter("LUGARENTREGA", lUGARENTREGA), New ObjectParameter("LUGARENTREGA", GetType(String)))

        Dim sUBTOTALParameter As ObjectParameter = If(sUBTOTAL.HasValue, New ObjectParameter("SUBTOTAL", sUBTOTAL), New ObjectParameter("SUBTOTAL", GetType(Decimal)))

        Dim iVAParameter As ObjectParameter = If(iVA.HasValue, New ObjectParameter("IVA", iVA), New ObjectParameter("IVA", GetType(Decimal)))

        Dim tOTALParameter As ObjectParameter = If(tOTAL.HasValue, New ObjectParameter("TOTAL", tOTAL), New ObjectParameter("TOTAL", GetType(Decimal)))

        Dim nOTAParameter As ObjectParameter = If(nOTA IsNot Nothing, New ObjectParameter("NOTA", nOTA), New ObjectParameter("NOTA", GetType(String)))

        Dim dEUDAParameter As ObjectParameter = If(dEUDA.HasValue, New ObjectParameter("DEUDA", dEUDA), New ObjectParameter("DEUDA", GetType(Decimal)))

        Dim cANCELADOParameter As ObjectParameter = If(cANCELADO.HasValue, New ObjectParameter("CANCELADO", cANCELADO), New ObjectParameter("CANCELADO", GetType(Boolean)))

        Dim fECHACANCELADOParameter As ObjectParameter = If(fECHACANCELADO.HasValue, New ObjectParameter("FECHACANCELADO", fECHACANCELADO), New ObjectParameter("FECHACANCELADO", GetType(Date)))

        Dim dESCUENTOParameter As ObjectParameter = If(dESCUENTO.HasValue, New ObjectParameter("DESCUENTO", dESCUENTO), New ObjectParameter("DESCUENTO", GetType(Boolean)))

        Dim pORCENTAJEParameter As ObjectParameter = If(pORCENTAJE.HasValue, New ObjectParameter("PORCENTAJE", pORCENTAJE), New ObjectParameter("PORCENTAJE", GetType(Boolean)))

        Dim vALORDESCUENTOParameter As ObjectParameter = If(vALORDESCUENTO.HasValue, New ObjectParameter("VALORDESCUENTO", vALORDESCUENTO), New ObjectParameter("VALORDESCUENTO", GetType(Decimal)))

        Dim iDEMPLEADOParameter As ObjectParameter = If(iDEMPLEADO IsNot Nothing, New ObjectParameter("IDEMPLEADO", iDEMPLEADO), New ObjectParameter("IDEMPLEADO", GetType(String)))

        Dim tRANSFERENCIAParameter As ObjectParameter = If(tRANSFERENCIA.HasValue, New ObjectParameter("TRANSFERENCIA", tRANSFERENCIA), New ObjectParameter("TRANSFERENCIA", GetType(Boolean)))

        Dim vENTAS_NORTEParameter As ObjectParameter = If(vENTAS_NORTE.HasValue, New ObjectParameter("VENTAS_NORTE", vENTAS_NORTE), New ObjectParameter("VENTAS_NORTE", GetType(Boolean)))

        Dim dEVOLUCIONParameter As ObjectParameter = If(dEVOLUCION.HasValue, New ObjectParameter("DEVOLUCION", dEVOLUCION), New ObjectParameter("DEVOLUCION", GetType(Boolean)))

        Dim pRESUPUESTOParameter As ObjectParameter = If(pRESUPUESTO.HasValue, New ObjectParameter("PRESUPUESTO", pRESUPUESTO), New ObjectParameter("PRESUPUESTO", GetType(Boolean)))

        Dim fINPRESUParameter As ObjectParameter = If(fINPRESU.HasValue, New ObjectParameter("FINPRESU", fINPRESU), New ObjectParameter("FINPRESU", GetType(Boolean)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPedidosWEB_Insert", iD, oRDENPEDIDO, iDALMACENParameter, iDCLIENTEParameter, fECHAParameter, fECHAENTREGAParameter, lUGARENTREGAParameter, sUBTOTALParameter, iVAParameter, tOTALParameter, nOTAParameter, dEUDAParameter, cANCELADOParameter, fECHACANCELADOParameter, dESCUENTOParameter, pORCENTAJEParameter, vALORDESCUENTOParameter, iDEMPLEADOParameter, tRANSFERENCIAParameter, vENTAS_NORTEParameter, dEVOLUCIONParameter, pRESUPUESTOParameter, fINPRESUParameter, useraddParameter, res)
    End Function

    Public Overridable Function spPedidosWEB_Select_All(eliminado As Nullable(Of Boolean), pendientes As Nullable(Of Boolean), pendientesyCumplidas As Nullable(Of Boolean), ventas_Norte As Nullable(Of Boolean), devolucion As Nullable(Of Boolean)) As ObjectResult(Of spPedidosWEB_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Dim pendientesParameter As ObjectParameter = If(pendientes.HasValue, New ObjectParameter("Pendientes", pendientes), New ObjectParameter("Pendientes", GetType(Boolean)))

        Dim pendientesyCumplidasParameter As ObjectParameter = If(pendientesyCumplidas.HasValue, New ObjectParameter("PendientesyCumplidas", pendientesyCumplidas), New ObjectParameter("PendientesyCumplidas", GetType(Boolean)))

        Dim ventas_NorteParameter As ObjectParameter = If(ventas_Norte.HasValue, New ObjectParameter("Ventas_Norte", ventas_Norte), New ObjectParameter("Ventas_Norte", GetType(Boolean)))

        Dim devolucionParameter As ObjectParameter = If(devolucion.HasValue, New ObjectParameter("Devolucion", devolucion), New ObjectParameter("Devolucion", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPedidosWEB_Select_All_Result)("spPedidosWEB_Select_All", eliminadoParameter, pendientesParameter, pendientesyCumplidasParameter, ventas_NorteParameter, devolucionParameter)
    End Function

    Public Overridable Function spPedidosWEB_Update(iD As ObjectParameter, oRDENPEDIDO As String, iDALMACEN As Nullable(Of Double), iDCLIENTE As String, fECHA As Nullable(Of Date), sUBTOTAL As Nullable(Of Decimal), iVA As Nullable(Of Decimal), tOTAL As Nullable(Of Decimal), nOTA As String, cANCELADO As Nullable(Of Boolean), dEUDA As Nullable(Of Decimal), iDEMPLEADO As String, dESCUENTO As Nullable(Of Boolean), pORCENTAJE As Nullable(Of Boolean), vALORDESCUENTO As Nullable(Of Decimal), userupd As Nullable(Of Long), control As ObjectParameter, res As ObjectParameter) As Integer
        Dim oRDENPEDIDOParameter As ObjectParameter = If(oRDENPEDIDO IsNot Nothing, New ObjectParameter("ORDENPEDIDO", oRDENPEDIDO), New ObjectParameter("ORDENPEDIDO", GetType(String)))

        Dim iDALMACENParameter As ObjectParameter = If(iDALMACEN.HasValue, New ObjectParameter("IDALMACEN", iDALMACEN), New ObjectParameter("IDALMACEN", GetType(Double)))

        Dim iDCLIENTEParameter As ObjectParameter = If(iDCLIENTE IsNot Nothing, New ObjectParameter("IDCLIENTE", iDCLIENTE), New ObjectParameter("IDCLIENTE", GetType(String)))

        Dim fECHAParameter As ObjectParameter = If(fECHA.HasValue, New ObjectParameter("FECHA", fECHA), New ObjectParameter("FECHA", GetType(Date)))

        Dim sUBTOTALParameter As ObjectParameter = If(sUBTOTAL.HasValue, New ObjectParameter("SUBTOTAL", sUBTOTAL), New ObjectParameter("SUBTOTAL", GetType(Decimal)))

        Dim iVAParameter As ObjectParameter = If(iVA.HasValue, New ObjectParameter("IVA", iVA), New ObjectParameter("IVA", GetType(Decimal)))

        Dim tOTALParameter As ObjectParameter = If(tOTAL.HasValue, New ObjectParameter("TOTAL", tOTAL), New ObjectParameter("TOTAL", GetType(Decimal)))

        Dim nOTAParameter As ObjectParameter = If(nOTA IsNot Nothing, New ObjectParameter("NOTA", nOTA), New ObjectParameter("NOTA", GetType(String)))

        Dim cANCELADOParameter As ObjectParameter = If(cANCELADO.HasValue, New ObjectParameter("CANCELADO", cANCELADO), New ObjectParameter("CANCELADO", GetType(Boolean)))

        Dim dEUDAParameter As ObjectParameter = If(dEUDA.HasValue, New ObjectParameter("DEUDA", dEUDA), New ObjectParameter("DEUDA", GetType(Decimal)))

        Dim iDEMPLEADOParameter As ObjectParameter = If(iDEMPLEADO IsNot Nothing, New ObjectParameter("IDEMPLEADO", iDEMPLEADO), New ObjectParameter("IDEMPLEADO", GetType(String)))

        Dim dESCUENTOParameter As ObjectParameter = If(dESCUENTO.HasValue, New ObjectParameter("DESCUENTO", dESCUENTO), New ObjectParameter("DESCUENTO", GetType(Boolean)))

        Dim pORCENTAJEParameter As ObjectParameter = If(pORCENTAJE.HasValue, New ObjectParameter("PORCENTAJE", pORCENTAJE), New ObjectParameter("PORCENTAJE", GetType(Boolean)))

        Dim vALORDESCUENTOParameter As ObjectParameter = If(vALORDESCUENTO.HasValue, New ObjectParameter("VALORDESCUENTO", vALORDESCUENTO), New ObjectParameter("VALORDESCUENTO", GetType(Decimal)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPedidosWEB_Update", iD, oRDENPEDIDOParameter, iDALMACENParameter, iDCLIENTEParameter, fECHAParameter, sUBTOTALParameter, iVAParameter, tOTALParameter, nOTAParameter, cANCELADOParameter, dEUDAParameter, iDEMPLEADOParameter, dESCUENTOParameter, pORCENTAJEParameter, vALORDESCUENTOParameter, userupdParameter, control, res)
    End Function

    Public Overridable Function spPerfiles_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPerfiles_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spPerfiles_Insert(id As ObjectParameter, codigo As String, nombre As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPerfiles_Insert", id, codigoParameter, nombreParameter, useraddParameter, res)
    End Function

    Public Overridable Function spPerfiles_Select_All() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPerfiles_Select_All")
    End Function

    Public Overridable Function spPerfiles_Update(id As Nullable(Of Long), codigo As String, nombre As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPerfiles_Update", idParameter, codigoParameter, nombreParameter, userupdParameter, res)
    End Function

    Public Overridable Function spPerfilesAccesos_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPerfilesAccesos_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spPerfilesAccesos_Insert(id As ObjectParameter, codigo As String, form As String, idperfil As Nullable(Of Boolean), alta As Nullable(Of Boolean), baja As Nullable(Of Boolean), modifica As Nullable(Of Boolean), consulta As Nullable(Of Boolean), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim formParameter As ObjectParameter = If(form IsNot Nothing, New ObjectParameter("form", form), New ObjectParameter("form", GetType(String)))

        Dim idperfilParameter As ObjectParameter = If(idperfil.HasValue, New ObjectParameter("idperfil", idperfil), New ObjectParameter("idperfil", GetType(Boolean)))

        Dim altaParameter As ObjectParameter = If(alta.HasValue, New ObjectParameter("alta", alta), New ObjectParameter("alta", GetType(Boolean)))

        Dim bajaParameter As ObjectParameter = If(baja.HasValue, New ObjectParameter("baja", baja), New ObjectParameter("baja", GetType(Boolean)))

        Dim modificaParameter As ObjectParameter = If(modifica.HasValue, New ObjectParameter("modifica", modifica), New ObjectParameter("modifica", GetType(Boolean)))

        Dim consultaParameter As ObjectParameter = If(consulta.HasValue, New ObjectParameter("consulta", consulta), New ObjectParameter("consulta", GetType(Boolean)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPerfilesAccesos_Insert", id, codigoParameter, formParameter, idperfilParameter, altaParameter, bajaParameter, modificaParameter, consultaParameter, useraddParameter, res)
    End Function

    Public Overridable Function spPerfilesAccesos_Select_All() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPerfilesAccesos_Select_All")
    End Function

    Public Overridable Function spPerfilesAccesos_Update(id As Nullable(Of Long), codigo As String, form As String, idperfil As Nullable(Of Boolean), alta As Nullable(Of Boolean), baja As Nullable(Of Boolean), modifica As Nullable(Of Boolean), consulta As Nullable(Of Boolean), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim formParameter As ObjectParameter = If(form IsNot Nothing, New ObjectParameter("Form", form), New ObjectParameter("Form", GetType(String)))

        Dim idperfilParameter As ObjectParameter = If(idperfil.HasValue, New ObjectParameter("idperfil", idperfil), New ObjectParameter("idperfil", GetType(Boolean)))

        Dim altaParameter As ObjectParameter = If(alta.HasValue, New ObjectParameter("alta", alta), New ObjectParameter("alta", GetType(Boolean)))

        Dim bajaParameter As ObjectParameter = If(baja.HasValue, New ObjectParameter("baja", baja), New ObjectParameter("baja", GetType(Boolean)))

        Dim modificaParameter As ObjectParameter = If(modifica.HasValue, New ObjectParameter("modifica", modifica), New ObjectParameter("modifica", GetType(Boolean)))

        Dim consultaParameter As ObjectParameter = If(consulta.HasValue, New ObjectParameter("consulta", consulta), New ObjectParameter("consulta", GetType(Boolean)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPerfilesAccesos_Update", idParameter, codigoParameter, formParameter, idperfilParameter, altaParameter, bajaParameter, modificaParameter, consultaParameter, userupdParameter, res)
    End Function

    Public Overridable Function spPeriodoPresentaciones_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPeriodoPresentaciones_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spPeriodoPresentaciones_Insert(id As ObjectParameter, codigo As String, idMandataria As Nullable(Of Long), idGrupo As Nullable(Of Long), periodo As String, fechaLimite As Nullable(Of Date), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim idMandatariaParameter As ObjectParameter = If(idMandataria.HasValue, New ObjectParameter("IdMandataria", idMandataria), New ObjectParameter("IdMandataria", GetType(Long)))

        Dim idGrupoParameter As ObjectParameter = If(idGrupo.HasValue, New ObjectParameter("idGrupo", idGrupo), New ObjectParameter("idGrupo", GetType(Long)))

        Dim periodoParameter As ObjectParameter = If(periodo IsNot Nothing, New ObjectParameter("Periodo", periodo), New ObjectParameter("Periodo", GetType(String)))

        Dim fechaLimiteParameter As ObjectParameter = If(fechaLimite.HasValue, New ObjectParameter("FechaLimite", fechaLimite), New ObjectParameter("FechaLimite", GetType(Date)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPeriodoPresentaciones_Insert", id, codigoParameter, idMandatariaParameter, idGrupoParameter, periodoParameter, fechaLimiteParameter, useraddParameter, res)
    End Function

    Public Overridable Function spPeriodoPresentaciones_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spPeriodoPresentaciones_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPeriodoPresentaciones_Select_All_Result)("spPeriodoPresentaciones_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spPeriodoPresentaciones_Update(id As ObjectParameter, codigo As String, idMandataria As Nullable(Of Long), idGrupo As Nullable(Of Long), periodo As String, fechaLimite As Nullable(Of Date), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim idMandatariaParameter As ObjectParameter = If(idMandataria.HasValue, New ObjectParameter("IdMandataria", idMandataria), New ObjectParameter("IdMandataria", GetType(Long)))

        Dim idGrupoParameter As ObjectParameter = If(idGrupo.HasValue, New ObjectParameter("idGrupo", idGrupo), New ObjectParameter("idGrupo", GetType(Long)))

        Dim periodoParameter As ObjectParameter = If(periodo IsNot Nothing, New ObjectParameter("Periodo", periodo), New ObjectParameter("Periodo", GetType(String)))

        Dim fechaLimiteParameter As ObjectParameter = If(fechaLimite.HasValue, New ObjectParameter("FechaLimite", fechaLimite), New ObjectParameter("FechaLimite", GetType(Date)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPeriodoPresentaciones_Update", id, codigoParameter, idMandatariaParameter, idGrupoParameter, periodoParameter, fechaLimiteParameter, userupdParameter, res)
    End Function

    Public Overridable Function spPeriodosFacturacion_Gastos() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPeriodosFacturacion_Gastos")
    End Function

    Public Overridable Function spPeriodosRRHH() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPeriodosRRHH")
    End Function

    Public Overridable Function spPermisos_Select_by_Form(iduser As Nullable(Of Long), form As String, alta As ObjectParameter, modifica As ObjectParameter, baja As ObjectParameter, bajaFisica As ObjectParameter, deshacer As ObjectParameter) As Integer
        Dim iduserParameter As ObjectParameter = If(iduser.HasValue, New ObjectParameter("iduser", iduser), New ObjectParameter("iduser", GetType(Long)))

        Dim formParameter As ObjectParameter = If(form IsNot Nothing, New ObjectParameter("form", form), New ObjectParameter("form", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPermisos_Select_by_Form", iduserParameter, formParameter, alta, modifica, baja, bajaFisica, deshacer)
    End Function

    Public Overridable Function spPresentacion_Report(idpresentacion As Nullable(Of Long)) As ObjectResult(Of spPresentacion_Report_Result)
        Dim idpresentacionParameter As ObjectParameter = If(idpresentacion.HasValue, New ObjectParameter("idpresentacion", idpresentacion), New ObjectParameter("idpresentacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresentacion_Report_Result)("spPresentacion_Report", idpresentacionParameter)
    End Function

    Public Overridable Function spPresentaciones_Det_Insert(id As ObjectParameter, idfarmacia As Nullable(Of Long), idpresentacion As Nullable(Of Long), recetas As Nullable(Of Integer), recaudado As Nullable(Of Decimal), acargoos As Nullable(Of Decimal), bonificacion As Nullable(Of Decimal), total As Nullable(Of Decimal), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idfarmaciaParameter As ObjectParameter = If(idfarmacia.HasValue, New ObjectParameter("idfarmacia", idfarmacia), New ObjectParameter("idfarmacia", GetType(Long)))

        Dim idpresentacionParameter As ObjectParameter = If(idpresentacion.HasValue, New ObjectParameter("idpresentacion", idpresentacion), New ObjectParameter("idpresentacion", GetType(Long)))

        Dim recetasParameter As ObjectParameter = If(recetas.HasValue, New ObjectParameter("recetas", recetas), New ObjectParameter("recetas", GetType(Integer)))

        Dim recaudadoParameter As ObjectParameter = If(recaudado.HasValue, New ObjectParameter("recaudado", recaudado), New ObjectParameter("recaudado", GetType(Decimal)))

        Dim acargoosParameter As ObjectParameter = If(acargoos.HasValue, New ObjectParameter("acargoos", acargoos), New ObjectParameter("acargoos", GetType(Decimal)))

        Dim bonificacionParameter As ObjectParameter = If(bonificacion.HasValue, New ObjectParameter("bonificacion", bonificacion), New ObjectParameter("bonificacion", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("total", total), New ObjectParameter("total", GetType(Decimal)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresentaciones_Det_Insert", id, idfarmaciaParameter, idpresentacionParameter, recetasParameter, recaudadoParameter, acargoosParameter, bonificacionParameter, totalParameter, useraddParameter, res)
    End Function

    Public Overridable Function spPresentaciones_Det_Insert_Update(id As ObjectParameter, idfarmacia As Nullable(Of Long), idpresentacion As Nullable(Of Long), recetas As Nullable(Of Integer), recaudado As Nullable(Of Decimal), acargoos As Nullable(Of Decimal), bonificacion As Nullable(Of Decimal), total As Nullable(Of Decimal), eliminado As Nullable(Of Boolean), user As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idfarmaciaParameter As ObjectParameter = If(idfarmacia.HasValue, New ObjectParameter("idfarmacia", idfarmacia), New ObjectParameter("idfarmacia", GetType(Long)))

        Dim idpresentacionParameter As ObjectParameter = If(idpresentacion.HasValue, New ObjectParameter("idpresentacion", idpresentacion), New ObjectParameter("idpresentacion", GetType(Long)))

        Dim recetasParameter As ObjectParameter = If(recetas.HasValue, New ObjectParameter("recetas", recetas), New ObjectParameter("recetas", GetType(Integer)))

        Dim recaudadoParameter As ObjectParameter = If(recaudado.HasValue, New ObjectParameter("recaudado", recaudado), New ObjectParameter("recaudado", GetType(Decimal)))

        Dim acargoosParameter As ObjectParameter = If(acargoos.HasValue, New ObjectParameter("acargoos", acargoos), New ObjectParameter("acargoos", GetType(Decimal)))

        Dim bonificacionParameter As ObjectParameter = If(bonificacion.HasValue, New ObjectParameter("bonificacion", bonificacion), New ObjectParameter("bonificacion", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("total", total), New ObjectParameter("total", GetType(Decimal)))

        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("eliminado", eliminado), New ObjectParameter("eliminado", GetType(Boolean)))

        Dim userParameter As ObjectParameter = If(user.HasValue, New ObjectParameter("user", user), New ObjectParameter("user", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresentaciones_Det_Insert_Update", id, idfarmaciaParameter, idpresentacionParameter, recetasParameter, recaudadoParameter, acargoosParameter, bonificacionParameter, totalParameter, eliminadoParameter, userParameter, res)
    End Function

    Public Overridable Function spPresentaciones_Det_Select_By_IDPresentacion(iDPresentacion As Nullable(Of Long)) As ObjectResult(Of spPresentaciones_Det_Select_By_IDPresentacion_Result)
        Dim iDPresentacionParameter As ObjectParameter = If(iDPresentacion.HasValue, New ObjectParameter("IDPresentacion", iDPresentacion), New ObjectParameter("IDPresentacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresentaciones_Det_Select_By_IDPresentacion_Result)("spPresentaciones_Det_Select_By_IDPresentacion", iDPresentacionParameter)
    End Function

    Public Overridable Function spPresentaciones_Det_Update(id As Nullable(Of Long), codigo As String, idrecepcion As Nullable(Of Long), idmaterial As Nullable(Of Long), lote As Nullable(Of Long), loteproveed As String, qty As Nullable(Of Decimal), idunidad As Nullable(Of Long), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim idrecepcionParameter As ObjectParameter = If(idrecepcion.HasValue, New ObjectParameter("idrecepcion", idrecepcion), New ObjectParameter("idrecepcion", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim loteParameter As ObjectParameter = If(lote.HasValue, New ObjectParameter("lote", lote), New ObjectParameter("lote", GetType(Long)))

        Dim loteproveedParameter As ObjectParameter = If(loteproveed IsNot Nothing, New ObjectParameter("loteproveed", loteproveed), New ObjectParameter("loteproveed", GetType(String)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresentaciones_Det_Update", idParameter, codigoParameter, idrecepcionParameter, idmaterialParameter, loteParameter, loteproveedParameter, qtyParameter, idunidadParameter, userupdParameter, res)
    End Function

    Public Overridable Function spPresentaciones_Det_Update_old(id As Nullable(Of Long), codigo As String, idrecepcion As Nullable(Of Long), idmaterial As Nullable(Of Long), lote As Nullable(Of Long), loteproveed As String, qty As Nullable(Of Decimal), idunidad As Nullable(Of Long), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim idrecepcionParameter As ObjectParameter = If(idrecepcion.HasValue, New ObjectParameter("idrecepcion", idrecepcion), New ObjectParameter("idrecepcion", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim loteParameter As ObjectParameter = If(lote.HasValue, New ObjectParameter("lote", lote), New ObjectParameter("lote", GetType(Long)))

        Dim loteproveedParameter As ObjectParameter = If(loteproveed IsNot Nothing, New ObjectParameter("loteproveed", loteproveed), New ObjectParameter("loteproveed", GetType(String)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresentaciones_Det_Update_old", idParameter, codigoParameter, idrecepcionParameter, idmaterialParameter, loteParameter, loteproveedParameter, qtyParameter, idunidadParameter, userupdParameter, res)
    End Function

    Public Overridable Function spPresentaciones_Insert(id As ObjectParameter, codigo As ObjectParameter, fecha As Nullable(Of Date), idobrasocial As Nullable(Of Long), observaciones As String, periodo As String, total As Nullable(Of Decimal), useradd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim idobrasocialParameter As ObjectParameter = If(idobrasocial.HasValue, New ObjectParameter("idobrasocial", idobrasocial), New ObjectParameter("idobrasocial", GetType(Long)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("observaciones", observaciones), New ObjectParameter("observaciones", GetType(String)))

        Dim periodoParameter As ObjectParameter = If(periodo IsNot Nothing, New ObjectParameter("periodo", periodo), New ObjectParameter("periodo", GetType(String)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("total", total), New ObjectParameter("total", GetType(Decimal)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresentaciones_Insert", id, codigo, fechaParameter, idobrasocialParameter, observacionesParameter, periodoParameter, totalParameter, useraddParameter, res)
    End Function

    Public Overridable Function spPresentaciones_Insert_old(id As ObjectParameter, codigo As ObjectParameter, fecha As Nullable(Of Date), idobrasocial As Nullable(Of Long), observaciones As String, periodo As String, total As Nullable(Of Decimal), useradd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim idobrasocialParameter As ObjectParameter = If(idobrasocial.HasValue, New ObjectParameter("idobrasocial", idobrasocial), New ObjectParameter("idobrasocial", GetType(Long)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("observaciones", observaciones), New ObjectParameter("observaciones", GetType(String)))

        Dim periodoParameter As ObjectParameter = If(periodo IsNot Nothing, New ObjectParameter("periodo", periodo), New ObjectParameter("periodo", GetType(String)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("total", total), New ObjectParameter("total", GetType(Decimal)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresentaciones_Insert_old", id, codigo, fechaParameter, idobrasocialParameter, observacionesParameter, periodoParameter, totalParameter, useraddParameter, res)
    End Function

    Public Overridable Function spPresentaciones_Select_All(estado As String, eliminado As Nullable(Of Boolean)) As ObjectResult(Of spPresentaciones_Select_All_Result)
        Dim estadoParameter As ObjectParameter = If(estado IsNot Nothing, New ObjectParameter("Estado", estado), New ObjectParameter("Estado", GetType(String)))

        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresentaciones_Select_All_Result)("spPresentaciones_Select_All", estadoParameter, eliminadoParameter)
    End Function

    Public Overridable Function spPresentaciones_Select_All_old(pendientes As Nullable(Of Boolean), eliminado As Nullable(Of Boolean), todos As Nullable(Of Boolean)) As ObjectResult(Of spPresentaciones_Select_All_old_Result)
        Dim pendientesParameter As ObjectParameter = If(pendientes.HasValue, New ObjectParameter("Pendientes", pendientes), New ObjectParameter("Pendientes", GetType(Boolean)))

        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Dim todosParameter As ObjectParameter = If(todos.HasValue, New ObjectParameter("Todos", todos), New ObjectParameter("Todos", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresentaciones_Select_All_old_Result)("spPresentaciones_Select_All_old", pendientesParameter, eliminadoParameter, todosParameter)
    End Function

    Public Overridable Function spPresentaciones_Select_All_original(pendientes As Nullable(Of Boolean), eliminado As Nullable(Of Boolean), todos As Nullable(Of Boolean)) As ObjectResult(Of spPresentaciones_Select_All_original_Result)
        Dim pendientesParameter As ObjectParameter = If(pendientes.HasValue, New ObjectParameter("Pendientes", pendientes), New ObjectParameter("Pendientes", GetType(Boolean)))

        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Dim todosParameter As ObjectParameter = If(todos.HasValue, New ObjectParameter("Todos", todos), New ObjectParameter("Todos", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresentaciones_Select_All_original_Result)("spPresentaciones_Select_All_original", pendientesParameter, eliminadoParameter, todosParameter)
    End Function

    Public Overridable Function spPresentaciones_Update(id As ObjectParameter, codigo As String, fecha As Nullable(Of Date), idObraSocial As Nullable(Of Long), observaciones As String, periodo As String, total As Nullable(Of Decimal), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim idObraSocialParameter As ObjectParameter = If(idObraSocial.HasValue, New ObjectParameter("idObraSocial", idObraSocial), New ObjectParameter("idObraSocial", GetType(Long)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("observaciones", observaciones), New ObjectParameter("observaciones", GetType(String)))

        Dim periodoParameter As ObjectParameter = If(periodo IsNot Nothing, New ObjectParameter("periodo", periodo), New ObjectParameter("periodo", GetType(String)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("total", total), New ObjectParameter("total", GetType(Decimal)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresentaciones_Update", id, codigoParameter, fechaParameter, idObraSocialParameter, observacionesParameter, periodoParameter, totalParameter, userupdParameter, res)
    End Function

    Public Overridable Function spPresupuestos_ActualizarSubtotales(idPresupuesto As Nullable(Of Long)) As Integer
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_ActualizarSubtotales", idPresupuestoParameter)
    End Function

    Public Overridable Function spPresupuestos_BuscarRevision(iD As Nullable(Of Long), nroRev As ObjectParameter) As Integer
        Dim iDParameter As ObjectParameter = If(iD.HasValue, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_BuscarRevision", iDParameter, nroRev)
    End Function

    Public Overridable Function spPresupuestos_ControlarCantidadRegistros(idPresupuesto As Nullable(Of Long), idMaterial As Nullable(Of Long)) As Integer
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim idMaterialParameter As ObjectParameter = If(idMaterial.HasValue, New ObjectParameter("IdMaterial", idMaterial), New ObjectParameter("IdMaterial", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_ControlarCantidadRegistros", idPresupuestoParameter, idMaterialParameter)
    End Function

    Public Overridable Function spPresupuestos_ControlarCantidadRegistros_OfertaComercial(idPresupuesto_OfertaComercial As Nullable(Of Long), descripcion As String) As Integer
        Dim idPresupuesto_OfertaComercialParameter As ObjectParameter = If(idPresupuesto_OfertaComercial.HasValue, New ObjectParameter("IdPresupuesto_OfertaComercial", idPresupuesto_OfertaComercial), New ObjectParameter("IdPresupuesto_OfertaComercial", GetType(Long)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_ControlarCantidadRegistros_OfertaComercial", idPresupuesto_OfertaComercialParameter, descripcionParameter)
    End Function

    Public Overridable Function spPresupuestos_ControlarCantidadRegistros_Trafos_Det(idPresupuesto As Nullable(Of Long), descripcion_Trabajo As String) As Integer
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim descripcion_TrabajoParameter As ObjectParameter = If(descripcion_Trabajo IsNot Nothing, New ObjectParameter("Descripcion_Trabajo", descripcion_Trabajo), New ObjectParameter("Descripcion_Trabajo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_ControlarCantidadRegistros_Trafos_Det", idPresupuestoParameter, descripcion_TrabajoParameter)
    End Function

    Public Overridable Function spPresupuestos_ControlarFilas(iD As Nullable(Of Long), cANT As ObjectParameter) As Integer
        Dim iDParameter As ObjectParameter = If(iD.HasValue, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_ControlarFilas", iDParameter, cANT)
    End Function

    Public Overridable Function spPresupuestos_ControlarItemDentrodeRemito(idMaterial As Nullable(Of Long), idPresupuesto As Nullable(Of Long), res As ObjectParameter) As ObjectResult(Of spPresupuestos_ControlarItemDentrodeRemito_Result)
        Dim idMaterialParameter As ObjectParameter = If(idMaterial.HasValue, New ObjectParameter("IdMaterial", idMaterial), New ObjectParameter("IdMaterial", GetType(Long)))

        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresupuestos_ControlarItemDentrodeRemito_Result)("spPresupuestos_ControlarItemDentrodeRemito", idMaterialParameter, idPresupuestoParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Delete_VerEstado(idPresupuesto As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Delete_VerEstado", idPresupuestoParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Det_Delete(id As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Det_Delete", idParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Det_Insert(id As Nullable(Of Long), idpresupuesto As Nullable(Of Long), idmaterial As Nullable(Of Long), qty As Nullable(Of Decimal), idunidad As Nullable(Of Long), precioUni As Nullable(Of Decimal), ganancia As Nullable(Of Decimal), gananciaorig As Nullable(Of Decimal), precioLista As Nullable(Of Decimal), precioVta As Nullable(Of Decimal), precioVtaorig As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), nota_Det As String, recargoDesc_Det As Nullable(Of Boolean), porcRecargo_Det As Nullable(Of Decimal), ordenItem As Nullable(Of Short), plazoEntrega As String, idProveedor As Nullable(Of Long), idMarca As Nullable(Of Long), idMoneda As Nullable(Of Long), valorCambio As Nullable(Of Decimal), iva As Nullable(Of Decimal), bonif1 As Nullable(Of Decimal), bonif2 As Nullable(Of Decimal), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim idpresupuestoParameter As ObjectParameter = If(idpresupuesto.HasValue, New ObjectParameter("idpresupuesto", idpresupuesto), New ObjectParameter("idpresupuesto", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim precioUniParameter As ObjectParameter = If(precioUni.HasValue, New ObjectParameter("PrecioUni", precioUni), New ObjectParameter("PrecioUni", GetType(Decimal)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("ganancia", ganancia), New ObjectParameter("ganancia", GetType(Decimal)))

        Dim gananciaorigParameter As ObjectParameter = If(gananciaorig.HasValue, New ObjectParameter("gananciaorig", gananciaorig), New ObjectParameter("gananciaorig", GetType(Decimal)))

        Dim precioListaParameter As ObjectParameter = If(precioLista.HasValue, New ObjectParameter("PrecioLista", precioLista), New ObjectParameter("PrecioLista", GetType(Decimal)))

        Dim precioVtaParameter As ObjectParameter = If(precioVta.HasValue, New ObjectParameter("PrecioVta", precioVta), New ObjectParameter("PrecioVta", GetType(Decimal)))

        Dim precioVtaorigParameter As ObjectParameter = If(precioVtaorig.HasValue, New ObjectParameter("PrecioVtaorig", precioVtaorig), New ObjectParameter("PrecioVtaorig", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim nota_DetParameter As ObjectParameter = If(nota_Det IsNot Nothing, New ObjectParameter("Nota_Det", nota_Det), New ObjectParameter("Nota_Det", GetType(String)))

        Dim recargoDesc_DetParameter As ObjectParameter = If(recargoDesc_Det.HasValue, New ObjectParameter("RecargoDesc_Det", recargoDesc_Det), New ObjectParameter("RecargoDesc_Det", GetType(Boolean)))

        Dim porcRecargo_DetParameter As ObjectParameter = If(porcRecargo_Det.HasValue, New ObjectParameter("PorcRecargo_Det", porcRecargo_Det), New ObjectParameter("PorcRecargo_Det", GetType(Decimal)))

        Dim ordenItemParameter As ObjectParameter = If(ordenItem.HasValue, New ObjectParameter("OrdenItem", ordenItem), New ObjectParameter("OrdenItem", GetType(Short)))

        Dim plazoEntregaParameter As ObjectParameter = If(plazoEntrega IsNot Nothing, New ObjectParameter("PlazoEntrega", plazoEntrega), New ObjectParameter("PlazoEntrega", GetType(String)))

        Dim idProveedorParameter As ObjectParameter = If(idProveedor.HasValue, New ObjectParameter("IdProveedor", idProveedor), New ObjectParameter("IdProveedor", GetType(Long)))

        Dim idMarcaParameter As ObjectParameter = If(idMarca.HasValue, New ObjectParameter("IdMarca", idMarca), New ObjectParameter("IdMarca", GetType(Long)))

        Dim idMonedaParameter As ObjectParameter = If(idMoneda.HasValue, New ObjectParameter("IdMoneda", idMoneda), New ObjectParameter("IdMoneda", GetType(Long)))

        Dim valorCambioParameter As ObjectParameter = If(valorCambio.HasValue, New ObjectParameter("ValorCambio", valorCambio), New ObjectParameter("ValorCambio", GetType(Decimal)))

        Dim ivaParameter As ObjectParameter = If(iva.HasValue, New ObjectParameter("Iva", iva), New ObjectParameter("Iva", GetType(Decimal)))

        Dim bonif1Parameter As ObjectParameter = If(bonif1.HasValue, New ObjectParameter("Bonif1", bonif1), New ObjectParameter("Bonif1", GetType(Decimal)))

        Dim bonif2Parameter As ObjectParameter = If(bonif2.HasValue, New ObjectParameter("Bonif2", bonif2), New ObjectParameter("Bonif2", GetType(Decimal)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Det_Insert", idParameter, idpresupuestoParameter, idmaterialParameter, qtyParameter, idunidadParameter, precioUniParameter, gananciaParameter, gananciaorigParameter, precioListaParameter, precioVtaParameter, precioVtaorigParameter, subtotalParameter, nota_DetParameter, recargoDesc_DetParameter, porcRecargo_DetParameter, ordenItemParameter, plazoEntregaParameter, idProveedorParameter, idMarcaParameter, idMonedaParameter, valorCambioParameter, ivaParameter, bonif1Parameter, bonif2Parameter, useraddParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Det_Select_By_IDConsumo(idConsumo As Nullable(Of Long)) As Integer
        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("IdConsumo", idConsumo), New ObjectParameter("IdConsumo", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Det_Select_By_IDConsumo", idConsumoParameter)
    End Function

    Public Overridable Function spPresupuestos_Det_Select_By_IDOC(idOC As Nullable(Of Long)) As Integer
        Dim idOCParameter As ObjectParameter = If(idOC.HasValue, New ObjectParameter("IdOC", idOC), New ObjectParameter("IdOC", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Det_Select_By_IDOC", idOCParameter)
    End Function

    Public Overridable Function spPresupuestos_Det_Select_By_IDPresupuesto(idPresupuesto As Nullable(Of Long)) As Integer
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Det_Select_By_IDPresupuesto", idPresupuestoParameter)
    End Function

    Public Overridable Function spPresupuestos_Det_Update(id As Nullable(Of Long), idpresupuesto As Nullable(Of Long), idmaterial As Nullable(Of Long), qty As Nullable(Of Decimal), idunidad As Nullable(Of Long), precioUni As Nullable(Of Decimal), ganancia As Nullable(Of Decimal), gananciaorig As Nullable(Of Decimal), precioLista As Nullable(Of Decimal), precioVta As Nullable(Of Decimal), precioVtaorig As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), nota_Det As String, recargoDesc_Det As Nullable(Of Boolean), porcRecargo_Det As Nullable(Of Decimal), plazoEntrega As String, idProveedor As Nullable(Of Long), idMarca As Nullable(Of Long), idMoneda As Nullable(Of Long), valorCambio As Nullable(Of Decimal), iva As Nullable(Of Decimal), userupd As Nullable(Of Long), orden As Nullable(Of Short), bonif1 As Nullable(Of Decimal), bonif2 As Nullable(Of Decimal), mensaje As ObjectParameter, res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim idpresupuestoParameter As ObjectParameter = If(idpresupuesto.HasValue, New ObjectParameter("idpresupuesto", idpresupuesto), New ObjectParameter("idpresupuesto", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim precioUniParameter As ObjectParameter = If(precioUni.HasValue, New ObjectParameter("PrecioUni", precioUni), New ObjectParameter("PrecioUni", GetType(Decimal)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("ganancia", ganancia), New ObjectParameter("ganancia", GetType(Decimal)))

        Dim gananciaorigParameter As ObjectParameter = If(gananciaorig.HasValue, New ObjectParameter("gananciaorig", gananciaorig), New ObjectParameter("gananciaorig", GetType(Decimal)))

        Dim precioListaParameter As ObjectParameter = If(precioLista.HasValue, New ObjectParameter("PrecioLista", precioLista), New ObjectParameter("PrecioLista", GetType(Decimal)))

        Dim precioVtaParameter As ObjectParameter = If(precioVta.HasValue, New ObjectParameter("PrecioVta", precioVta), New ObjectParameter("PrecioVta", GetType(Decimal)))

        Dim precioVtaorigParameter As ObjectParameter = If(precioVtaorig.HasValue, New ObjectParameter("PrecioVtaorig", precioVtaorig), New ObjectParameter("PrecioVtaorig", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim nota_DetParameter As ObjectParameter = If(nota_Det IsNot Nothing, New ObjectParameter("Nota_Det", nota_Det), New ObjectParameter("Nota_Det", GetType(String)))

        Dim recargoDesc_DetParameter As ObjectParameter = If(recargoDesc_Det.HasValue, New ObjectParameter("RecargoDesc_Det", recargoDesc_Det), New ObjectParameter("RecargoDesc_Det", GetType(Boolean)))

        Dim porcRecargo_DetParameter As ObjectParameter = If(porcRecargo_Det.HasValue, New ObjectParameter("PorcRecargo_Det", porcRecargo_Det), New ObjectParameter("PorcRecargo_Det", GetType(Decimal)))

        Dim plazoEntregaParameter As ObjectParameter = If(plazoEntrega IsNot Nothing, New ObjectParameter("PlazoEntrega", plazoEntrega), New ObjectParameter("PlazoEntrega", GetType(String)))

        Dim idProveedorParameter As ObjectParameter = If(idProveedor.HasValue, New ObjectParameter("IdProveedor", idProveedor), New ObjectParameter("IdProveedor", GetType(Long)))

        Dim idMarcaParameter As ObjectParameter = If(idMarca.HasValue, New ObjectParameter("IdMarca", idMarca), New ObjectParameter("IdMarca", GetType(Long)))

        Dim idMonedaParameter As ObjectParameter = If(idMoneda.HasValue, New ObjectParameter("IdMoneda", idMoneda), New ObjectParameter("IdMoneda", GetType(Long)))

        Dim valorCambioParameter As ObjectParameter = If(valorCambio.HasValue, New ObjectParameter("ValorCambio", valorCambio), New ObjectParameter("ValorCambio", GetType(Decimal)))

        Dim ivaParameter As ObjectParameter = If(iva.HasValue, New ObjectParameter("Iva", iva), New ObjectParameter("Iva", GetType(Decimal)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Dim ordenParameter As ObjectParameter = If(orden.HasValue, New ObjectParameter("Orden", orden), New ObjectParameter("Orden", GetType(Short)))

        Dim bonif1Parameter As ObjectParameter = If(bonif1.HasValue, New ObjectParameter("Bonif1", bonif1), New ObjectParameter("Bonif1", GetType(Decimal)))

        Dim bonif2Parameter As ObjectParameter = If(bonif2.HasValue, New ObjectParameter("Bonif2", bonif2), New ObjectParameter("Bonif2", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Det_Update", idParameter, idpresupuestoParameter, idmaterialParameter, qtyParameter, idunidadParameter, precioUniParameter, gananciaParameter, gananciaorigParameter, precioListaParameter, precioVtaParameter, precioVtaorigParameter, subtotalParameter, nota_DetParameter, recargoDesc_DetParameter, porcRecargo_DetParameter, plazoEntregaParameter, idProveedorParameter, idMarcaParameter, idMonedaParameter, valorCambioParameter, ivaParameter, userupdParameter, ordenParameter, bonif1Parameter, bonif2Parameter, mensaje, res)
    End Function

    Public Overridable Function spPresupuestos_EliminarItems_Det(idPresupuesto As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_EliminarItems_Det", idPresupuestoParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Gestion_ActualizarSubtotal(idpresupuesto As Nullable(Of Long), idpres_ges As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idpresupuestoParameter As ObjectParameter = If(idpresupuesto.HasValue, New ObjectParameter("idpresupuesto", idpresupuesto), New ObjectParameter("idpresupuesto", GetType(Long)))

        Dim idpres_gesParameter As ObjectParameter = If(idpres_ges.HasValue, New ObjectParameter("idpres_ges", idpres_ges), New ObjectParameter("idpres_ges", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_ActualizarSubtotal", idpresupuestoParameter, idpres_gesParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Gestion_BuscarInfoPres(idPresupuesto As Nullable(Of Long), totalPres As ObjectParameter, totalRem As ObjectParameter, totalFac As ObjectParameter, totalDifRem As ObjectParameter, moneda As ObjectParameter, nroOC As ObjectParameter, contactoComp As ObjectParameter, contactoUsu As ObjectParameter, entregaren As ObjectParameter, sitioEntrega As ObjectParameter, usuario As ObjectParameter, comprador As ObjectParameter, idContactoUsu As ObjectParameter, idContactoCom As ObjectParameter, idMoneda As ObjectParameter) As Integer
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_BuscarInfoPres", idPresupuestoParameter, totalPres, totalRem, totalFac, totalDifRem, moneda, nroOC, contactoComp, contactoUsu, entregaren, sitioEntrega, usuario, comprador, idContactoUsu, idContactoCom, idMoneda)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Delete(idPres_Ges As Nullable(Of Long), userdel As Nullable(Of Integer), fisico As Nullable(Of Boolean), logico As Nullable(Of Boolean), res As ObjectParameter) As Integer
        Dim idPres_GesParameter As ObjectParameter = If(idPres_Ges.HasValue, New ObjectParameter("IdPres_Ges", idPres_Ges), New ObjectParameter("IdPres_Ges", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Dim fisicoParameter As ObjectParameter = If(fisico.HasValue, New ObjectParameter("Fisico", fisico), New ObjectParameter("Fisico", GetType(Boolean)))

        Dim logicoParameter As ObjectParameter = If(logico.HasValue, New ObjectParameter("Logico", logico), New ObjectParameter("Logico", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_Delete", idPres_GesParameter, userdelParameter, fisicoParameter, logicoParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Delete_Fisico(idPres_Ges As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idPres_GesParameter As ObjectParameter = If(idPres_Ges.HasValue, New ObjectParameter("IdPres_Ges", idPres_Ges), New ObjectParameter("IdPres_Ges", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_Delete_Fisico", idPres_GesParameter, userdelParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Det_Delete(idPres_Ges As Nullable(Of Long), idPres_Ges_Det As Nullable(Of Long), idPresupuesto As Nullable(Of Long), idPres_Det As Nullable(Of Long), idMaterial As Nullable(Of Long), idUnidad As Nullable(Of Long), qty As Nullable(Of Decimal), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idPres_GesParameter As ObjectParameter = If(idPres_Ges.HasValue, New ObjectParameter("IdPres_Ges", idPres_Ges), New ObjectParameter("IdPres_Ges", GetType(Long)))

        Dim idPres_Ges_DetParameter As ObjectParameter = If(idPres_Ges_Det.HasValue, New ObjectParameter("IdPres_Ges_Det", idPres_Ges_Det), New ObjectParameter("IdPres_Ges_Det", GetType(Long)))

        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim idPres_DetParameter As ObjectParameter = If(idPres_Det.HasValue, New ObjectParameter("IdPres_Det", idPres_Det), New ObjectParameter("IdPres_Det", GetType(Long)))

        Dim idMaterialParameter As ObjectParameter = If(idMaterial.HasValue, New ObjectParameter("IdMaterial", idMaterial), New ObjectParameter("IdMaterial", GetType(Long)))

        Dim idUnidadParameter As ObjectParameter = If(idUnidad.HasValue, New ObjectParameter("IdUnidad", idUnidad), New ObjectParameter("IdUnidad", GetType(Long)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("Qty", qty), New ObjectParameter("Qty", GetType(Decimal)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_Det_Delete", idPres_GesParameter, idPres_Ges_DetParameter, idPresupuestoParameter, idPres_DetParameter, idMaterialParameter, idUnidadParameter, qtyParameter, userdelParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Det_Insert(id As ObjectParameter, codigo As ObjectParameter, idpres_ges As Nullable(Of Long), idmaterial As Nullable(Of Long), qty As Nullable(Of Decimal), preciouni As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), idunidad As Nullable(Of Long), remito As String, idpresupuesto As Nullable(Of Long), idpres_det As Nullable(Of Long), oCA As Nullable(Of Boolean), useradd As Nullable(Of Long), fecha As Nullable(Of Date), res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim idpres_gesParameter As ObjectParameter = If(idpres_ges.HasValue, New ObjectParameter("idpres_ges", idpres_ges), New ObjectParameter("idpres_ges", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim preciouniParameter As ObjectParameter = If(preciouni.HasValue, New ObjectParameter("preciouni", preciouni), New ObjectParameter("preciouni", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("subtotal", subtotal), New ObjectParameter("subtotal", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim remitoParameter As ObjectParameter = If(remito IsNot Nothing, New ObjectParameter("remito", remito), New ObjectParameter("remito", GetType(String)))

        Dim idpresupuestoParameter As ObjectParameter = If(idpresupuesto.HasValue, New ObjectParameter("idpresupuesto", idpresupuesto), New ObjectParameter("idpresupuesto", GetType(Long)))

        Dim idpres_detParameter As ObjectParameter = If(idpres_det.HasValue, New ObjectParameter("idpres_det", idpres_det), New ObjectParameter("idpres_det", GetType(Long)))

        Dim oCAParameter As ObjectParameter = If(oCA.HasValue, New ObjectParameter("OCA", oCA), New ObjectParameter("OCA", GetType(Boolean)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_Det_Insert", id, codigo, idpres_gesParameter, idmaterialParameter, qtyParameter, preciouniParameter, subtotalParameter, idunidadParameter, remitoParameter, idpresupuestoParameter, idpres_detParameter, oCAParameter, useraddParameter, fechaParameter, res, mensaje)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Det_Select_By_IDPresupuesto(idPresupuesto As Nullable(Of Long), iVA As Nullable(Of Decimal), tipo As String) As ObjectResult(Of spPresupuestos_Gestion_Det_Select_By_IDPresupuesto_Result)
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim iVAParameter As ObjectParameter = If(iVA.HasValue, New ObjectParameter("IVA", iVA), New ObjectParameter("IVA", GetType(Decimal)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("Tipo", tipo), New ObjectParameter("Tipo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresupuestos_Gestion_Det_Select_By_IDPresupuesto_Result)("spPresupuestos_Gestion_Det_Select_By_IDPresupuesto", idPresupuestoParameter, iVAParameter, tipoParameter)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Det_Select_By_IDPresupuesto_Gestion(iDPresupuesto_Gestion As Nullable(Of Long), tipo As String) As ObjectResult(Of spPresupuestos_Gestion_Det_Select_By_IDPresupuesto_Gestion_Result)
        Dim iDPresupuesto_GestionParameter As ObjectParameter = If(iDPresupuesto_Gestion.HasValue, New ObjectParameter("IDPresupuesto_Gestion", iDPresupuesto_Gestion), New ObjectParameter("IDPresupuesto_Gestion", GetType(Long)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("Tipo", tipo), New ObjectParameter("Tipo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresupuestos_Gestion_Det_Select_By_IDPresupuesto_Gestion_Result)("spPresupuestos_Gestion_Det_Select_By_IDPresupuesto_Gestion", iDPresupuesto_GestionParameter, tipoParameter)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Det_Update(id As Nullable(Of Long), idpres_det As Nullable(Of Long), idpresupuesto As Nullable(Of Long), idmaterial As Nullable(Of Long), idunidad As Nullable(Of Long), qty As Nullable(Of Decimal), remito As String, oCA As Nullable(Of Boolean), userUpd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim idpres_detParameter As ObjectParameter = If(idpres_det.HasValue, New ObjectParameter("idpres_det", idpres_det), New ObjectParameter("idpres_det", GetType(Long)))

        Dim idpresupuestoParameter As ObjectParameter = If(idpresupuesto.HasValue, New ObjectParameter("idpresupuesto", idpresupuesto), New ObjectParameter("idpresupuesto", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim remitoParameter As ObjectParameter = If(remito IsNot Nothing, New ObjectParameter("remito", remito), New ObjectParameter("remito", GetType(String)))

        Dim oCAParameter As ObjectParameter = If(oCA.HasValue, New ObjectParameter("OCA", oCA), New ObjectParameter("OCA", GetType(Boolean)))

        Dim userUpdParameter As ObjectParameter = If(userUpd.HasValue, New ObjectParameter("UserUpd", userUpd), New ObjectParameter("UserUpd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_Det_Update", idParameter, idpres_detParameter, idpresupuestoParameter, idmaterialParameter, idunidadParameter, qtyParameter, remitoParameter, oCAParameter, userUpdParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Especiales_Det_Delete(idPresGes As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idPresGesParameter As ObjectParameter = If(idPresGes.HasValue, New ObjectParameter("IdPresGes", idPresGes), New ObjectParameter("IdPresGes", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_Especiales_Det_Delete", idPresGesParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Especiales_Det_Insert(idPresGes As Nullable(Of Long), descripcionRemito As String, subtotal As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idPresGesParameter As ObjectParameter = If(idPresGes.HasValue, New ObjectParameter("IdPresGes", idPresGes), New ObjectParameter("IdPresGes", GetType(Long)))

        Dim descripcionRemitoParameter As ObjectParameter = If(descripcionRemito IsNot Nothing, New ObjectParameter("DescripcionRemito", descripcionRemito), New ObjectParameter("DescripcionRemito", GetType(String)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_Especiales_Det_Insert", idPresGesParameter, descripcionRemitoParameter, subtotalParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Especiales_Det_Select_By_IdPresGes(idPresGes As Nullable(Of Long)) As ObjectResult(Of spPresupuestos_Gestion_Especiales_Det_Select_By_IdPresGes_Result)
        Dim idPresGesParameter As ObjectParameter = If(idPresGes.HasValue, New ObjectParameter("IdPresGes", idPresGes), New ObjectParameter("IdPresGes", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresupuestos_Gestion_Especiales_Det_Select_By_IdPresGes_Result)("spPresupuestos_Gestion_Especiales_Det_Select_By_IdPresGes", idPresGesParameter)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Insert(id As ObjectParameter, codigo As ObjectParameter, fecha As Nullable(Of Date), idPresupuesto As Nullable(Of Long), idCliente As Nullable(Of Long), idMoneda As Nullable(Of Long), nota As String, nroOC As String, comprador As Nullable(Of Boolean), idContacto_Comprador As Nullable(Of Long), usuario As Nullable(Of Boolean), idContacto_Usuario As Nullable(Of Long), entregaren As Nullable(Of Boolean), sitioentrega As String, subtotalDO As Nullable(Of Decimal), iva As Nullable(Of Decimal), montoIvaDO As Nullable(Of Decimal), totalDO As Nullable(Of Decimal), entregaPendiente As Nullable(Of Boolean), remitoEspecial As Nullable(Of Boolean), paraFacturar As Nullable(Of Boolean), tipoRemito As String, useradd As Nullable(Of Long), mENSAJE As ObjectParameter, res As ObjectParameter) As Integer
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim idMonedaParameter As ObjectParameter = If(idMoneda.HasValue, New ObjectParameter("IdMoneda", idMoneda), New ObjectParameter("IdMoneda", GetType(Long)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim nroOCParameter As ObjectParameter = If(nroOC IsNot Nothing, New ObjectParameter("NroOC", nroOC), New ObjectParameter("NroOC", GetType(String)))

        Dim compradorParameter As ObjectParameter = If(comprador.HasValue, New ObjectParameter("Comprador", comprador), New ObjectParameter("Comprador", GetType(Boolean)))

        Dim idContacto_CompradorParameter As ObjectParameter = If(idContacto_Comprador.HasValue, New ObjectParameter("idContacto_Comprador", idContacto_Comprador), New ObjectParameter("idContacto_Comprador", GetType(Long)))

        Dim usuarioParameter As ObjectParameter = If(usuario.HasValue, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(Boolean)))

        Dim idContacto_UsuarioParameter As ObjectParameter = If(idContacto_Usuario.HasValue, New ObjectParameter("idContacto_Usuario", idContacto_Usuario), New ObjectParameter("idContacto_Usuario", GetType(Long)))

        Dim entregarenParameter As ObjectParameter = If(entregaren.HasValue, New ObjectParameter("Entregaren", entregaren), New ObjectParameter("Entregaren", GetType(Boolean)))

        Dim sitioentregaParameter As ObjectParameter = If(sitioentrega IsNot Nothing, New ObjectParameter("sitioentrega", sitioentrega), New ObjectParameter("sitioentrega", GetType(String)))

        Dim subtotalDOParameter As ObjectParameter = If(subtotalDO.HasValue, New ObjectParameter("SubtotalDO", subtotalDO), New ObjectParameter("SubtotalDO", GetType(Decimal)))

        Dim ivaParameter As ObjectParameter = If(iva.HasValue, New ObjectParameter("Iva", iva), New ObjectParameter("Iva", GetType(Decimal)))

        Dim montoIvaDOParameter As ObjectParameter = If(montoIvaDO.HasValue, New ObjectParameter("MontoIvaDO", montoIvaDO), New ObjectParameter("MontoIvaDO", GetType(Decimal)))

        Dim totalDOParameter As ObjectParameter = If(totalDO.HasValue, New ObjectParameter("totalDO", totalDO), New ObjectParameter("totalDO", GetType(Decimal)))

        Dim entregaPendienteParameter As ObjectParameter = If(entregaPendiente.HasValue, New ObjectParameter("EntregaPendiente", entregaPendiente), New ObjectParameter("EntregaPendiente", GetType(Boolean)))

        Dim remitoEspecialParameter As ObjectParameter = If(remitoEspecial.HasValue, New ObjectParameter("RemitoEspecial", remitoEspecial), New ObjectParameter("RemitoEspecial", GetType(Boolean)))

        Dim paraFacturarParameter As ObjectParameter = If(paraFacturar.HasValue, New ObjectParameter("ParaFacturar", paraFacturar), New ObjectParameter("ParaFacturar", GetType(Boolean)))

        Dim tipoRemitoParameter As ObjectParameter = If(tipoRemito IsNot Nothing, New ObjectParameter("TipoRemito", tipoRemito), New ObjectParameter("TipoRemito", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_Insert", id, codigo, fechaParameter, idPresupuestoParameter, idClienteParameter, idMonedaParameter, notaParameter, nroOCParameter, compradorParameter, idContacto_CompradorParameter, usuarioParameter, idContacto_UsuarioParameter, entregarenParameter, sitioentregaParameter, subtotalDOParameter, ivaParameter, montoIvaDOParameter, totalDOParameter, entregaPendienteParameter, remitoEspecialParameter, paraFacturarParameter, tipoRemitoParameter, useraddParameter, mENSAJE, res)
    End Function

    Public Overridable Function spPresupuestos_Gestion_ManoObra_Delete(idPresOfertaComercial As Nullable(Of Long), idPresOfertaComercial_Det As Nullable(Of Long), idPresupuesto As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idPresOfertaComercialParameter As ObjectParameter = If(idPresOfertaComercial.HasValue, New ObjectParameter("IdPresOfertaComercial", idPresOfertaComercial), New ObjectParameter("IdPresOfertaComercial", GetType(Long)))

        Dim idPresOfertaComercial_DetParameter As ObjectParameter = If(idPresOfertaComercial_Det.HasValue, New ObjectParameter("IdPresOfertaComercial_Det", idPresOfertaComercial_Det), New ObjectParameter("IdPresOfertaComercial_Det", GetType(Long)))

        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_ManoObra_Delete", idPresOfertaComercialParameter, idPresOfertaComercial_DetParameter, idPresupuestoParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Gestion_ManoObra_Insert(idPresGes As Nullable(Of Long), idPresOfertaComercial As Nullable(Of Long), idPresOfertaComercial_Det As Nullable(Of Long), idPresupuesto As Nullable(Of Long), fecha As Nullable(Of Date), res As ObjectParameter) As Integer
        Dim idPresGesParameter As ObjectParameter = If(idPresGes.HasValue, New ObjectParameter("IdPresGes", idPresGes), New ObjectParameter("IdPresGes", GetType(Long)))

        Dim idPresOfertaComercialParameter As ObjectParameter = If(idPresOfertaComercial.HasValue, New ObjectParameter("IdPresOfertaComercial", idPresOfertaComercial), New ObjectParameter("IdPresOfertaComercial", GetType(Long)))

        Dim idPresOfertaComercial_DetParameter As ObjectParameter = If(idPresOfertaComercial_Det.HasValue, New ObjectParameter("IdPresOfertaComercial_Det", idPresOfertaComercial_Det), New ObjectParameter("IdPresOfertaComercial_Det", GetType(Long)))

        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_ManoObra_Insert", idPresGesParameter, idPresOfertaComercialParameter, idPresOfertaComercial_DetParameter, idPresupuestoParameter, fechaParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Select_All(eliminado As Nullable(Of Boolean)) As Integer
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Select_All_ProxRemito(proxRemito As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_Select_All_ProxRemito", proxRemito)
    End Function

    Public Overridable Function spPresupuestos_Gestion_Update(id As Nullable(Of Long), fecha As Nullable(Of Date), nota As String, nroRemito As String, idPresupuesto As Nullable(Of Long), idMoneda As Nullable(Of Long), nroOC As String, comprador As Nullable(Of Boolean), idContacto_Comprador As Nullable(Of Long), usuario As Nullable(Of Boolean), idContacto_Usuario As Nullable(Of Long), entregaren As Nullable(Of Boolean), sitioentrega As String, entregaPendiente As Nullable(Of Boolean), subtotalDO As Nullable(Of Decimal), iva As Nullable(Of Decimal), montoIvaDO As Nullable(Of Decimal), totalDO As Nullable(Of Decimal), paraFacturar As Nullable(Of Boolean), userUpd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim nroRemitoParameter As ObjectParameter = If(nroRemito IsNot Nothing, New ObjectParameter("NroRemito", nroRemito), New ObjectParameter("NroRemito", GetType(String)))

        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim idMonedaParameter As ObjectParameter = If(idMoneda.HasValue, New ObjectParameter("IdMoneda", idMoneda), New ObjectParameter("IdMoneda", GetType(Long)))

        Dim nroOCParameter As ObjectParameter = If(nroOC IsNot Nothing, New ObjectParameter("NroOC", nroOC), New ObjectParameter("NroOC", GetType(String)))

        Dim compradorParameter As ObjectParameter = If(comprador.HasValue, New ObjectParameter("Comprador", comprador), New ObjectParameter("Comprador", GetType(Boolean)))

        Dim idContacto_CompradorParameter As ObjectParameter = If(idContacto_Comprador.HasValue, New ObjectParameter("idContacto_Comprador", idContacto_Comprador), New ObjectParameter("idContacto_Comprador", GetType(Long)))

        Dim usuarioParameter As ObjectParameter = If(usuario.HasValue, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(Boolean)))

        Dim idContacto_UsuarioParameter As ObjectParameter = If(idContacto_Usuario.HasValue, New ObjectParameter("idContacto_Usuario", idContacto_Usuario), New ObjectParameter("idContacto_Usuario", GetType(Long)))

        Dim entregarenParameter As ObjectParameter = If(entregaren.HasValue, New ObjectParameter("Entregaren", entregaren), New ObjectParameter("Entregaren", GetType(Boolean)))

        Dim sitioentregaParameter As ObjectParameter = If(sitioentrega IsNot Nothing, New ObjectParameter("sitioentrega", sitioentrega), New ObjectParameter("sitioentrega", GetType(String)))

        Dim entregaPendienteParameter As ObjectParameter = If(entregaPendiente.HasValue, New ObjectParameter("EntregaPendiente", entregaPendiente), New ObjectParameter("EntregaPendiente", GetType(Boolean)))

        Dim subtotalDOParameter As ObjectParameter = If(subtotalDO.HasValue, New ObjectParameter("SubtotalDO", subtotalDO), New ObjectParameter("SubtotalDO", GetType(Decimal)))

        Dim ivaParameter As ObjectParameter = If(iva.HasValue, New ObjectParameter("Iva", iva), New ObjectParameter("Iva", GetType(Decimal)))

        Dim montoIvaDOParameter As ObjectParameter = If(montoIvaDO.HasValue, New ObjectParameter("MontoIvaDO", montoIvaDO), New ObjectParameter("MontoIvaDO", GetType(Decimal)))

        Dim totalDOParameter As ObjectParameter = If(totalDO.HasValue, New ObjectParameter("totalDO", totalDO), New ObjectParameter("totalDO", GetType(Decimal)))

        Dim paraFacturarParameter As ObjectParameter = If(paraFacturar.HasValue, New ObjectParameter("ParaFacturar", paraFacturar), New ObjectParameter("ParaFacturar", GetType(Boolean)))

        Dim userUpdParameter As ObjectParameter = If(userUpd.HasValue, New ObjectParameter("userUpd", userUpd), New ObjectParameter("userUpd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Gestion_Update", idParameter, fechaParameter, notaParameter, nroRemitoParameter, idPresupuestoParameter, idMonedaParameter, nroOCParameter, compradorParameter, idContacto_CompradorParameter, usuarioParameter, idContacto_UsuarioParameter, entregarenParameter, sitioentregaParameter, entregaPendienteParameter, subtotalDOParameter, ivaParameter, montoIvaDOParameter, totalDOParameter, paraFacturarParameter, userUpdParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Historia(codigo As String, res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Historia", codigoParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Insert(id As ObjectParameter, fechaPresupuesto As Nullable(Of Date), codigo As ObjectParameter, nombreReferencia As String, idCliente As Nullable(Of Long), comprador As Nullable(Of Boolean), idContacto_Comprador As Nullable(Of Long), usuario As Nullable(Of Boolean), idContacto_Usuario As Nullable(Of Long), sitioEntrega As String, idMonedaPres As Nullable(Of Long), iva21DO As Nullable(Of Decimal), iva10DO As Nullable(Of Decimal), subtotalDO As Nullable(Of Decimal), totalDO As Nullable(Of Decimal), incluyenotas As Nullable(Of Boolean), validez As Nullable(Of Integer), idFormaPago As Nullable(Of Long), nroOC As String, entregaren As Nullable(Of Boolean), nroReq As String, nroRev As Nullable(Of Short), recDescGobal As Nullable(Of Boolean), recargoDesc As Nullable(Of Boolean), porcRecargo As Nullable(Of Decimal), userAutoriza As Nullable(Of Long), userVendedor As Nullable(Of Long), notapresupuesto As String, anticipo As Nullable(Of Boolean), porcAnticipo As Nullable(Of Decimal), oCA As Nullable(Of Boolean), idConsumo As Nullable(Of Long), oC As Nullable(Of Boolean), idOC As Nullable(Of Long), ofertaComercial As Nullable(Of Boolean), mostrarCodigo As Nullable(Of Boolean), mostrarPrecioMat As Nullable(Of Boolean), mostrarPrecioManoObra As Nullable(Of Boolean), mostrarSubtotalMatOC As Nullable(Of Boolean), mostrarSubtotalMOOC As Nullable(Of Boolean), manoObra As Nullable(Of Boolean), subtotalOfertaComercial As Nullable(Of Boolean), mostrarTotal As Nullable(Of Boolean), mostrarPlazoEntrega As Nullable(Of Boolean), nombreEstado As String, trafo As Nullable(Of Boolean), cabeceraTrafo As String, observaciones As String, horasTrabajo As Nullable(Of Integer), subtotalEnsayos As Nullable(Of Decimal), precioDistribuidor As Nullable(Of Boolean), presupuestoconWord As Nullable(Of Boolean), garantia As Nullable(Of Integer), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim fechaPresupuestoParameter As ObjectParameter = If(fechaPresupuesto.HasValue, New ObjectParameter("FechaPresupuesto", fechaPresupuesto), New ObjectParameter("FechaPresupuesto", GetType(Date)))

        Dim nombreReferenciaParameter As ObjectParameter = If(nombreReferencia IsNot Nothing, New ObjectParameter("NombreReferencia", nombreReferencia), New ObjectParameter("NombreReferencia", GetType(String)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim compradorParameter As ObjectParameter = If(comprador.HasValue, New ObjectParameter("Comprador", comprador), New ObjectParameter("Comprador", GetType(Boolean)))

        Dim idContacto_CompradorParameter As ObjectParameter = If(idContacto_Comprador.HasValue, New ObjectParameter("IdContacto_Comprador", idContacto_Comprador), New ObjectParameter("IdContacto_Comprador", GetType(Long)))

        Dim usuarioParameter As ObjectParameter = If(usuario.HasValue, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(Boolean)))

        Dim idContacto_UsuarioParameter As ObjectParameter = If(idContacto_Usuario.HasValue, New ObjectParameter("IdContacto_Usuario", idContacto_Usuario), New ObjectParameter("IdContacto_Usuario", GetType(Long)))

        Dim sitioEntregaParameter As ObjectParameter = If(sitioEntrega IsNot Nothing, New ObjectParameter("SitioEntrega", sitioEntrega), New ObjectParameter("SitioEntrega", GetType(String)))

        Dim idMonedaPresParameter As ObjectParameter = If(idMonedaPres.HasValue, New ObjectParameter("IdMonedaPres", idMonedaPres), New ObjectParameter("IdMonedaPres", GetType(Long)))

        Dim iva21DOParameter As ObjectParameter = If(iva21DO.HasValue, New ObjectParameter("Iva21DO", iva21DO), New ObjectParameter("Iva21DO", GetType(Decimal)))

        Dim iva10DOParameter As ObjectParameter = If(iva10DO.HasValue, New ObjectParameter("Iva10DO", iva10DO), New ObjectParameter("Iva10DO", GetType(Decimal)))

        Dim subtotalDOParameter As ObjectParameter = If(subtotalDO.HasValue, New ObjectParameter("SubtotalDO", subtotalDO), New ObjectParameter("SubtotalDO", GetType(Decimal)))

        Dim totalDOParameter As ObjectParameter = If(totalDO.HasValue, New ObjectParameter("totalDO", totalDO), New ObjectParameter("totalDO", GetType(Decimal)))

        Dim incluyenotasParameter As ObjectParameter = If(incluyenotas.HasValue, New ObjectParameter("incluyenotas", incluyenotas), New ObjectParameter("incluyenotas", GetType(Boolean)))

        Dim validezParameter As ObjectParameter = If(validez.HasValue, New ObjectParameter("Validez", validez), New ObjectParameter("Validez", GetType(Integer)))

        Dim idFormaPagoParameter As ObjectParameter = If(idFormaPago.HasValue, New ObjectParameter("IdFormaPago", idFormaPago), New ObjectParameter("IdFormaPago", GetType(Long)))

        Dim nroOCParameter As ObjectParameter = If(nroOC IsNot Nothing, New ObjectParameter("NroOC", nroOC), New ObjectParameter("NroOC", GetType(String)))

        Dim entregarenParameter As ObjectParameter = If(entregaren.HasValue, New ObjectParameter("Entregaren", entregaren), New ObjectParameter("Entregaren", GetType(Boolean)))

        Dim nroReqParameter As ObjectParameter = If(nroReq IsNot Nothing, New ObjectParameter("NroReq", nroReq), New ObjectParameter("NroReq", GetType(String)))

        Dim nroRevParameter As ObjectParameter = If(nroRev.HasValue, New ObjectParameter("NroRev", nroRev), New ObjectParameter("NroRev", GetType(Short)))

        Dim recDescGobalParameter As ObjectParameter = If(recDescGobal.HasValue, New ObjectParameter("RecDescGobal", recDescGobal), New ObjectParameter("RecDescGobal", GetType(Boolean)))

        Dim recargoDescParameter As ObjectParameter = If(recargoDesc.HasValue, New ObjectParameter("RecargoDesc", recargoDesc), New ObjectParameter("RecargoDesc", GetType(Boolean)))

        Dim porcRecargoParameter As ObjectParameter = If(porcRecargo.HasValue, New ObjectParameter("PorcRecargo", porcRecargo), New ObjectParameter("PorcRecargo", GetType(Decimal)))

        Dim userAutorizaParameter As ObjectParameter = If(userAutoriza.HasValue, New ObjectParameter("userAutoriza", userAutoriza), New ObjectParameter("userAutoriza", GetType(Long)))

        Dim userVendedorParameter As ObjectParameter = If(userVendedor.HasValue, New ObjectParameter("userVendedor", userVendedor), New ObjectParameter("userVendedor", GetType(Long)))

        Dim notapresupuestoParameter As ObjectParameter = If(notapresupuesto IsNot Nothing, New ObjectParameter("notapresupuesto", notapresupuesto), New ObjectParameter("notapresupuesto", GetType(String)))

        Dim anticipoParameter As ObjectParameter = If(anticipo.HasValue, New ObjectParameter("Anticipo", anticipo), New ObjectParameter("Anticipo", GetType(Boolean)))

        Dim porcAnticipoParameter As ObjectParameter = If(porcAnticipo.HasValue, New ObjectParameter("PorcAnticipo", porcAnticipo), New ObjectParameter("PorcAnticipo", GetType(Decimal)))

        Dim oCAParameter As ObjectParameter = If(oCA.HasValue, New ObjectParameter("OCA", oCA), New ObjectParameter("OCA", GetType(Boolean)))

        Dim idConsumoParameter As ObjectParameter = If(idConsumo.HasValue, New ObjectParameter("IdConsumo", idConsumo), New ObjectParameter("IdConsumo", GetType(Long)))

        Dim oCParameter As ObjectParameter = If(oC.HasValue, New ObjectParameter("OC", oC), New ObjectParameter("OC", GetType(Boolean)))

        Dim idOCParameter As ObjectParameter = If(idOC.HasValue, New ObjectParameter("IdOC", idOC), New ObjectParameter("IdOC", GetType(Long)))

        Dim ofertaComercialParameter As ObjectParameter = If(ofertaComercial.HasValue, New ObjectParameter("OfertaComercial", ofertaComercial), New ObjectParameter("OfertaComercial", GetType(Boolean)))

        Dim mostrarCodigoParameter As ObjectParameter = If(mostrarCodigo.HasValue, New ObjectParameter("MostrarCodigo", mostrarCodigo), New ObjectParameter("MostrarCodigo", GetType(Boolean)))

        Dim mostrarPrecioMatParameter As ObjectParameter = If(mostrarPrecioMat.HasValue, New ObjectParameter("MostrarPrecioMat", mostrarPrecioMat), New ObjectParameter("MostrarPrecioMat", GetType(Boolean)))

        Dim mostrarPrecioManoObraParameter As ObjectParameter = If(mostrarPrecioManoObra.HasValue, New ObjectParameter("MostrarPrecioManoObra", mostrarPrecioManoObra), New ObjectParameter("MostrarPrecioManoObra", GetType(Boolean)))

        Dim mostrarSubtotalMatOCParameter As ObjectParameter = If(mostrarSubtotalMatOC.HasValue, New ObjectParameter("MostrarSubtotalMatOC", mostrarSubtotalMatOC), New ObjectParameter("MostrarSubtotalMatOC", GetType(Boolean)))

        Dim mostrarSubtotalMOOCParameter As ObjectParameter = If(mostrarSubtotalMOOC.HasValue, New ObjectParameter("MostrarSubtotalMOOC", mostrarSubtotalMOOC), New ObjectParameter("MostrarSubtotalMOOC", GetType(Boolean)))

        Dim manoObraParameter As ObjectParameter = If(manoObra.HasValue, New ObjectParameter("ManoObra", manoObra), New ObjectParameter("ManoObra", GetType(Boolean)))

        Dim subtotalOfertaComercialParameter As ObjectParameter = If(subtotalOfertaComercial.HasValue, New ObjectParameter("SubtotalOfertaComercial", subtotalOfertaComercial), New ObjectParameter("SubtotalOfertaComercial", GetType(Boolean)))

        Dim mostrarTotalParameter As ObjectParameter = If(mostrarTotal.HasValue, New ObjectParameter("MostrarTotal", mostrarTotal), New ObjectParameter("MostrarTotal", GetType(Boolean)))

        Dim mostrarPlazoEntregaParameter As ObjectParameter = If(mostrarPlazoEntrega.HasValue, New ObjectParameter("MostrarPlazoEntrega", mostrarPlazoEntrega), New ObjectParameter("MostrarPlazoEntrega", GetType(Boolean)))

        Dim nombreEstadoParameter As ObjectParameter = If(nombreEstado IsNot Nothing, New ObjectParameter("NombreEstado", nombreEstado), New ObjectParameter("NombreEstado", GetType(String)))

        Dim trafoParameter As ObjectParameter = If(trafo.HasValue, New ObjectParameter("Trafo", trafo), New ObjectParameter("Trafo", GetType(Boolean)))

        Dim cabeceraTrafoParameter As ObjectParameter = If(cabeceraTrafo IsNot Nothing, New ObjectParameter("CabeceraTrafo", cabeceraTrafo), New ObjectParameter("CabeceraTrafo", GetType(String)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("Observaciones", observaciones), New ObjectParameter("Observaciones", GetType(String)))

        Dim horasTrabajoParameter As ObjectParameter = If(horasTrabajo.HasValue, New ObjectParameter("HorasTrabajo", horasTrabajo), New ObjectParameter("HorasTrabajo", GetType(Integer)))

        Dim subtotalEnsayosParameter As ObjectParameter = If(subtotalEnsayos.HasValue, New ObjectParameter("SubtotalEnsayos", subtotalEnsayos), New ObjectParameter("SubtotalEnsayos", GetType(Decimal)))

        Dim precioDistribuidorParameter As ObjectParameter = If(precioDistribuidor.HasValue, New ObjectParameter("PrecioDistribuidor", precioDistribuidor), New ObjectParameter("PrecioDistribuidor", GetType(Boolean)))

        Dim presupuestoconWordParameter As ObjectParameter = If(presupuestoconWord.HasValue, New ObjectParameter("PresupuestoconWord", presupuestoconWord), New ObjectParameter("PresupuestoconWord", GetType(Boolean)))

        Dim garantiaParameter As ObjectParameter = If(garantia.HasValue, New ObjectParameter("garantia", garantia), New ObjectParameter("garantia", GetType(Integer)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Insert", id, fechaPresupuestoParameter, codigo, nombreReferenciaParameter, idClienteParameter, compradorParameter, idContacto_CompradorParameter, usuarioParameter, idContacto_UsuarioParameter, sitioEntregaParameter, idMonedaPresParameter, iva21DOParameter, iva10DOParameter, subtotalDOParameter, totalDOParameter, incluyenotasParameter, validezParameter, idFormaPagoParameter, nroOCParameter, entregarenParameter, nroReqParameter, nroRevParameter, recDescGobalParameter, recargoDescParameter, porcRecargoParameter, userAutorizaParameter, userVendedorParameter, notapresupuestoParameter, anticipoParameter, porcAnticipoParameter, oCAParameter, idConsumoParameter, oCParameter, idOCParameter, ofertaComercialParameter, mostrarCodigoParameter, mostrarPrecioMatParameter, mostrarPrecioManoObraParameter, mostrarSubtotalMatOCParameter, mostrarSubtotalMOOCParameter, manoObraParameter, subtotalOfertaComercialParameter, mostrarTotalParameter, mostrarPlazoEntregaParameter, nombreEstadoParameter, trafoParameter, cabeceraTrafoParameter, observacionesParameter, horasTrabajoParameter, subtotalEnsayosParameter, precioDistribuidorParameter, presupuestoconWordParameter, garantiaParameter, useraddParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Notas_Delete(idpresupuesto As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idpresupuestoParameter As ObjectParameter = If(idpresupuesto.HasValue, New ObjectParameter("idpresupuesto", idpresupuesto), New ObjectParameter("idpresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Notas_Delete", idpresupuestoParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Notas_Insert(idpresupuesto As Nullable(Of Long), nota As String, res As ObjectParameter) As Integer
        Dim idpresupuestoParameter As ObjectParameter = If(idpresupuesto.HasValue, New ObjectParameter("idpresupuesto", idpresupuesto), New ObjectParameter("idpresupuesto", GetType(Long)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Notas_Insert", idpresupuestoParameter, notaParameter, res)
    End Function

    Public Overridable Function spPresupuestos_OfertasComerciales_Det_BuscarEnRemitos(idOfertaComercial_Det As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idOfertaComercial_DetParameter As ObjectParameter = If(idOfertaComercial_Det.HasValue, New ObjectParameter("IdOfertaComercial_Det", idOfertaComercial_Det), New ObjectParameter("IdOfertaComercial_Det", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_OfertasComerciales_Det_BuscarEnRemitos", idOfertaComercial_DetParameter, res)
    End Function

    Public Overridable Function spPresupuestos_OfertasComerciales_Det_Insert(id As Nullable(Of Long), idPresupuesto_OfertaComercial As Nullable(Of Long), orden As Nullable(Of Integer), descripcion As String, preciosinIVA As Nullable(Of Decimal), idPresupuesto As Nullable(Of Long), res As ObjectParameter) As ObjectResult(Of spPresupuestos_OfertasComerciales_Det_Insert_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim idPresupuesto_OfertaComercialParameter As ObjectParameter = If(idPresupuesto_OfertaComercial.HasValue, New ObjectParameter("IdPresupuesto_OfertaComercial", idPresupuesto_OfertaComercial), New ObjectParameter("IdPresupuesto_OfertaComercial", GetType(Long)))

        Dim ordenParameter As ObjectParameter = If(orden.HasValue, New ObjectParameter("Orden", orden), New ObjectParameter("Orden", GetType(Integer)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Dim preciosinIVAParameter As ObjectParameter = If(preciosinIVA.HasValue, New ObjectParameter("PreciosinIVA", preciosinIVA), New ObjectParameter("PreciosinIVA", GetType(Decimal)))

        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresupuestos_OfertasComerciales_Det_Insert_Result)("spPresupuestos_OfertasComerciales_Det_Insert", idParameter, idPresupuesto_OfertaComercialParameter, ordenParameter, descripcionParameter, preciosinIVAParameter, idPresupuestoParameter, res)
    End Function

    Public Overridable Function spPresupuestos_OfertasComerciales_EliminarItems_Det(idpresupuesto_ofertacomercial As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idpresupuesto_ofertacomercialParameter As ObjectParameter = If(idpresupuesto_ofertacomercial.HasValue, New ObjectParameter("idpresupuesto_ofertacomercial", idpresupuesto_ofertacomercial), New ObjectParameter("idpresupuesto_ofertacomercial", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_OfertasComerciales_EliminarItems_Det", idpresupuesto_ofertacomercialParameter, res)
    End Function

    Public Overridable Function spPresupuestos_OfertasComerciales_Insert(id As ObjectParameter, idPresupuesto As Nullable(Of Long), idMonedaOferta As Nullable(Of Long), subtotal As Nullable(Of Decimal), iVA As Nullable(Of Decimal), total As Nullable(Of Decimal), alcance As String, certificacion As Nullable(Of Boolean), certificacion_texto As String, ajuste As Nullable(Of Boolean), ajuste_texto As String, plazoEntrega As Nullable(Of Boolean), plazoEntrega_Texto As String, plazoEntregaProvision As Nullable(Of Boolean), plazoEntregaProvision_Texto As String, res As ObjectParameter) As Integer
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim idMonedaOfertaParameter As ObjectParameter = If(idMonedaOferta.HasValue, New ObjectParameter("IdMonedaOferta", idMonedaOferta), New ObjectParameter("IdMonedaOferta", GetType(Long)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim iVAParameter As ObjectParameter = If(iVA.HasValue, New ObjectParameter("IVA", iVA), New ObjectParameter("IVA", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim alcanceParameter As ObjectParameter = If(alcance IsNot Nothing, New ObjectParameter("Alcance", alcance), New ObjectParameter("Alcance", GetType(String)))

        Dim certificacionParameter As ObjectParameter = If(certificacion.HasValue, New ObjectParameter("Certificacion", certificacion), New ObjectParameter("Certificacion", GetType(Boolean)))

        Dim certificacion_textoParameter As ObjectParameter = If(certificacion_texto IsNot Nothing, New ObjectParameter("Certificacion_texto", certificacion_texto), New ObjectParameter("Certificacion_texto", GetType(String)))

        Dim ajusteParameter As ObjectParameter = If(ajuste.HasValue, New ObjectParameter("Ajuste", ajuste), New ObjectParameter("Ajuste", GetType(Boolean)))

        Dim ajuste_textoParameter As ObjectParameter = If(ajuste_texto IsNot Nothing, New ObjectParameter("Ajuste_texto", ajuste_texto), New ObjectParameter("Ajuste_texto", GetType(String)))

        Dim plazoEntregaParameter As ObjectParameter = If(plazoEntrega.HasValue, New ObjectParameter("PlazoEntrega", plazoEntrega), New ObjectParameter("PlazoEntrega", GetType(Boolean)))

        Dim plazoEntrega_TextoParameter As ObjectParameter = If(plazoEntrega_Texto IsNot Nothing, New ObjectParameter("PlazoEntrega_Texto", plazoEntrega_Texto), New ObjectParameter("PlazoEntrega_Texto", GetType(String)))

        Dim plazoEntregaProvisionParameter As ObjectParameter = If(plazoEntregaProvision.HasValue, New ObjectParameter("PlazoEntregaProvision", plazoEntregaProvision), New ObjectParameter("PlazoEntregaProvision", GetType(Boolean)))

        Dim plazoEntregaProvision_TextoParameter As ObjectParameter = If(plazoEntregaProvision_Texto IsNot Nothing, New ObjectParameter("PlazoEntregaProvision_Texto", plazoEntregaProvision_Texto), New ObjectParameter("PlazoEntregaProvision_Texto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_OfertasComerciales_Insert", id, idPresupuestoParameter, idMonedaOfertaParameter, subtotalParameter, iVAParameter, totalParameter, alcanceParameter, certificacionParameter, certificacion_textoParameter, ajusteParameter, ajuste_textoParameter, plazoEntregaParameter, plazoEntrega_TextoParameter, plazoEntregaProvisionParameter, plazoEntregaProvision_TextoParameter, res)
    End Function

    Public Overridable Function spPresupuestos_OfertasComerciales_Select_by_Idpresupuesto(idPresupuesto As Nullable(Of Long)) As ObjectResult(Of spPresupuestos_OfertasComerciales_Select_by_Idpresupuesto_Result)
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresupuestos_OfertasComerciales_Select_by_Idpresupuesto_Result)("spPresupuestos_OfertasComerciales_Select_by_Idpresupuesto", idPresupuestoParameter)
    End Function

    Public Overridable Function spPresupuestos_OfertasComerciales_Update(id As Nullable(Of Long), idPresupuesto As Nullable(Of Long), subtotal As Nullable(Of Decimal), iVA As Nullable(Of Decimal), total As Nullable(Of Decimal), alcance As String, certificacion As Nullable(Of Boolean), certificacion_texto As String, ajuste As Nullable(Of Boolean), ajuste_texto As String, plazoEntrega As Nullable(Of Boolean), plazoEntrega_Texto As String, plazoEntregaProvision As Nullable(Of Boolean), plazoEntregaProvision_Texto As String, res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim iVAParameter As ObjectParameter = If(iVA.HasValue, New ObjectParameter("IVA", iVA), New ObjectParameter("IVA", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim alcanceParameter As ObjectParameter = If(alcance IsNot Nothing, New ObjectParameter("Alcance", alcance), New ObjectParameter("Alcance", GetType(String)))

        Dim certificacionParameter As ObjectParameter = If(certificacion.HasValue, New ObjectParameter("Certificacion", certificacion), New ObjectParameter("Certificacion", GetType(Boolean)))

        Dim certificacion_textoParameter As ObjectParameter = If(certificacion_texto IsNot Nothing, New ObjectParameter("Certificacion_texto", certificacion_texto), New ObjectParameter("Certificacion_texto", GetType(String)))

        Dim ajusteParameter As ObjectParameter = If(ajuste.HasValue, New ObjectParameter("Ajuste", ajuste), New ObjectParameter("Ajuste", GetType(Boolean)))

        Dim ajuste_textoParameter As ObjectParameter = If(ajuste_texto IsNot Nothing, New ObjectParameter("Ajuste_texto", ajuste_texto), New ObjectParameter("Ajuste_texto", GetType(String)))

        Dim plazoEntregaParameter As ObjectParameter = If(plazoEntrega.HasValue, New ObjectParameter("PlazoEntrega", plazoEntrega), New ObjectParameter("PlazoEntrega", GetType(Boolean)))

        Dim plazoEntrega_TextoParameter As ObjectParameter = If(plazoEntrega_Texto IsNot Nothing, New ObjectParameter("PlazoEntrega_Texto", plazoEntrega_Texto), New ObjectParameter("PlazoEntrega_Texto", GetType(String)))

        Dim plazoEntregaProvisionParameter As ObjectParameter = If(plazoEntregaProvision.HasValue, New ObjectParameter("PlazoEntregaProvision", plazoEntregaProvision), New ObjectParameter("PlazoEntregaProvision", GetType(Boolean)))

        Dim plazoEntregaProvision_TextoParameter As ObjectParameter = If(plazoEntregaProvision_Texto IsNot Nothing, New ObjectParameter("PlazoEntregaProvision_Texto", plazoEntregaProvision_Texto), New ObjectParameter("PlazoEntregaProvision_Texto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_OfertasComerciales_Update", idParameter, idPresupuestoParameter, subtotalParameter, iVAParameter, totalParameter, alcanceParameter, certificacionParameter, certificacion_textoParameter, ajusteParameter, ajuste_textoParameter, plazoEntregaParameter, plazoEntrega_TextoParameter, plazoEntregaProvisionParameter, plazoEntregaProvision_TextoParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Select_All(eliminado As Nullable(Of Boolean), estado As String, codigo As String) As ObjectResult(Of spPresupuestos_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Dim estadoParameter As ObjectParameter = If(estado IsNot Nothing, New ObjectParameter("Estado", estado), New ObjectParameter("Estado", GetType(String)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresupuestos_Select_All_Result)("spPresupuestos_Select_All", eliminadoParameter, estadoParameter, codigoParameter)
    End Function

    Public Overridable Function spPresupuestos_Trafo_EliminarItems_Det(idpresupuesto As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idpresupuestoParameter As ObjectParameter = If(idpresupuesto.HasValue, New ObjectParameter("idpresupuesto", idpresupuesto), New ObjectParameter("idpresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Trafo_EliminarItems_Det", idpresupuestoParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Trafos_Det_Insert(id As Nullable(Of Long), idpresupuesto As Nullable(Of Long), descripcion_trabajo As String, res As ObjectParameter) As ObjectResult(Of spPresupuestos_Trafos_Det_Insert_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim idpresupuestoParameter As ObjectParameter = If(idpresupuesto.HasValue, New ObjectParameter("idpresupuesto", idpresupuesto), New ObjectParameter("idpresupuesto", GetType(Long)))

        Dim descripcion_trabajoParameter As ObjectParameter = If(descripcion_trabajo IsNot Nothing, New ObjectParameter("descripcion_trabajo", descripcion_trabajo), New ObjectParameter("descripcion_trabajo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresupuestos_Trafos_Det_Insert_Result)("spPresupuestos_Trafos_Det_Insert", idParameter, idpresupuestoParameter, descripcion_trabajoParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Trafos_Det_Select_By_IdPresupuesto(idPresupuesto As Nullable(Of Long)) As ObjectResult(Of spPresupuestos_Trafos_Det_Select_By_IdPresupuesto_Result)
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresupuestos_Trafos_Det_Select_By_IdPresupuesto_Result)("spPresupuestos_Trafos_Det_Select_By_IdPresupuesto", idPresupuestoParameter)
    End Function

    Public Overridable Function spPresupuestos_Trafos_Ensayos_Insert(idPresupuesto As Nullable(Of Long), item As Nullable(Of Double), descripcionEnsayo As String, marcado As Nullable(Of Boolean), precioUnitario As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim itemParameter As ObjectParameter = If(item.HasValue, New ObjectParameter("Item", item), New ObjectParameter("Item", GetType(Double)))

        Dim descripcionEnsayoParameter As ObjectParameter = If(descripcionEnsayo IsNot Nothing, New ObjectParameter("DescripcionEnsayo", descripcionEnsayo), New ObjectParameter("DescripcionEnsayo", GetType(String)))

        Dim marcadoParameter As ObjectParameter = If(marcado.HasValue, New ObjectParameter("Marcado", marcado), New ObjectParameter("Marcado", GetType(Boolean)))

        Dim precioUnitarioParameter As ObjectParameter = If(precioUnitario.HasValue, New ObjectParameter("PrecioUnitario", precioUnitario), New ObjectParameter("PrecioUnitario", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Trafos_Ensayos_Insert", idPresupuestoParameter, itemParameter, descripcionEnsayoParameter, marcadoParameter, precioUnitarioParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Trafos_Ensayos_Select_By_IdPresupuesto(idPresupuesto As Nullable(Of Long)) As ObjectResult(Of spPresupuestos_Trafos_Ensayos_Select_By_IdPresupuesto_Result)
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresupuestos_Trafos_Ensayos_Select_By_IdPresupuesto_Result)("spPresupuestos_Trafos_Ensayos_Select_By_IdPresupuesto", idPresupuestoParameter)
    End Function

    Public Overridable Function spPresupuestos_Trafos_Ensayos_Update(iD As Nullable(Of Long), idPresupuesto As Nullable(Of Long), item As Nullable(Of Double), descripcionEnsayo As String, marcado As Nullable(Of Boolean), precioUnitario As Nullable(Of Decimal), res As ObjectParameter) As ObjectResult(Of spPresupuestos_Trafos_Ensayos_Update_Result)
        Dim iDParameter As ObjectParameter = If(iD.HasValue, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(Long)))

        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim itemParameter As ObjectParameter = If(item.HasValue, New ObjectParameter("Item", item), New ObjectParameter("Item", GetType(Double)))

        Dim descripcionEnsayoParameter As ObjectParameter = If(descripcionEnsayo IsNot Nothing, New ObjectParameter("DescripcionEnsayo", descripcionEnsayo), New ObjectParameter("DescripcionEnsayo", GetType(String)))

        Dim marcadoParameter As ObjectParameter = If(marcado.HasValue, New ObjectParameter("Marcado", marcado), New ObjectParameter("Marcado", GetType(Boolean)))

        Dim precioUnitarioParameter As ObjectParameter = If(precioUnitario.HasValue, New ObjectParameter("PrecioUnitario", precioUnitario), New ObjectParameter("PrecioUnitario", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPresupuestos_Trafos_Ensayos_Update_Result)("spPresupuestos_Trafos_Ensayos_Update", iDParameter, idPresupuestoParameter, itemParameter, descripcionEnsayoParameter, marcadoParameter, precioUnitarioParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Update(id As ObjectParameter, codigo As Nullable(Of Long), fechaPresupuesto As Nullable(Of Date), nombreReferencia As String, idCliente As Nullable(Of Long), comprador As Nullable(Of Boolean), idContacto_Comprador As Nullable(Of Long), usuario As Nullable(Of Boolean), idContacto_Usuario As Nullable(Of Long), sitioEntrega As String, idMonedaPres As Nullable(Of Long), iva21DO As Nullable(Of Decimal), iva21PE As Nullable(Of Decimal), iva10DO As Nullable(Of Decimal), iva10PE As Nullable(Of Decimal), subtotalDO As Nullable(Of Decimal), subtotalPE As Nullable(Of Decimal), totalDO As Nullable(Of Decimal), totalPE As Nullable(Of Decimal), incluyeNotas As Nullable(Of Boolean), validez As Nullable(Of Integer), idFormaPago As Nullable(Of Long), nroOC As String, entregaren As Nullable(Of Boolean), nroReq As String, nroRev As Nullable(Of Short), recDescGobal As Nullable(Of Boolean), recargoDesc As Nullable(Of Boolean), porcRecargo As Nullable(Of Decimal), userAutoriza As Nullable(Of Long), userVendedor As Nullable(Of Long), notapresupuesto As String, anticipo As Nullable(Of Boolean), porcAnticipo As Nullable(Of Decimal), ofertaComercial As Nullable(Of Boolean), mostrarCodigo As Nullable(Of Boolean), mostrarPrecioMat As Nullable(Of Boolean), mostrarPrecioManoObra As Nullable(Of Boolean), mostrarSubtotalMatOC As Nullable(Of Boolean), mostrarSubtotalMOOC As Nullable(Of Boolean), manoObra As Nullable(Of Boolean), subtotalOfertaComercial As Nullable(Of Boolean), mostrarTotal As Nullable(Of Boolean), mostrarPlazoEntrega As Nullable(Of Boolean), nombreEstado As String, trafo As Nullable(Of Boolean), cabeceraTrafo As String, observaciones As String, horasTrabajo As Nullable(Of Integer), subtotalEnsayos As Nullable(Of Decimal), presupuestoconWord As Nullable(Of Boolean), garantia As Nullable(Of Integer), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo.HasValue, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(Long)))

        Dim fechaPresupuestoParameter As ObjectParameter = If(fechaPresupuesto.HasValue, New ObjectParameter("FechaPresupuesto", fechaPresupuesto), New ObjectParameter("FechaPresupuesto", GetType(Date)))

        Dim nombreReferenciaParameter As ObjectParameter = If(nombreReferencia IsNot Nothing, New ObjectParameter("NombreReferencia", nombreReferencia), New ObjectParameter("NombreReferencia", GetType(String)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim compradorParameter As ObjectParameter = If(comprador.HasValue, New ObjectParameter("Comprador", comprador), New ObjectParameter("Comprador", GetType(Boolean)))

        Dim idContacto_CompradorParameter As ObjectParameter = If(idContacto_Comprador.HasValue, New ObjectParameter("IdContacto_Comprador", idContacto_Comprador), New ObjectParameter("IdContacto_Comprador", GetType(Long)))

        Dim usuarioParameter As ObjectParameter = If(usuario.HasValue, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(Boolean)))

        Dim idContacto_UsuarioParameter As ObjectParameter = If(idContacto_Usuario.HasValue, New ObjectParameter("IdContacto_Usuario", idContacto_Usuario), New ObjectParameter("IdContacto_Usuario", GetType(Long)))

        Dim sitioEntregaParameter As ObjectParameter = If(sitioEntrega IsNot Nothing, New ObjectParameter("SitioEntrega", sitioEntrega), New ObjectParameter("SitioEntrega", GetType(String)))

        Dim idMonedaPresParameter As ObjectParameter = If(idMonedaPres.HasValue, New ObjectParameter("IdMonedaPres", idMonedaPres), New ObjectParameter("IdMonedaPres", GetType(Long)))

        Dim iva21DOParameter As ObjectParameter = If(iva21DO.HasValue, New ObjectParameter("Iva21DO", iva21DO), New ObjectParameter("Iva21DO", GetType(Decimal)))

        Dim iva21PEParameter As ObjectParameter = If(iva21PE.HasValue, New ObjectParameter("Iva21PE", iva21PE), New ObjectParameter("Iva21PE", GetType(Decimal)))

        Dim iva10DOParameter As ObjectParameter = If(iva10DO.HasValue, New ObjectParameter("Iva10DO", iva10DO), New ObjectParameter("Iva10DO", GetType(Decimal)))

        Dim iva10PEParameter As ObjectParameter = If(iva10PE.HasValue, New ObjectParameter("Iva10PE", iva10PE), New ObjectParameter("Iva10PE", GetType(Decimal)))

        Dim subtotalDOParameter As ObjectParameter = If(subtotalDO.HasValue, New ObjectParameter("SubtotalDO", subtotalDO), New ObjectParameter("SubtotalDO", GetType(Decimal)))

        Dim subtotalPEParameter As ObjectParameter = If(subtotalPE.HasValue, New ObjectParameter("SubtotalPE", subtotalPE), New ObjectParameter("SubtotalPE", GetType(Decimal)))

        Dim totalDOParameter As ObjectParameter = If(totalDO.HasValue, New ObjectParameter("totalDO", totalDO), New ObjectParameter("totalDO", GetType(Decimal)))

        Dim totalPEParameter As ObjectParameter = If(totalPE.HasValue, New ObjectParameter("totalPE", totalPE), New ObjectParameter("totalPE", GetType(Decimal)))

        Dim incluyeNotasParameter As ObjectParameter = If(incluyeNotas.HasValue, New ObjectParameter("IncluyeNotas", incluyeNotas), New ObjectParameter("IncluyeNotas", GetType(Boolean)))

        Dim validezParameter As ObjectParameter = If(validez.HasValue, New ObjectParameter("Validez", validez), New ObjectParameter("Validez", GetType(Integer)))

        Dim idFormaPagoParameter As ObjectParameter = If(idFormaPago.HasValue, New ObjectParameter("IdFormaPago", idFormaPago), New ObjectParameter("IdFormaPago", GetType(Long)))

        Dim nroOCParameter As ObjectParameter = If(nroOC IsNot Nothing, New ObjectParameter("NroOC", nroOC), New ObjectParameter("NroOC", GetType(String)))

        Dim entregarenParameter As ObjectParameter = If(entregaren.HasValue, New ObjectParameter("Entregaren", entregaren), New ObjectParameter("Entregaren", GetType(Boolean)))

        Dim nroReqParameter As ObjectParameter = If(nroReq IsNot Nothing, New ObjectParameter("NroReq", nroReq), New ObjectParameter("NroReq", GetType(String)))

        Dim nroRevParameter As ObjectParameter = If(nroRev.HasValue, New ObjectParameter("NroRev", nroRev), New ObjectParameter("NroRev", GetType(Short)))

        Dim recDescGobalParameter As ObjectParameter = If(recDescGobal.HasValue, New ObjectParameter("RecDescGobal", recDescGobal), New ObjectParameter("RecDescGobal", GetType(Boolean)))

        Dim recargoDescParameter As ObjectParameter = If(recargoDesc.HasValue, New ObjectParameter("RecargoDesc", recargoDesc), New ObjectParameter("RecargoDesc", GetType(Boolean)))

        Dim porcRecargoParameter As ObjectParameter = If(porcRecargo.HasValue, New ObjectParameter("PorcRecargo", porcRecargo), New ObjectParameter("PorcRecargo", GetType(Decimal)))

        Dim userAutorizaParameter As ObjectParameter = If(userAutoriza.HasValue, New ObjectParameter("userAutoriza", userAutoriza), New ObjectParameter("userAutoriza", GetType(Long)))

        Dim userVendedorParameter As ObjectParameter = If(userVendedor.HasValue, New ObjectParameter("userVendedor", userVendedor), New ObjectParameter("userVendedor", GetType(Long)))

        Dim notapresupuestoParameter As ObjectParameter = If(notapresupuesto IsNot Nothing, New ObjectParameter("notapresupuesto", notapresupuesto), New ObjectParameter("notapresupuesto", GetType(String)))

        Dim anticipoParameter As ObjectParameter = If(anticipo.HasValue, New ObjectParameter("Anticipo", anticipo), New ObjectParameter("Anticipo", GetType(Boolean)))

        Dim porcAnticipoParameter As ObjectParameter = If(porcAnticipo.HasValue, New ObjectParameter("PorcAnticipo", porcAnticipo), New ObjectParameter("PorcAnticipo", GetType(Decimal)))

        Dim ofertaComercialParameter As ObjectParameter = If(ofertaComercial.HasValue, New ObjectParameter("OfertaComercial", ofertaComercial), New ObjectParameter("OfertaComercial", GetType(Boolean)))

        Dim mostrarCodigoParameter As ObjectParameter = If(mostrarCodigo.HasValue, New ObjectParameter("MostrarCodigo", mostrarCodigo), New ObjectParameter("MostrarCodigo", GetType(Boolean)))

        Dim mostrarPrecioMatParameter As ObjectParameter = If(mostrarPrecioMat.HasValue, New ObjectParameter("MostrarPrecioMat", mostrarPrecioMat), New ObjectParameter("MostrarPrecioMat", GetType(Boolean)))

        Dim mostrarPrecioManoObraParameter As ObjectParameter = If(mostrarPrecioManoObra.HasValue, New ObjectParameter("MostrarPrecioManoObra", mostrarPrecioManoObra), New ObjectParameter("MostrarPrecioManoObra", GetType(Boolean)))

        Dim mostrarSubtotalMatOCParameter As ObjectParameter = If(mostrarSubtotalMatOC.HasValue, New ObjectParameter("MostrarSubtotalMatOC", mostrarSubtotalMatOC), New ObjectParameter("MostrarSubtotalMatOC", GetType(Boolean)))

        Dim mostrarSubtotalMOOCParameter As ObjectParameter = If(mostrarSubtotalMOOC.HasValue, New ObjectParameter("MostrarSubtotalMOOC", mostrarSubtotalMOOC), New ObjectParameter("MostrarSubtotalMOOC", GetType(Boolean)))

        Dim manoObraParameter As ObjectParameter = If(manoObra.HasValue, New ObjectParameter("ManoObra", manoObra), New ObjectParameter("ManoObra", GetType(Boolean)))

        Dim subtotalOfertaComercialParameter As ObjectParameter = If(subtotalOfertaComercial.HasValue, New ObjectParameter("SubtotalOfertaComercial", subtotalOfertaComercial), New ObjectParameter("SubtotalOfertaComercial", GetType(Boolean)))

        Dim mostrarTotalParameter As ObjectParameter = If(mostrarTotal.HasValue, New ObjectParameter("MostrarTotal", mostrarTotal), New ObjectParameter("MostrarTotal", GetType(Boolean)))

        Dim mostrarPlazoEntregaParameter As ObjectParameter = If(mostrarPlazoEntrega.HasValue, New ObjectParameter("MostrarPlazoEntrega", mostrarPlazoEntrega), New ObjectParameter("MostrarPlazoEntrega", GetType(Boolean)))

        Dim nombreEstadoParameter As ObjectParameter = If(nombreEstado IsNot Nothing, New ObjectParameter("NombreEstado", nombreEstado), New ObjectParameter("NombreEstado", GetType(String)))

        Dim trafoParameter As ObjectParameter = If(trafo.HasValue, New ObjectParameter("Trafo", trafo), New ObjectParameter("Trafo", GetType(Boolean)))

        Dim cabeceraTrafoParameter As ObjectParameter = If(cabeceraTrafo IsNot Nothing, New ObjectParameter("CabeceraTrafo", cabeceraTrafo), New ObjectParameter("CabeceraTrafo", GetType(String)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("Observaciones", observaciones), New ObjectParameter("Observaciones", GetType(String)))

        Dim horasTrabajoParameter As ObjectParameter = If(horasTrabajo.HasValue, New ObjectParameter("HorasTrabajo", horasTrabajo), New ObjectParameter("HorasTrabajo", GetType(Integer)))

        Dim subtotalEnsayosParameter As ObjectParameter = If(subtotalEnsayos.HasValue, New ObjectParameter("SubtotalEnsayos", subtotalEnsayos), New ObjectParameter("SubtotalEnsayos", GetType(Decimal)))

        Dim presupuestoconWordParameter As ObjectParameter = If(presupuestoconWord.HasValue, New ObjectParameter("PresupuestoconWord", presupuestoconWord), New ObjectParameter("PresupuestoconWord", GetType(Boolean)))

        Dim garantiaParameter As ObjectParameter = If(garantia.HasValue, New ObjectParameter("garantia", garantia), New ObjectParameter("garantia", GetType(Integer)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Update", id, codigoParameter, fechaPresupuestoParameter, nombreReferenciaParameter, idClienteParameter, compradorParameter, idContacto_CompradorParameter, usuarioParameter, idContacto_UsuarioParameter, sitioEntregaParameter, idMonedaPresParameter, iva21DOParameter, iva21PEParameter, iva10DOParameter, iva10PEParameter, subtotalDOParameter, subtotalPEParameter, totalDOParameter, totalPEParameter, incluyeNotasParameter, validezParameter, idFormaPagoParameter, nroOCParameter, entregarenParameter, nroReqParameter, nroRevParameter, recDescGobalParameter, recargoDescParameter, porcRecargoParameter, userAutorizaParameter, userVendedorParameter, notapresupuestoParameter, anticipoParameter, porcAnticipoParameter, ofertaComercialParameter, mostrarCodigoParameter, mostrarPrecioMatParameter, mostrarPrecioManoObraParameter, mostrarSubtotalMatOCParameter, mostrarSubtotalMOOCParameter, manoObraParameter, subtotalOfertaComercialParameter, mostrarTotalParameter, mostrarPlazoEntregaParameter, nombreEstadoParameter, trafoParameter, cabeceraTrafoParameter, observacionesParameter, horasTrabajoParameter, subtotalEnsayosParameter, presupuestoconWordParameter, garantiaParameter, userupdParameter, res)
    End Function

    Public Overridable Function spPresupuestos_Update_Totales(idPresupuesto As Nullable(Of Long), idPresupuestoOf As Nullable(Of Long), subtotalPre As Nullable(Of Decimal), iva21DO As Nullable(Of Decimal), iva10DO As Nullable(Of Decimal), totalPre As Nullable(Of Decimal), subtotalOf As Nullable(Of Decimal), ivaOf As Nullable(Of Decimal), totalOf As Nullable(Of Decimal), res As ObjectParameter) As Integer
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim idPresupuestoOfParameter As ObjectParameter = If(idPresupuestoOf.HasValue, New ObjectParameter("IdPresupuestoOf", idPresupuestoOf), New ObjectParameter("IdPresupuestoOf", GetType(Long)))

        Dim subtotalPreParameter As ObjectParameter = If(subtotalPre.HasValue, New ObjectParameter("SubtotalPre", subtotalPre), New ObjectParameter("SubtotalPre", GetType(Decimal)))

        Dim iva21DOParameter As ObjectParameter = If(iva21DO.HasValue, New ObjectParameter("Iva21DO", iva21DO), New ObjectParameter("Iva21DO", GetType(Decimal)))

        Dim iva10DOParameter As ObjectParameter = If(iva10DO.HasValue, New ObjectParameter("Iva10DO", iva10DO), New ObjectParameter("Iva10DO", GetType(Decimal)))

        Dim totalPreParameter As ObjectParameter = If(totalPre.HasValue, New ObjectParameter("TotalPre", totalPre), New ObjectParameter("TotalPre", GetType(Decimal)))

        Dim subtotalOfParameter As ObjectParameter = If(subtotalOf.HasValue, New ObjectParameter("SubtotalOf", subtotalOf), New ObjectParameter("SubtotalOf", GetType(Decimal)))

        Dim ivaOfParameter As ObjectParameter = If(ivaOf.HasValue, New ObjectParameter("IvaOf", ivaOf), New ObjectParameter("IvaOf", GetType(Decimal)))

        Dim totalOfParameter As ObjectParameter = If(totalOf.HasValue, New ObjectParameter("TotalOf", totalOf), New ObjectParameter("TotalOf", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPresupuestos_Update_Totales", idPresupuestoParameter, idPresupuestoOfParameter, subtotalPreParameter, iva21DOParameter, iva10DOParameter, totalPreParameter, subtotalOfParameter, ivaOfParameter, totalOfParameter, res)
    End Function

    Public Overridable Function spProfesionales_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spProfesionales_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spProfesionales_Insert(id As ObjectParameter, codigo As String, nombre As String, apellido As String, direccion As String, celular As String, email As String, idLocalidad As Nullable(Of Long), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("Apellido", apellido), New ObjectParameter("Apellido", GetType(String)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("Direccion", direccion), New ObjectParameter("Direccion", GetType(String)))

        Dim celularParameter As ObjectParameter = If(celular IsNot Nothing, New ObjectParameter("Celular", celular), New ObjectParameter("Celular", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("Email", email), New ObjectParameter("Email", GetType(String)))

        Dim idLocalidadParameter As ObjectParameter = If(idLocalidad.HasValue, New ObjectParameter("IdLocalidad", idLocalidad), New ObjectParameter("IdLocalidad", GetType(Long)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spProfesionales_Insert", id, codigoParameter, nombreParameter, apellidoParameter, direccionParameter, celularParameter, emailParameter, idLocalidadParameter, useraddParameter, res)
    End Function

    Public Overridable Function spProfesionales_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spProfesionales_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spProfesionales_Select_All_Result)("spProfesionales_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spProfesionales_Update(id As ObjectParameter, codigo As String, nombre As String, apellido As String, direccion As String, celular As String, email As String, idLocalidad As Nullable(Of Long), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("Apellido", apellido), New ObjectParameter("Apellido", GetType(String)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("Direccion", direccion), New ObjectParameter("Direccion", GetType(String)))

        Dim celularParameter As ObjectParameter = If(celular IsNot Nothing, New ObjectParameter("Celular", celular), New ObjectParameter("Celular", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("Email", email), New ObjectParameter("Email", GetType(String)))

        Dim idLocalidadParameter As ObjectParameter = If(idLocalidad.HasValue, New ObjectParameter("IdLocalidad", idLocalidad), New ObjectParameter("IdLocalidad", GetType(Long)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spProfesionales_Update", id, codigoParameter, nombreParameter, apellidoParameter, direccionParameter, celularParameter, emailParameter, idLocalidadParameter, userupdParameter, res)
    End Function

    Public Overridable Function spPromociones_Det_Select_By_IDPromociones(idPromociones As String) As ObjectResult(Of spPromociones_Det_Select_By_IDPromociones_Result)
        Dim idPromocionesParameter As ObjectParameter = If(idPromociones IsNot Nothing, New ObjectParameter("IdPromociones", idPromociones), New ObjectParameter("IdPromociones", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPromociones_Det_Select_By_IDPromociones_Result)("spPromociones_Det_Select_By_IDPromociones", idPromocionesParameter)
    End Function

    Public Overridable Function spPromociones_Porkys_Activar(codigo As String, userupd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPromociones_Porkys_Activar", codigoParameter, userupdParameter, res)
    End Function

    Public Overridable Function spPromociones_Porkys_Buscar(iDMATERIAL As String, cANTIDAD As Nullable(Of Decimal), dESCRIPCION As ObjectParameter, pRECIO As ObjectParameter, dESCUENTO As ObjectParameter, rES As ObjectParameter) As ObjectResult(Of Nullable(Of Decimal))
        Dim iDMATERIALParameter As ObjectParameter = If(iDMATERIAL IsNot Nothing, New ObjectParameter("IDMATERIAL", iDMATERIAL), New ObjectParameter("IDMATERIAL", GetType(String)))

        Dim cANTIDADParameter As ObjectParameter = If(cANTIDAD.HasValue, New ObjectParameter("CANTIDAD", cANTIDAD), New ObjectParameter("CANTIDAD", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Decimal))("spPromociones_Porkys_Buscar", iDMATERIALParameter, cANTIDADParameter, dESCRIPCION, pRECIO, dESCUENTO, rES)
    End Function

    Public Overridable Function spPromociones_Porkys_Delete(codigo As String, userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPromociones_Porkys_Delete", codigoParameter, userdelParameter, res)
    End Function

    Public Overridable Function spPromociones_Porkys_Det_Insert(id As ObjectParameter, iDPROMOCIONESPORKYS As String, iDMATERIAL As String, iDLISTA1 As Nullable(Of Long), cANTIDAD1 As Nullable(Of Decimal), dESCUENTO1 As Nullable(Of Decimal), iDLISTA2 As Nullable(Of Long), cANTIDAD2 As Nullable(Of Decimal), dESCUENTO2 As Nullable(Of Decimal), oRDENITEM As Nullable(Of Short), uSERADD As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim iDPROMOCIONESPORKYSParameter As ObjectParameter = If(iDPROMOCIONESPORKYS IsNot Nothing, New ObjectParameter("IDPROMOCIONESPORKYS", iDPROMOCIONESPORKYS), New ObjectParameter("IDPROMOCIONESPORKYS", GetType(String)))

        Dim iDMATERIALParameter As ObjectParameter = If(iDMATERIAL IsNot Nothing, New ObjectParameter("IDMATERIAL", iDMATERIAL), New ObjectParameter("IDMATERIAL", GetType(String)))

        Dim iDLISTA1Parameter As ObjectParameter = If(iDLISTA1.HasValue, New ObjectParameter("IDLISTA1", iDLISTA1), New ObjectParameter("IDLISTA1", GetType(Long)))

        Dim cANTIDAD1Parameter As ObjectParameter = If(cANTIDAD1.HasValue, New ObjectParameter("CANTIDAD1", cANTIDAD1), New ObjectParameter("CANTIDAD1", GetType(Decimal)))

        Dim dESCUENTO1Parameter As ObjectParameter = If(dESCUENTO1.HasValue, New ObjectParameter("DESCUENTO1", dESCUENTO1), New ObjectParameter("DESCUENTO1", GetType(Decimal)))

        Dim iDLISTA2Parameter As ObjectParameter = If(iDLISTA2.HasValue, New ObjectParameter("IDLISTA2", iDLISTA2), New ObjectParameter("IDLISTA2", GetType(Long)))

        Dim cANTIDAD2Parameter As ObjectParameter = If(cANTIDAD2.HasValue, New ObjectParameter("CANTIDAD2", cANTIDAD2), New ObjectParameter("CANTIDAD2", GetType(Decimal)))

        Dim dESCUENTO2Parameter As ObjectParameter = If(dESCUENTO2.HasValue, New ObjectParameter("DESCUENTO2", dESCUENTO2), New ObjectParameter("DESCUENTO2", GetType(Decimal)))

        Dim oRDENITEMParameter As ObjectParameter = If(oRDENITEM.HasValue, New ObjectParameter("ORDENITEM", oRDENITEM), New ObjectParameter("ORDENITEM", GetType(Short)))

        Dim uSERADDParameter As ObjectParameter = If(uSERADD.HasValue, New ObjectParameter("USERADD", uSERADD), New ObjectParameter("USERADD", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPromociones_Porkys_Det_Insert", id, iDPROMOCIONESPORKYSParameter, iDMATERIALParameter, iDLISTA1Parameter, cANTIDAD1Parameter, dESCUENTO1Parameter, iDLISTA2Parameter, cANTIDAD2Parameter, dESCUENTO2Parameter, oRDENITEMParameter, uSERADDParameter, res)
    End Function

    Public Overridable Function spPromociones_Porkys_Det_Update(id As ObjectParameter, iDPROMOCIONESPORKYS As String, iDMATERIAL As String, iDLISTA1 As Nullable(Of Long), cANTIDAD1 As Nullable(Of Decimal), dESCUENTO1 As Nullable(Of Decimal), iDLISTA2 As Nullable(Of Long), cANTIDAD2 As Nullable(Of Decimal), dESCUENTO2 As Nullable(Of Decimal), oRDENITEM As Nullable(Of Short), eLIMINADO As Nullable(Of Boolean), uSERUPD As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim iDPROMOCIONESPORKYSParameter As ObjectParameter = If(iDPROMOCIONESPORKYS IsNot Nothing, New ObjectParameter("IDPROMOCIONESPORKYS", iDPROMOCIONESPORKYS), New ObjectParameter("IDPROMOCIONESPORKYS", GetType(String)))

        Dim iDMATERIALParameter As ObjectParameter = If(iDMATERIAL IsNot Nothing, New ObjectParameter("IDMATERIAL", iDMATERIAL), New ObjectParameter("IDMATERIAL", GetType(String)))

        Dim iDLISTA1Parameter As ObjectParameter = If(iDLISTA1.HasValue, New ObjectParameter("IDLISTA1", iDLISTA1), New ObjectParameter("IDLISTA1", GetType(Long)))

        Dim cANTIDAD1Parameter As ObjectParameter = If(cANTIDAD1.HasValue, New ObjectParameter("CANTIDAD1", cANTIDAD1), New ObjectParameter("CANTIDAD1", GetType(Decimal)))

        Dim dESCUENTO1Parameter As ObjectParameter = If(dESCUENTO1.HasValue, New ObjectParameter("DESCUENTO1", dESCUENTO1), New ObjectParameter("DESCUENTO1", GetType(Decimal)))

        Dim iDLISTA2Parameter As ObjectParameter = If(iDLISTA2.HasValue, New ObjectParameter("IDLISTA2", iDLISTA2), New ObjectParameter("IDLISTA2", GetType(Long)))

        Dim cANTIDAD2Parameter As ObjectParameter = If(cANTIDAD2.HasValue, New ObjectParameter("CANTIDAD2", cANTIDAD2), New ObjectParameter("CANTIDAD2", GetType(Decimal)))

        Dim dESCUENTO2Parameter As ObjectParameter = If(dESCUENTO2.HasValue, New ObjectParameter("DESCUENTO2", dESCUENTO2), New ObjectParameter("DESCUENTO2", GetType(Decimal)))

        Dim oRDENITEMParameter As ObjectParameter = If(oRDENITEM.HasValue, New ObjectParameter("ORDENITEM", oRDENITEM), New ObjectParameter("ORDENITEM", GetType(Short)))

        Dim eLIMINADOParameter As ObjectParameter = If(eLIMINADO.HasValue, New ObjectParameter("ELIMINADO", eLIMINADO), New ObjectParameter("ELIMINADO", GetType(Boolean)))

        Dim uSERUPDParameter As ObjectParameter = If(uSERUPD.HasValue, New ObjectParameter("USERUPD", uSERUPD), New ObjectParameter("USERUPD", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPromociones_Porkys_Det_Update", id, iDPROMOCIONESPORKYSParameter, iDMATERIALParameter, iDLISTA1Parameter, cANTIDAD1Parameter, dESCUENTO1Parameter, iDLISTA2Parameter, cANTIDAD2Parameter, dESCUENTO2Parameter, oRDENITEMParameter, eLIMINADOParameter, uSERUPDParameter, res)
    End Function

    Public Overridable Function spPromociones_Porkys_Insert(id As ObjectParameter, codigo As ObjectParameter, iDAlmacen As Nullable(Of Long), descripcion As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim iDAlmacenParameter As ObjectParameter = If(iDAlmacen.HasValue, New ObjectParameter("IDAlmacen", iDAlmacen), New ObjectParameter("IDAlmacen", GetType(Long)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPromociones_Porkys_Insert", id, codigo, iDAlmacenParameter, descripcionParameter, useraddParameter, res)
    End Function

    Public Overridable Function spPromociones_Porkys_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spPromociones_Porkys_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPromociones_Porkys_Select_All_Result)("spPromociones_Porkys_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spPromociones_Porkys_Update(id As ObjectParameter, codigo As String, iDAlmacen As Nullable(Of Long), idMaterial As String, descripcion As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Dim iDAlmacenParameter As ObjectParameter = If(iDAlmacen.HasValue, New ObjectParameter("IDAlmacen", iDAlmacen), New ObjectParameter("IDAlmacen", GetType(Long)))

        Dim idMaterialParameter As ObjectParameter = If(idMaterial IsNot Nothing, New ObjectParameter("IdMaterial", idMaterial), New ObjectParameter("IdMaterial", GetType(String)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spPromociones_Porkys_Update", id, codigoParameter, iDAlmacenParameter, idMaterialParameter, descripcionParameter, userupdParameter, res)
    End Function

    Public Overridable Function spProveedores_Delete(id As Nullable(Of Integer), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spProveedores_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spProveedores_Insert(id As ObjectParameter, nombre As String, direccion As String, codpostal As String, localidad As String, provincia As String, tipoDoc As Nullable(Of Integer), cUIT As Nullable(Of Long), telefono As String, fax As String, email As String, contacto As String, bonificacion As Nullable(Of Decimal), ganancia As Nullable(Of Decimal), deservicio As Nullable(Of Boolean), flete As Nullable(Of Boolean), controlarGasto As Nullable(Of Boolean), montoControl As Nullable(Of Decimal), useradd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("direccion", direccion), New ObjectParameter("direccion", GetType(String)))

        Dim codpostalParameter As ObjectParameter = If(codpostal IsNot Nothing, New ObjectParameter("codpostal", codpostal), New ObjectParameter("codpostal", GetType(String)))

        Dim localidadParameter As ObjectParameter = If(localidad IsNot Nothing, New ObjectParameter("localidad", localidad), New ObjectParameter("localidad", GetType(String)))

        Dim provinciaParameter As ObjectParameter = If(provincia IsNot Nothing, New ObjectParameter("provincia", provincia), New ObjectParameter("provincia", GetType(String)))

        Dim tipoDocParameter As ObjectParameter = If(tipoDoc.HasValue, New ObjectParameter("TipoDoc", tipoDoc), New ObjectParameter("TipoDoc", GetType(Integer)))

        Dim cUITParameter As ObjectParameter = If(cUIT.HasValue, New ObjectParameter("CUIT", cUIT), New ObjectParameter("CUIT", GetType(Long)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("telefono", telefono), New ObjectParameter("telefono", GetType(String)))

        Dim faxParameter As ObjectParameter = If(fax IsNot Nothing, New ObjectParameter("fax", fax), New ObjectParameter("fax", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("email", email), New ObjectParameter("email", GetType(String)))

        Dim contactoParameter As ObjectParameter = If(contacto IsNot Nothing, New ObjectParameter("contacto", contacto), New ObjectParameter("contacto", GetType(String)))

        Dim bonificacionParameter As ObjectParameter = If(bonificacion.HasValue, New ObjectParameter("bonificacion", bonificacion), New ObjectParameter("bonificacion", GetType(Decimal)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("ganancia", ganancia), New ObjectParameter("ganancia", GetType(Decimal)))

        Dim deservicioParameter As ObjectParameter = If(deservicio.HasValue, New ObjectParameter("deservicio", deservicio), New ObjectParameter("deservicio", GetType(Boolean)))

        Dim fleteParameter As ObjectParameter = If(flete.HasValue, New ObjectParameter("flete", flete), New ObjectParameter("flete", GetType(Boolean)))

        Dim controlarGastoParameter As ObjectParameter = If(controlarGasto.HasValue, New ObjectParameter("ControlarGasto", controlarGasto), New ObjectParameter("ControlarGasto", GetType(Boolean)))

        Dim montoControlParameter As ObjectParameter = If(montoControl.HasValue, New ObjectParameter("MontoControl", montoControl), New ObjectParameter("MontoControl", GetType(Decimal)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spProveedores_Insert", id, nombreParameter, direccionParameter, codpostalParameter, localidadParameter, provinciaParameter, tipoDocParameter, cUITParameter, telefonoParameter, faxParameter, emailParameter, contactoParameter, bonificacionParameter, gananciaParameter, deservicioParameter, fleteParameter, controlarGastoParameter, montoControlParameter, useraddParameter, res)
    End Function

    Public Overridable Function spProveedores_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spProveedores_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spProveedores_Select_All_Result)("spProveedores_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spProveedores_Update(id As Nullable(Of Long), nombre As String, direccion As String, codpostal As String, localidad As String, provincia As String, tipoDoc As Nullable(Of Integer), cUIT As Nullable(Of Long), telefono As String, fax As String, email As String, contacto As String, bonificacion As Nullable(Of Decimal), ganancia As Nullable(Of Decimal), deservicio As Nullable(Of Boolean), flete As Nullable(Of Boolean), controlarGasto As Nullable(Of Boolean), montoControl As Nullable(Of Decimal), userupd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("direccion", direccion), New ObjectParameter("direccion", GetType(String)))

        Dim codpostalParameter As ObjectParameter = If(codpostal IsNot Nothing, New ObjectParameter("codpostal", codpostal), New ObjectParameter("codpostal", GetType(String)))

        Dim localidadParameter As ObjectParameter = If(localidad IsNot Nothing, New ObjectParameter("localidad", localidad), New ObjectParameter("localidad", GetType(String)))

        Dim provinciaParameter As ObjectParameter = If(provincia IsNot Nothing, New ObjectParameter("provincia", provincia), New ObjectParameter("provincia", GetType(String)))

        Dim tipoDocParameter As ObjectParameter = If(tipoDoc.HasValue, New ObjectParameter("TipoDoc", tipoDoc), New ObjectParameter("TipoDoc", GetType(Integer)))

        Dim cUITParameter As ObjectParameter = If(cUIT.HasValue, New ObjectParameter("CUIT", cUIT), New ObjectParameter("CUIT", GetType(Long)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("telefono", telefono), New ObjectParameter("telefono", GetType(String)))

        Dim faxParameter As ObjectParameter = If(fax IsNot Nothing, New ObjectParameter("fax", fax), New ObjectParameter("fax", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("email", email), New ObjectParameter("email", GetType(String)))

        Dim contactoParameter As ObjectParameter = If(contacto IsNot Nothing, New ObjectParameter("contacto", contacto), New ObjectParameter("contacto", GetType(String)))

        Dim bonificacionParameter As ObjectParameter = If(bonificacion.HasValue, New ObjectParameter("bonificacion", bonificacion), New ObjectParameter("bonificacion", GetType(Decimal)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("ganancia", ganancia), New ObjectParameter("ganancia", GetType(Decimal)))

        Dim deservicioParameter As ObjectParameter = If(deservicio.HasValue, New ObjectParameter("deservicio", deservicio), New ObjectParameter("deservicio", GetType(Boolean)))

        Dim fleteParameter As ObjectParameter = If(flete.HasValue, New ObjectParameter("flete", flete), New ObjectParameter("flete", GetType(Boolean)))

        Dim controlarGastoParameter As ObjectParameter = If(controlarGasto.HasValue, New ObjectParameter("ControlarGasto", controlarGasto), New ObjectParameter("ControlarGasto", GetType(Boolean)))

        Dim montoControlParameter As ObjectParameter = If(montoControl.HasValue, New ObjectParameter("MontoControl", montoControl), New ObjectParameter("MontoControl", GetType(Decimal)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spProveedores_Update", idParameter, nombreParameter, direccionParameter, codpostalParameter, localidadParameter, provinciaParameter, tipoDocParameter, cUITParameter, telefonoParameter, faxParameter, emailParameter, contactoParameter, bonificacionParameter, gananciaParameter, deservicioParameter, fleteParameter, controlarGastoParameter, montoControlParameter, userupdParameter, res)
    End Function

    Public Overridable Function spRecepciones_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRecepciones_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spRecepciones_Delete_All(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRecepciones_Delete_All", idParameter, userdelParameter, res, mensaje)
    End Function

    Public Overridable Function spRecepciones_Det_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRecepciones_Det_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spRecepciones_Det_Insert(id As ObjectParameter, codigo As ObjectParameter, idrecepcion As Nullable(Of Long), idmaterial As Nullable(Of Long), qty As Nullable(Of Decimal), idunidad As Nullable(Of Long), idalmacen As Nullable(Of Long), lote As Nullable(Of Long), manejalote As Nullable(Of Boolean), loteproveed As String, remito As String, useradd As Nullable(Of Long), idordendecompra As Nullable(Of Long), idordendecompradet As Nullable(Of Long), res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim idrecepcionParameter As ObjectParameter = If(idrecepcion.HasValue, New ObjectParameter("idrecepcion", idrecepcion), New ObjectParameter("idrecepcion", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim idalmacenParameter As ObjectParameter = If(idalmacen.HasValue, New ObjectParameter("idalmacen", idalmacen), New ObjectParameter("idalmacen", GetType(Long)))

        Dim loteParameter As ObjectParameter = If(lote.HasValue, New ObjectParameter("lote", lote), New ObjectParameter("lote", GetType(Long)))

        Dim manejaloteParameter As ObjectParameter = If(manejalote.HasValue, New ObjectParameter("manejalote", manejalote), New ObjectParameter("manejalote", GetType(Boolean)))

        Dim loteproveedParameter As ObjectParameter = If(loteproveed IsNot Nothing, New ObjectParameter("loteproveed", loteproveed), New ObjectParameter("loteproveed", GetType(String)))

        Dim remitoParameter As ObjectParameter = If(remito IsNot Nothing, New ObjectParameter("remito", remito), New ObjectParameter("remito", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Dim idordendecompraParameter As ObjectParameter = If(idordendecompra.HasValue, New ObjectParameter("idordendecompra", idordendecompra), New ObjectParameter("idordendecompra", GetType(Long)))

        Dim idordendecompradetParameter As ObjectParameter = If(idordendecompradet.HasValue, New ObjectParameter("idordendecompradet", idordendecompradet), New ObjectParameter("idordendecompradet", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRecepciones_Det_Insert", id, codigo, idrecepcionParameter, idmaterialParameter, qtyParameter, idunidadParameter, idalmacenParameter, loteParameter, manejaloteParameter, loteproveedParameter, remitoParameter, useraddParameter, idordendecompraParameter, idordendecompradetParameter, res, mensaje)
    End Function

    Public Overridable Function spRecepciones_Det_Insert2(id As ObjectParameter, codigo As ObjectParameter, idAlmacen As Nullable(Of Double), idrecepcion As Nullable(Of Long), idmaterial As String, idMaterial_prov As Nullable(Of Long), codigo_Mat_Prov As String, idProveedor As String, qty As Nullable(Of Decimal), idunidad As String, remito As String, useradd As Nullable(Of Long), nuevo As Nullable(Of Boolean), idordendecompra As Nullable(Of Long), idordendecompradet As Nullable(Of Long), material As String, idMoneda As Nullable(Of Long), bonif1 As Nullable(Of Decimal), bonif2 As Nullable(Of Decimal), bonif3 As Nullable(Of Decimal), bonif4 As Nullable(Of Decimal), bonif5 As Nullable(Of Decimal), ganancia As Nullable(Of Decimal), pesoxUnidad As Nullable(Of Decimal), precioLista As Nullable(Of Decimal), preciocosto As Nullable(Of Decimal), precioventa As Nullable(Of Decimal), iva As Nullable(Of Decimal), actualizarPrecio As Nullable(Of Boolean), precioRevendedor As Nullable(Of Decimal), precioYamila As Nullable(Of Decimal), precioLista4 As Nullable(Of Decimal), precioPeron As Nullable(Of Decimal), precioMayoristaPeron As Nullable(Of Decimal), idStockMov As ObjectParameter, comprob As ObjectParameter, stock As ObjectParameter, res As ObjectParameter, mensaje As ObjectParameter) As ObjectResult(Of String)
        Dim idAlmacenParameter As ObjectParameter = If(idAlmacen.HasValue, New ObjectParameter("IdAlmacen", idAlmacen), New ObjectParameter("IdAlmacen", GetType(Double)))

        Dim idrecepcionParameter As ObjectParameter = If(idrecepcion.HasValue, New ObjectParameter("idrecepcion", idrecepcion), New ObjectParameter("idrecepcion", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial IsNot Nothing, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(String)))

        Dim idMaterial_provParameter As ObjectParameter = If(idMaterial_prov.HasValue, New ObjectParameter("IdMaterial_prov", idMaterial_prov), New ObjectParameter("IdMaterial_prov", GetType(Long)))

        Dim codigo_Mat_ProvParameter As ObjectParameter = If(codigo_Mat_Prov IsNot Nothing, New ObjectParameter("Codigo_Mat_Prov", codigo_Mat_Prov), New ObjectParameter("Codigo_Mat_Prov", GetType(String)))

        Dim idProveedorParameter As ObjectParameter = If(idProveedor IsNot Nothing, New ObjectParameter("IdProveedor", idProveedor), New ObjectParameter("IdProveedor", GetType(String)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad IsNot Nothing, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(String)))

        Dim remitoParameter As ObjectParameter = If(remito IsNot Nothing, New ObjectParameter("remito", remito), New ObjectParameter("remito", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Dim nuevoParameter As ObjectParameter = If(nuevo.HasValue, New ObjectParameter("Nuevo", nuevo), New ObjectParameter("Nuevo", GetType(Boolean)))

        Dim idordendecompraParameter As ObjectParameter = If(idordendecompra.HasValue, New ObjectParameter("idordendecompra", idordendecompra), New ObjectParameter("idordendecompra", GetType(Long)))

        Dim idordendecompradetParameter As ObjectParameter = If(idordendecompradet.HasValue, New ObjectParameter("idordendecompradet", idordendecompradet), New ObjectParameter("idordendecompradet", GetType(Long)))

        Dim materialParameter As ObjectParameter = If(material IsNot Nothing, New ObjectParameter("Material", material), New ObjectParameter("Material", GetType(String)))

        Dim idMonedaParameter As ObjectParameter = If(idMoneda.HasValue, New ObjectParameter("IdMoneda", idMoneda), New ObjectParameter("IdMoneda", GetType(Long)))

        Dim bonif1Parameter As ObjectParameter = If(bonif1.HasValue, New ObjectParameter("bonif1", bonif1), New ObjectParameter("bonif1", GetType(Decimal)))

        Dim bonif2Parameter As ObjectParameter = If(bonif2.HasValue, New ObjectParameter("bonif2", bonif2), New ObjectParameter("bonif2", GetType(Decimal)))

        Dim bonif3Parameter As ObjectParameter = If(bonif3.HasValue, New ObjectParameter("bonif3", bonif3), New ObjectParameter("bonif3", GetType(Decimal)))

        Dim bonif4Parameter As ObjectParameter = If(bonif4.HasValue, New ObjectParameter("bonif4", bonif4), New ObjectParameter("bonif4", GetType(Decimal)))

        Dim bonif5Parameter As ObjectParameter = If(bonif5.HasValue, New ObjectParameter("bonif5", bonif5), New ObjectParameter("bonif5", GetType(Decimal)))

        Dim gananciaParameter As ObjectParameter = If(ganancia.HasValue, New ObjectParameter("ganancia", ganancia), New ObjectParameter("ganancia", GetType(Decimal)))

        Dim pesoxUnidadParameter As ObjectParameter = If(pesoxUnidad.HasValue, New ObjectParameter("PesoxUnidad", pesoxUnidad), New ObjectParameter("PesoxUnidad", GetType(Decimal)))

        Dim precioListaParameter As ObjectParameter = If(precioLista.HasValue, New ObjectParameter("PrecioLista", precioLista), New ObjectParameter("PrecioLista", GetType(Decimal)))

        Dim preciocostoParameter As ObjectParameter = If(preciocosto.HasValue, New ObjectParameter("Preciocosto", preciocosto), New ObjectParameter("Preciocosto", GetType(Decimal)))

        Dim precioventaParameter As ObjectParameter = If(precioventa.HasValue, New ObjectParameter("precioventa", precioventa), New ObjectParameter("precioventa", GetType(Decimal)))

        Dim ivaParameter As ObjectParameter = If(iva.HasValue, New ObjectParameter("Iva", iva), New ObjectParameter("Iva", GetType(Decimal)))

        Dim actualizarPrecioParameter As ObjectParameter = If(actualizarPrecio.HasValue, New ObjectParameter("ActualizarPrecio", actualizarPrecio), New ObjectParameter("ActualizarPrecio", GetType(Boolean)))

        Dim precioRevendedorParameter As ObjectParameter = If(precioRevendedor.HasValue, New ObjectParameter("PrecioRevendedor", precioRevendedor), New ObjectParameter("PrecioRevendedor", GetType(Decimal)))

        Dim precioYamilaParameter As ObjectParameter = If(precioYamila.HasValue, New ObjectParameter("PrecioYamila", precioYamila), New ObjectParameter("PrecioYamila", GetType(Decimal)))

        Dim precioLista4Parameter As ObjectParameter = If(precioLista4.HasValue, New ObjectParameter("PrecioLista4", precioLista4), New ObjectParameter("PrecioLista4", GetType(Decimal)))

        Dim precioPeronParameter As ObjectParameter = If(precioPeron.HasValue, New ObjectParameter("PrecioPeron", precioPeron), New ObjectParameter("PrecioPeron", GetType(Decimal)))

        Dim precioMayoristaPeronParameter As ObjectParameter = If(precioMayoristaPeron.HasValue, New ObjectParameter("PrecioMayoristaPeron", precioMayoristaPeron), New ObjectParameter("PrecioMayoristaPeron", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spRecepciones_Det_Insert2", id, codigo, idAlmacenParameter, idrecepcionParameter, idmaterialParameter, idMaterial_provParameter, codigo_Mat_ProvParameter, idProveedorParameter, qtyParameter, idunidadParameter, remitoParameter, useraddParameter, nuevoParameter, idordendecompraParameter, idordendecompradetParameter, materialParameter, idMonedaParameter, bonif1Parameter, bonif2Parameter, bonif3Parameter, bonif4Parameter, bonif5Parameter, gananciaParameter, pesoxUnidadParameter, precioListaParameter, preciocostoParameter, precioventaParameter, ivaParameter, actualizarPrecioParameter, precioRevendedorParameter, precioYamilaParameter, precioLista4Parameter, precioPeronParameter, precioMayoristaPeronParameter, idStockMov, comprob, stock, res, mensaje)
    End Function

    Public Overridable Function spRecepciones_Det_Select_By_IDOrdenDeCompra(idOrdenDeCompra As Nullable(Of Long)) As ObjectResult(Of spRecepciones_Det_Select_By_IDOrdenDeCompra_Result)
        Dim idOrdenDeCompraParameter As ObjectParameter = If(idOrdenDeCompra.HasValue, New ObjectParameter("IdOrdenDeCompra", idOrdenDeCompra), New ObjectParameter("IdOrdenDeCompra", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRecepciones_Det_Select_By_IDOrdenDeCompra_Result)("spRecepciones_Det_Select_By_IDOrdenDeCompra", idOrdenDeCompraParameter)
    End Function

    Public Overridable Function spRecepciones_Det_Select_By_IDRecepcion(iDRecepcion As Nullable(Of Long)) As ObjectResult(Of spRecepciones_Det_Select_By_IDRecepcion_Result)
        Dim iDRecepcionParameter As ObjectParameter = If(iDRecepcion.HasValue, New ObjectParameter("IDRecepcion", iDRecepcion), New ObjectParameter("IDRecepcion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRecepciones_Det_Select_By_IDRecepcion_Result)("spRecepciones_Det_Select_By_IDRecepcion", iDRecepcionParameter)
    End Function

    Public Overridable Function spRecepciones_Det_Update(id As Nullable(Of Long), codigo As String, idrecepcion As Nullable(Of Long), idmaterial As Nullable(Of Long), lote As Nullable(Of Long), loteproveed As String, qty As Nullable(Of Decimal), idunidad As Nullable(Of Long), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim idrecepcionParameter As ObjectParameter = If(idrecepcion.HasValue, New ObjectParameter("idrecepcion", idrecepcion), New ObjectParameter("idrecepcion", GetType(Long)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Long)))

        Dim loteParameter As ObjectParameter = If(lote.HasValue, New ObjectParameter("lote", lote), New ObjectParameter("lote", GetType(Long)))

        Dim loteproveedParameter As ObjectParameter = If(loteproveed IsNot Nothing, New ObjectParameter("loteproveed", loteproveed), New ObjectParameter("loteproveed", GetType(String)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad.HasValue, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(Long)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRecepciones_Det_Update", idParameter, codigoParameter, idrecepcionParameter, idmaterialParameter, loteParameter, loteproveedParameter, qtyParameter, idunidadParameter, userupdParameter, res)
    End Function

    Public Overridable Function spRecepciones_FacturasAsociadas_Insert(idRecepcion As Nullable(Of Long), idGasto As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idRecepcionParameter As ObjectParameter = If(idRecepcion.HasValue, New ObjectParameter("IdRecepcion", idRecepcion), New ObjectParameter("IdRecepcion", GetType(Long)))

        Dim idGastoParameter As ObjectParameter = If(idGasto.HasValue, New ObjectParameter("IdGasto", idGasto), New ObjectParameter("IdGasto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRecepciones_FacturasAsociadas_Insert", idRecepcionParameter, idGastoParameter, res)
    End Function

    Public Overridable Function spRecepciones_Insert(id As ObjectParameter, codigo As ObjectParameter, idAlmacen As Nullable(Of Double), idMoneda As Nullable(Of Long), idOC As Nullable(Of Long), nroOc As String, pendienteGasto As Nullable(Of Boolean), fecha As Nullable(Of Date), idproveedor As String, comprobanteTipo As String, ptoVtaRemito As String, nroComprRemito As String, nroRemito As String, nroFactura As String, nota As String, asociarGasto As Nullable(Of Boolean), idGastoAsociar As Nullable(Of Long), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idAlmacenParameter As ObjectParameter = If(idAlmacen.HasValue, New ObjectParameter("IdAlmacen", idAlmacen), New ObjectParameter("IdAlmacen", GetType(Double)))

        Dim idMonedaParameter As ObjectParameter = If(idMoneda.HasValue, New ObjectParameter("IdMoneda", idMoneda), New ObjectParameter("IdMoneda", GetType(Long)))

        Dim idOCParameter As ObjectParameter = If(idOC.HasValue, New ObjectParameter("IdOC", idOC), New ObjectParameter("IdOC", GetType(Long)))

        Dim nroOcParameter As ObjectParameter = If(nroOc IsNot Nothing, New ObjectParameter("NroOc", nroOc), New ObjectParameter("NroOc", GetType(String)))

        Dim pendienteGastoParameter As ObjectParameter = If(pendienteGasto.HasValue, New ObjectParameter("PendienteGasto", pendienteGasto), New ObjectParameter("PendienteGasto", GetType(Boolean)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Dim idproveedorParameter As ObjectParameter = If(idproveedor IsNot Nothing, New ObjectParameter("idproveedor", idproveedor), New ObjectParameter("idproveedor", GetType(String)))

        Dim comprobanteTipoParameter As ObjectParameter = If(comprobanteTipo IsNot Nothing, New ObjectParameter("ComprobanteTipo", comprobanteTipo), New ObjectParameter("ComprobanteTipo", GetType(String)))

        Dim ptoVtaRemitoParameter As ObjectParameter = If(ptoVtaRemito IsNot Nothing, New ObjectParameter("PtoVtaRemito", ptoVtaRemito), New ObjectParameter("PtoVtaRemito", GetType(String)))

        Dim nroComprRemitoParameter As ObjectParameter = If(nroComprRemito IsNot Nothing, New ObjectParameter("NroComprRemito", nroComprRemito), New ObjectParameter("NroComprRemito", GetType(String)))

        Dim nroRemitoParameter As ObjectParameter = If(nroRemito IsNot Nothing, New ObjectParameter("NroRemito", nroRemito), New ObjectParameter("NroRemito", GetType(String)))

        Dim nroFacturaParameter As ObjectParameter = If(nroFactura IsNot Nothing, New ObjectParameter("NroFactura", nroFactura), New ObjectParameter("NroFactura", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim asociarGastoParameter As ObjectParameter = If(asociarGasto.HasValue, New ObjectParameter("AsociarGasto", asociarGasto), New ObjectParameter("AsociarGasto", GetType(Boolean)))

        Dim idGastoAsociarParameter As ObjectParameter = If(idGastoAsociar.HasValue, New ObjectParameter("IdGastoAsociar", idGastoAsociar), New ObjectParameter("IdGastoAsociar", GetType(Long)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRecepciones_Insert", id, codigo, idAlmacenParameter, idMonedaParameter, idOCParameter, nroOcParameter, pendienteGastoParameter, fechaParameter, idproveedorParameter, comprobanteTipoParameter, ptoVtaRemitoParameter, nroComprRemitoParameter, nroRemitoParameter, nroFacturaParameter, notaParameter, asociarGastoParameter, idGastoAsociarParameter, useraddParameter, res)
    End Function

    Public Overridable Function spRecepciones_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spRecepciones_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRecepciones_Select_All_Result)("spRecepciones_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spRecepciones_Update(id As Nullable(Of Long), idProveedor As String, controlRemito As Nullable(Of Boolean), controlFactura As Nullable(Of Boolean), fecha As Nullable(Of Date), ptoVtaRemito As String, nroComprRemito As String, nroRemito As String, nroFactura As String, nota As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim idProveedorParameter As ObjectParameter = If(idProveedor IsNot Nothing, New ObjectParameter("IdProveedor", idProveedor), New ObjectParameter("IdProveedor", GetType(String)))

        Dim controlRemitoParameter As ObjectParameter = If(controlRemito.HasValue, New ObjectParameter("ControlRemito", controlRemito), New ObjectParameter("ControlRemito", GetType(Boolean)))

        Dim controlFacturaParameter As ObjectParameter = If(controlFactura.HasValue, New ObjectParameter("ControlFactura", controlFactura), New ObjectParameter("ControlFactura", GetType(Boolean)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim ptoVtaRemitoParameter As ObjectParameter = If(ptoVtaRemito IsNot Nothing, New ObjectParameter("PtoVtaRemito", ptoVtaRemito), New ObjectParameter("PtoVtaRemito", GetType(String)))

        Dim nroComprRemitoParameter As ObjectParameter = If(nroComprRemito IsNot Nothing, New ObjectParameter("NroComprRemito", nroComprRemito), New ObjectParameter("NroComprRemito", GetType(String)))

        Dim nroRemitoParameter As ObjectParameter = If(nroRemito IsNot Nothing, New ObjectParameter("NroRemito", nroRemito), New ObjectParameter("NroRemito", GetType(String)))

        Dim nroFacturaParameter As ObjectParameter = If(nroFactura IsNot Nothing, New ObjectParameter("NroFactura", nroFactura), New ObjectParameter("NroFactura", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRecepciones_Update", idParameter, idProveedorParameter, controlRemitoParameter, controlFacturaParameter, fechaParameter, ptoVtaRemitoParameter, nroComprRemitoParameter, nroRemitoParameter, nroFacturaParameter, notaParameter, userupdParameter, res)
    End Function

    Public Overridable Function spReducirBase() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spReducirBase")
    End Function

    Public Overridable Function spRemitos_Delete_tmp() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRemitos_Delete_tmp")
    End Function

    Public Overridable Function spRemitos_Insert_tmp(idPresupuesto As Nullable(Of Long)) As Integer
        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRemitos_Insert_tmp", idPresupuestoParameter)
    End Function

    Public Overridable Function spRemitos_por_Presupuesto(idCliente As Nullable(Of Long), modo As Nullable(Of Boolean), idFacturacion As Nullable(Of Long), idFacturaAnulada As Nullable(Of Long)) As ObjectResult(Of spRemitos_por_Presupuesto_Result)
        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim modoParameter As ObjectParameter = If(modo.HasValue, New ObjectParameter("Modo", modo), New ObjectParameter("Modo", GetType(Boolean)))

        Dim idFacturacionParameter As ObjectParameter = If(idFacturacion.HasValue, New ObjectParameter("IdFacturacion", idFacturacion), New ObjectParameter("IdFacturacion", GetType(Long)))

        Dim idFacturaAnuladaParameter As ObjectParameter = If(idFacturaAnulada.HasValue, New ObjectParameter("IdFacturaAnulada", idFacturaAnulada), New ObjectParameter("IdFacturaAnulada", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRemitos_por_Presupuesto_Result)("spRemitos_por_Presupuesto", idClienteParameter, modoParameter, idFacturacionParameter, idFacturaAnuladaParameter)
    End Function

    Public Overridable Function spRemitos_VerificarsiExiste(nroRemito As String, res As ObjectParameter) As Integer
        Dim nroRemitoParameter As ObjectParameter = If(nroRemito IsNot Nothing, New ObjectParameter("NroRemito", nroRemito), New ObjectParameter("NroRemito", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRemitos_VerificarsiExiste", nroRemitoParameter, res)
    End Function

    Public Overridable Function spRequerimientos_Insert(id As ObjectParameter, nroReq As String, idCliente As Nullable(Of Long), idPresupuesto As Nullable(Of Long), fechaPedido As Nullable(Of Date), fechaEntrega As Nullable(Of Date), contacto As String, montoFinal As Nullable(Of Decimal), personal As Nullable(Of Integer), hsCampo As Nullable(Of Decimal), hsCotizacion As Nullable(Of Decimal), montoManoObra As Nullable(Of Decimal), montoCotizacion As Nullable(Of Decimal), montoMateriales As Nullable(Of Decimal), otrosGastos As Nullable(Of Decimal), montoSeguridad As Nullable(Of Decimal), useradd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim nroReqParameter As ObjectParameter = If(nroReq IsNot Nothing, New ObjectParameter("NroReq", nroReq), New ObjectParameter("NroReq", GetType(String)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim fechaPedidoParameter As ObjectParameter = If(fechaPedido.HasValue, New ObjectParameter("FechaPedido", fechaPedido), New ObjectParameter("FechaPedido", GetType(Date)))

        Dim fechaEntregaParameter As ObjectParameter = If(fechaEntrega.HasValue, New ObjectParameter("FechaEntrega", fechaEntrega), New ObjectParameter("FechaEntrega", GetType(Date)))

        Dim contactoParameter As ObjectParameter = If(contacto IsNot Nothing, New ObjectParameter("Contacto", contacto), New ObjectParameter("Contacto", GetType(String)))

        Dim montoFinalParameter As ObjectParameter = If(montoFinal.HasValue, New ObjectParameter("MontoFinal", montoFinal), New ObjectParameter("MontoFinal", GetType(Decimal)))

        Dim personalParameter As ObjectParameter = If(personal.HasValue, New ObjectParameter("Personal", personal), New ObjectParameter("Personal", GetType(Integer)))

        Dim hsCampoParameter As ObjectParameter = If(hsCampo.HasValue, New ObjectParameter("HsCampo", hsCampo), New ObjectParameter("HsCampo", GetType(Decimal)))

        Dim hsCotizacionParameter As ObjectParameter = If(hsCotizacion.HasValue, New ObjectParameter("HsCotizacion", hsCotizacion), New ObjectParameter("HsCotizacion", GetType(Decimal)))

        Dim montoManoObraParameter As ObjectParameter = If(montoManoObra.HasValue, New ObjectParameter("MontoManoObra", montoManoObra), New ObjectParameter("MontoManoObra", GetType(Decimal)))

        Dim montoCotizacionParameter As ObjectParameter = If(montoCotizacion.HasValue, New ObjectParameter("MontoCotizacion", montoCotizacion), New ObjectParameter("MontoCotizacion", GetType(Decimal)))

        Dim montoMaterialesParameter As ObjectParameter = If(montoMateriales.HasValue, New ObjectParameter("MontoMateriales", montoMateriales), New ObjectParameter("MontoMateriales", GetType(Decimal)))

        Dim otrosGastosParameter As ObjectParameter = If(otrosGastos.HasValue, New ObjectParameter("OtrosGastos", otrosGastos), New ObjectParameter("OtrosGastos", GetType(Decimal)))

        Dim montoSeguridadParameter As ObjectParameter = If(montoSeguridad.HasValue, New ObjectParameter("MontoSeguridad", montoSeguridad), New ObjectParameter("MontoSeguridad", GetType(Decimal)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRequerimientos_Insert", id, nroReqParameter, idClienteParameter, idPresupuestoParameter, fechaPedidoParameter, fechaEntregaParameter, contactoParameter, montoFinalParameter, personalParameter, hsCampoParameter, hsCotizacionParameter, montoManoObraParameter, montoCotizacionParameter, montoMaterialesParameter, otrosGastosParameter, montoSeguridadParameter, useraddParameter, res)
    End Function

    Public Overridable Function spRequerimientos_Select_ALL(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spRequerimientos_Select_ALL_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRequerimientos_Select_ALL_Result)("spRequerimientos_Select_ALL", eliminadoParameter)
    End Function

    Public Overridable Function spRequerimientos_Update(id As Nullable(Of Long), nroReq As String, idCliente As Nullable(Of Long), idPresupuesto As Nullable(Of Long), fechaPedido As Nullable(Of Date), fechaEntrega As Nullable(Of Date), contacto As String, montoFinal As Nullable(Of Decimal), personal As Nullable(Of Integer), hsCampo As Nullable(Of Decimal), hsCotizacion As Nullable(Of Decimal), montoManoObra As Nullable(Of Decimal), montoCotizacion As Nullable(Of Decimal), montoMateriales As Nullable(Of Decimal), otrosGastos As Nullable(Of Decimal), montoSeguridad As Nullable(Of Decimal), userupd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim nroReqParameter As ObjectParameter = If(nroReq IsNot Nothing, New ObjectParameter("NroReq", nroReq), New ObjectParameter("NroReq", GetType(String)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim idPresupuestoParameter As ObjectParameter = If(idPresupuesto.HasValue, New ObjectParameter("IdPresupuesto", idPresupuesto), New ObjectParameter("IdPresupuesto", GetType(Long)))

        Dim fechaPedidoParameter As ObjectParameter = If(fechaPedido.HasValue, New ObjectParameter("FechaPedido", fechaPedido), New ObjectParameter("FechaPedido", GetType(Date)))

        Dim fechaEntregaParameter As ObjectParameter = If(fechaEntrega.HasValue, New ObjectParameter("FechaEntrega", fechaEntrega), New ObjectParameter("FechaEntrega", GetType(Date)))

        Dim contactoParameter As ObjectParameter = If(contacto IsNot Nothing, New ObjectParameter("Contacto", contacto), New ObjectParameter("Contacto", GetType(String)))

        Dim montoFinalParameter As ObjectParameter = If(montoFinal.HasValue, New ObjectParameter("MontoFinal", montoFinal), New ObjectParameter("MontoFinal", GetType(Decimal)))

        Dim personalParameter As ObjectParameter = If(personal.HasValue, New ObjectParameter("Personal", personal), New ObjectParameter("Personal", GetType(Integer)))

        Dim hsCampoParameter As ObjectParameter = If(hsCampo.HasValue, New ObjectParameter("HsCampo", hsCampo), New ObjectParameter("HsCampo", GetType(Decimal)))

        Dim hsCotizacionParameter As ObjectParameter = If(hsCotizacion.HasValue, New ObjectParameter("HsCotizacion", hsCotizacion), New ObjectParameter("HsCotizacion", GetType(Decimal)))

        Dim montoManoObraParameter As ObjectParameter = If(montoManoObra.HasValue, New ObjectParameter("MontoManoObra", montoManoObra), New ObjectParameter("MontoManoObra", GetType(Decimal)))

        Dim montoCotizacionParameter As ObjectParameter = If(montoCotizacion.HasValue, New ObjectParameter("MontoCotizacion", montoCotizacion), New ObjectParameter("MontoCotizacion", GetType(Decimal)))

        Dim montoMaterialesParameter As ObjectParameter = If(montoMateriales.HasValue, New ObjectParameter("MontoMateriales", montoMateriales), New ObjectParameter("MontoMateriales", GetType(Decimal)))

        Dim otrosGastosParameter As ObjectParameter = If(otrosGastos.HasValue, New ObjectParameter("OtrosGastos", otrosGastos), New ObjectParameter("OtrosGastos", GetType(Decimal)))

        Dim montoSeguridadParameter As ObjectParameter = If(montoSeguridad.HasValue, New ObjectParameter("MontoSeguridad", montoSeguridad), New ObjectParameter("MontoSeguridad", GetType(Decimal)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRequerimientos_Update", idParameter, nroReqParameter, idClienteParameter, idPresupuestoParameter, fechaPedidoParameter, fechaEntregaParameter, contactoParameter, montoFinalParameter, personalParameter, hsCampoParameter, hsCotizacionParameter, montoManoObraParameter, montoCotizacionParameter, montoMaterialesParameter, otrosGastosParameter, montoSeguridadParameter, userupdParameter, res)
    End Function

    Public Overridable Function spRotacionMateriales(inicio As String, fin As String) As ObjectResult(Of spRotacionMateriales_Result)
        Dim inicioParameter As ObjectParameter = If(inicio IsNot Nothing, New ObjectParameter("Inicio", inicio), New ObjectParameter("Inicio", GetType(String)))

        Dim finParameter As ObjectParameter = If(fin IsNot Nothing, New ObjectParameter("Fin", fin), New ObjectParameter("Fin", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRotacionMateriales_Result)("spRotacionMateriales", inicioParameter, finParameter)
    End Function

    Public Overridable Function spRPT_BuscarProducto(codigo As String) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_BuscarProducto", codigoParameter)
    End Function

    Public Overridable Function spRPT_BuscarProductoRecepciones(codigo As String) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_BuscarProductoRecepciones", codigoParameter)
    End Function

    Public Overridable Function spRPT_Cheques(fechaIni As String, fechaFin As String) As Integer
        Dim fechaIniParameter As ObjectParameter = If(fechaIni IsNot Nothing, New ObjectParameter("FechaIni", fechaIni), New ObjectParameter("FechaIni", GetType(String)))

        Dim fechaFinParameter As ObjectParameter = If(fechaFin IsNot Nothing, New ObjectParameter("FechaFin", fechaFin), New ObjectParameter("FechaFin", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_Cheques", fechaIniParameter, fechaFinParameter)
    End Function

    Public Overridable Function spRPT_CierreObras(idObra As String, obra As String) As Integer
        Dim idObraParameter As ObjectParameter = If(idObra IsNot Nothing, New ObjectParameter("IdObra", idObra), New ObjectParameter("IdObra", GetType(String)))

        Dim obraParameter As ObjectParameter = If(obra IsNot Nothing, New ObjectParameter("Obra", obra), New ObjectParameter("Obra", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_CierreObras", idObraParameter, obraParameter)
    End Function

    Public Overridable Function spRPT_Consolidaciones(codigoConsolidado As Nullable(Of Integer)) As ObjectResult(Of spRPT_Consolidaciones_Result)
        Dim codigoConsolidadoParameter As ObjectParameter = If(codigoConsolidado.HasValue, New ObjectParameter("CodigoConsolidado", codigoConsolidado), New ObjectParameter("CodigoConsolidado", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Consolidaciones_Result)("spRPT_Consolidaciones", codigoConsolidadoParameter)
    End Function

    Public Overridable Function spRPT_DeudaClientes(desde As Nullable(Of Date), hasta As Nullable(Of Date), repartidor As String, cliente As String, estado As String) As ObjectResult(Of spRPT_DeudaClientes_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim repartidorParameter As ObjectParameter = If(repartidor IsNot Nothing, New ObjectParameter("Repartidor", repartidor), New ObjectParameter("Repartidor", GetType(String)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim estadoParameter As ObjectParameter = If(estado IsNot Nothing, New ObjectParameter("Estado", estado), New ObjectParameter("Estado", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_DeudaClientes_Result)("spRPT_DeudaClientes", desdeParameter, hastaParameter, repartidorParameter, clienteParameter, estadoParameter)
    End Function

    Public Overridable Function spRPT_DeudaClientes_121020(desde As Nullable(Of Date), hasta As Nullable(Of Date), repartidor As String, cliente As String, estado As String) As ObjectResult(Of spRPT_DeudaClientes_121020_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim repartidorParameter As ObjectParameter = If(repartidor IsNot Nothing, New ObjectParameter("Repartidor", repartidor), New ObjectParameter("Repartidor", GetType(String)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim estadoParameter As ObjectParameter = If(estado IsNot Nothing, New ObjectParameter("Estado", estado), New ObjectParameter("Estado", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_DeudaClientes_121020_Result)("spRPT_DeudaClientes_121020", desdeParameter, hastaParameter, repartidorParameter, clienteParameter, estadoParameter)
    End Function

    Public Overridable Function spRPT_Devolucion(codigo As String) As ObjectResult(Of spRPT_Devolucion_Result)
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Devolucion_Result)("spRPT_Devolucion", codigoParameter)
    End Function

    Public Overridable Function spRPT_DevolucionesDeposito_Clientes(desde As Nullable(Of Date), hasta As Nullable(Of Date), norte As Nullable(Of Boolean), deposito As Nullable(Of Boolean)) As ObjectResult(Of spRPT_DevolucionesDeposito_Clientes_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim norteParameter As ObjectParameter = If(norte.HasValue, New ObjectParameter("Norte", norte), New ObjectParameter("Norte", GetType(Boolean)))

        Dim depositoParameter As ObjectParameter = If(deposito.HasValue, New ObjectParameter("Deposito", deposito), New ObjectParameter("Deposito", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_DevolucionesDeposito_Clientes_Result)("spRPT_DevolucionesDeposito_Clientes", desdeParameter, hastaParameter, norteParameter, depositoParameter)
    End Function

    Public Overridable Function spRPT_DevolucionesPedidosWEB(codigo_Ordendecompra As String) As ObjectResult(Of spRPT_DevolucionesPedidosWEB_Result)
        Dim codigo_OrdendecompraParameter As ObjectParameter = If(codigo_Ordendecompra IsNot Nothing, New ObjectParameter("codigo_Ordendecompra", codigo_Ordendecompra), New ObjectParameter("codigo_Ordendecompra", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_DevolucionesPedidosWEB_Result)("spRPT_DevolucionesPedidosWEB", codigo_OrdendecompraParameter)
    End Function

    Public Overridable Function spRPT_DevolucionesProveedor(codigo_Ordendecompra As String) As ObjectResult(Of spRPT_DevolucionesProveedor_Result)
        Dim codigo_OrdendecompraParameter As ObjectParameter = If(codigo_Ordendecompra IsNot Nothing, New ObjectParameter("codigo_Ordendecompra", codigo_Ordendecompra), New ObjectParameter("codigo_Ordendecompra", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_DevolucionesProveedor_Result)("spRPT_DevolucionesProveedor", codigo_OrdendecompraParameter)
    End Function

    Public Overridable Function spRPT_EtiquetaMaterial(codigo_material As String) As ObjectResult(Of spRPT_EtiquetaMaterial_Result)
        Dim codigo_materialParameter As ObjectParameter = If(codigo_material IsNot Nothing, New ObjectParameter("codigo_material", codigo_material), New ObjectParameter("codigo_material", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_EtiquetaMaterial_Result)("spRPT_EtiquetaMaterial", codigo_materialParameter)
    End Function

    Public Overridable Function spRPT_Factura(codigo As String, tipo As String, tipoComprobante As String, previsualizar As Nullable(Of Boolean), idTmp As String) As ObjectResult(Of spRPT_Factura_Result)
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("Tipo", tipo), New ObjectParameter("Tipo", GetType(String)))

        Dim tipoComprobanteParameter As ObjectParameter = If(tipoComprobante IsNot Nothing, New ObjectParameter("TipoComprobante", tipoComprobante), New ObjectParameter("TipoComprobante", GetType(String)))

        Dim previsualizarParameter As ObjectParameter = If(previsualizar.HasValue, New ObjectParameter("Previsualizar", previsualizar), New ObjectParameter("Previsualizar", GetType(Boolean)))

        Dim idTmpParameter As ObjectParameter = If(idTmp IsNot Nothing, New ObjectParameter("IdTmp", idTmp), New ObjectParameter("IdTmp", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Factura_Result)("spRPT_Factura", codigoParameter, tipoParameter, tipoComprobanteParameter, previsualizarParameter, idTmpParameter)
    End Function

    Public Overridable Function spRPT_Gastos(desde As Nullable(Of Date), hasta As Nullable(Of Date), proveedor As String, tipoGasto As String, cancelado As String) As ObjectResult(Of spRPT_Gastos_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim proveedorParameter As ObjectParameter = If(proveedor IsNot Nothing, New ObjectParameter("Proveedor", proveedor), New ObjectParameter("Proveedor", GetType(String)))

        Dim tipoGastoParameter As ObjectParameter = If(tipoGasto IsNot Nothing, New ObjectParameter("TipoGasto", tipoGasto), New ObjectParameter("TipoGasto", GetType(String)))

        Dim canceladoParameter As ObjectParameter = If(cancelado IsNot Nothing, New ObjectParameter("Cancelado", cancelado), New ObjectParameter("Cancelado", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Gastos_Result)("spRPT_Gastos", desdeParameter, hastaParameter, proveedorParameter, tipoGastoParameter, canceladoParameter)
    End Function

    Public Overridable Function spRPT_Gastos_Correo(desde As Nullable(Of Date), hasta As Nullable(Of Date), proveedor As String, tipoGasto As String, cancelado As String, totalControlar As Nullable(Of Decimal)) As Integer
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim proveedorParameter As ObjectParameter = If(proveedor IsNot Nothing, New ObjectParameter("Proveedor", proveedor), New ObjectParameter("Proveedor", GetType(String)))

        Dim tipoGastoParameter As ObjectParameter = If(tipoGasto IsNot Nothing, New ObjectParameter("TipoGasto", tipoGasto), New ObjectParameter("TipoGasto", GetType(String)))

        Dim canceladoParameter As ObjectParameter = If(cancelado IsNot Nothing, New ObjectParameter("Cancelado", cancelado), New ObjectParameter("Cancelado", GetType(String)))

        Dim totalControlarParameter As ObjectParameter = If(totalControlar.HasValue, New ObjectParameter("TotalControlar", totalControlar), New ObjectParameter("TotalControlar", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_Gastos_Correo", desdeParameter, hastaParameter, proveedorParameter, tipoGastoParameter, canceladoParameter, totalControlarParameter)
    End Function

    Public Overridable Function spRPT_Gastos_Proveedores_Graficos(desde As Nullable(Of Date), hasta As Nullable(Of Date)) As ObjectResult(Of spRPT_Gastos_Proveedores_Graficos_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Gastos_Proveedores_Graficos_Result)("spRPT_Gastos_Proveedores_Graficos", desdeParameter, hastaParameter)
    End Function

    Public Overridable Function spRPT_Gastos_TipoGasto_Graficos(desde As Nullable(Of Date), hasta As Nullable(Of Date)) As ObjectResult(Of spRPT_Gastos_TipoGasto_Graficos_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Gastos_TipoGasto_Graficos_Result)("spRPT_Gastos_TipoGasto_Graficos", desdeParameter, hastaParameter)
    End Function

    Public Overridable Function spRPT_HistorialdeFacturas(desde As Nullable(Of Date), hasta As Nullable(Of Date), cliente As String, cancelada As String) As ObjectResult(Of spRPT_HistorialdeFacturas_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim canceladaParameter As ObjectParameter = If(cancelada IsNot Nothing, New ObjectParameter("Cancelada", cancelada), New ObjectParameter("Cancelada", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_HistorialdeFacturas_Result)("spRPT_HistorialdeFacturas", desdeParameter, hastaParameter, clienteParameter, canceladaParameter)
    End Function

    Public Overridable Function spRPT_HistorialdeFacturas_Vencidas() As ObjectResult(Of spRPT_HistorialdeFacturas_Vencidas_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_HistorialdeFacturas_Vencidas_Result)("spRPT_HistorialdeFacturas_Vencidas")
    End Function

    Public Overridable Function spRPT_HistoriaPresupuestos(desde As Nullable(Of Date), hasta As Nullable(Of Date), cliente As String, cancelada As String) As ObjectResult(Of spRPT_HistoriaPresupuestos_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim canceladaParameter As ObjectParameter = If(cancelada IsNot Nothing, New ObjectParameter("Cancelada", cancelada), New ObjectParameter("Cancelada", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_HistoriaPresupuestos_Result)("spRPT_HistoriaPresupuestos", desdeParameter, hastaParameter, clienteParameter, canceladaParameter)
    End Function

    Public Overridable Function spRPT_HistoriaPresupuestos2(desde As Nullable(Of Date), hasta As Nullable(Of Date), cliente As String, estado As String) As ObjectResult(Of spRPT_HistoriaPresupuestos2_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim estadoParameter As ObjectParameter = If(estado IsNot Nothing, New ObjectParameter("Estado", estado), New ObjectParameter("Estado", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_HistoriaPresupuestos2_Result)("spRPT_HistoriaPresupuestos2", desdeParameter, hastaParameter, clienteParameter, estadoParameter)
    End Function

    Public Overridable Function spRPT_Impuestos(desde As Nullable(Of Date), hasta As Nullable(Of Date), cliente As String) As ObjectResult(Of spRPT_Impuestos_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Impuestos_Result)("spRPT_Impuestos", desdeParameter, hastaParameter, clienteParameter)
    End Function

    Public Overridable Function spRPT_InformeGral(desde As String, hasta As String) As ObjectResult(Of spRPT_InformeGral_Result)
        Dim desdeParameter As ObjectParameter = If(desde IsNot Nothing, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(String)))

        Dim hastaParameter As ObjectParameter = If(hasta IsNot Nothing, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_InformeGral_Result)("spRPT_InformeGral", desdeParameter, hastaParameter)
    End Function

    Public Overridable Function spRPT_Ingresos(idMov As String) As ObjectResult(Of spRPT_Ingresos_Result)
        Dim idMovParameter As ObjectParameter = If(idMov IsNot Nothing, New ObjectParameter("idMov", idMov), New ObjectParameter("idMov", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Ingresos_Result)("spRPT_Ingresos", idMovParameter)
    End Function

    Public Overridable Function spRPT_Ingresos_Comprobante(id As String) As Integer
        Dim idParameter As ObjectParameter = If(id IsNot Nothing, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_Ingresos_Comprobante", idParameter)
    End Function

    Public Overridable Function spRPT_Ingresos_ComprobantePago() As ObjectResult(Of spRPT_Ingresos_ComprobantePago_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Ingresos_ComprobantePago_Result)("spRPT_Ingresos_ComprobantePago")
    End Function

    Public Overridable Function spRPT_Ingresos_Tmp(idMov As Nullable(Of Long)) As Integer
        Dim idMovParameter As ObjectParameter = If(idMov.HasValue, New ObjectParameter("idMov", idMov), New ObjectParameter("idMov", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_Ingresos_Tmp", idMovParameter)
    End Function

    Public Overridable Function spRPT_IVACompras_Excel(periodo As String, tipo As String, res As ObjectParameter) As Integer
        Dim periodoParameter As ObjectParameter = If(periodo IsNot Nothing, New ObjectParameter("Periodo", periodo), New ObjectParameter("Periodo", GetType(String)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("Tipo", tipo), New ObjectParameter("Tipo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_IVACompras_Excel", periodoParameter, tipoParameter, res)
    End Function

    Public Overridable Function spRPT_MaestroAjustes(codigo As String) As ObjectResult(Of spRPT_MaestroAjustes_Result)
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_MaestroAjustes_Result)("spRPT_MaestroAjustes", codigoParameter)
    End Function

    Public Overridable Function spRPT_MaestroClientes(codigo As String) As ObjectResult(Of spRPT_MaestroClientes_Result)
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_MaestroClientes_Result)("spRPT_MaestroClientes", codigoParameter)
    End Function

    Public Overridable Function spRPT_MaestroEmpleados(codigo As String) As ObjectResult(Of spRPT_MaestroEmpleados_Result)
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_MaestroEmpleados_Result)("spRPT_MaestroEmpleados", codigoParameter)
    End Function

    Public Overridable Function spRPT_MaestroMateriales(busqueda As String) As Integer
        Dim busquedaParameter As ObjectParameter = If(busqueda IsNot Nothing, New ObjectParameter("Busqueda", busqueda), New ObjectParameter("Busqueda", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_MaestroMateriales", busquedaParameter)
    End Function

    Public Overridable Function spRPT_MaestroOrdenDeCompra(codigo_ordendecompra As String) As Integer
        Dim codigo_ordendecompraParameter As ObjectParameter = If(codigo_ordendecompra IsNot Nothing, New ObjectParameter("codigo_ordendecompra", codigo_ordendecompra), New ObjectParameter("codigo_ordendecompra", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_MaestroOrdenDeCompra", codigo_ordendecompraParameter)
    End Function

    Public Overridable Function spRPT_MaestroProveedores(codigo As String) As ObjectResult(Of spRPT_MaestroProveedores_Result)
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_MaestroProveedores_Result)("spRPT_MaestroProveedores", codigoParameter)
    End Function

    Public Overridable Function spRPT_MaestroRecepcion(codigo_Recepcion As String) As Integer
        Dim codigo_RecepcionParameter As ObjectParameter = If(codigo_Recepcion IsNot Nothing, New ObjectParameter("codigo_Recepcion", codigo_Recepcion), New ObjectParameter("codigo_Recepcion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_MaestroRecepcion", codigo_RecepcionParameter)
    End Function

    Public Overridable Function spRPT_MaestroRubros_Subrubros(codigo As String) As ObjectResult(Of spRPT_MaestroRubros_Subrubros_Result)
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_MaestroRubros_Subrubros_Result)("spRPT_MaestroRubros_Subrubros", codigoParameter)
    End Function

    Public Overridable Function spRPT_MaquinasHerramientasSGI() As ObjectResult(Of spRPT_MaquinasHerramientasSGI_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_MaquinasHerramientasSGI_Result)("spRPT_MaquinasHerramientasSGI")
    End Function

    Public Overridable Function spRPT_OrdenesdeCompra_Status(desde As Nullable(Of Date), hasta As Nullable(Of Date), proveedor As String) As ObjectResult(Of spRPT_OrdenesdeCompra_Status_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim proveedorParameter As ObjectParameter = If(proveedor IsNot Nothing, New ObjectParameter("Proveedor", proveedor), New ObjectParameter("Proveedor", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_OrdenesdeCompra_Status_Result)("spRPT_OrdenesdeCompra_Status", desdeParameter, hastaParameter, proveedorParameter)
    End Function

    Public Overridable Function spRPT_Pagos(idMov As String) As ObjectResult(Of spRPT_Pagos_Result)
        Dim idMovParameter As ObjectParameter = If(idMov IsNot Nothing, New ObjectParameter("idMov", idMov), New ObjectParameter("idMov", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Pagos_Result)("spRPT_Pagos", idMovParameter)
    End Function

    Public Overridable Function spRPT_Pagos_Tmp(idMov As Nullable(Of Long)) As Integer
        Dim idMovParameter As ObjectParameter = If(idMov.HasValue, New ObjectParameter("idMov", idMov), New ObjectParameter("idMov", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_Pagos_Tmp", idMovParameter)
    End Function

    Public Overridable Function spRPT_PedidosWEB(codigo_Ordendecompra As String, saldoparam As Nullable(Of Decimal)) As ObjectResult(Of spRPT_PedidosWEB_Result)
        Dim codigo_OrdendecompraParameter As ObjectParameter = If(codigo_Ordendecompra IsNot Nothing, New ObjectParameter("codigo_Ordendecompra", codigo_Ordendecompra), New ObjectParameter("codigo_Ordendecompra", GetType(String)))

        Dim saldoparamParameter As ObjectParameter = If(saldoparam.HasValue, New ObjectParameter("saldoparam", saldoparam), New ObjectParameter("saldoparam", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_PedidosWEB_Result)("spRPT_PedidosWEB", codigo_OrdendecompraParameter, saldoparamParameter)
    End Function

    Public Overridable Function spRPT_PlanillaCarga_Repartidor(empleado As String, zona As String, fecha As Nullable(Of Date), hasta As Nullable(Of Date)) As ObjectResult(Of spRPT_PlanillaCarga_Repartidor_Result)
        Dim empleadoParameter As ObjectParameter = If(empleado IsNot Nothing, New ObjectParameter("Empleado", empleado), New ObjectParameter("Empleado", GetType(String)))

        Dim zonaParameter As ObjectParameter = If(zona IsNot Nothing, New ObjectParameter("Zona", zona), New ObjectParameter("Zona", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_PlanillaCarga_Repartidor_Result)("spRPT_PlanillaCarga_Repartidor", empleadoParameter, zonaParameter, fechaParameter, hastaParameter)
    End Function

    Public Overridable Function spRPT_PorkysOrdenDeCompra(codigo_ordendecompra As String) As ObjectResult(Of spRPT_PorkysOrdenDeCompra_Result)
        Dim codigo_ordendecompraParameter As ObjectParameter = If(codigo_ordendecompra IsNot Nothing, New ObjectParameter("codigo_ordendecompra", codigo_ordendecompra), New ObjectParameter("codigo_ordendecompra", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_PorkysOrdenDeCompra_Result)("spRPT_PorkysOrdenDeCompra", codigo_ordendecompraParameter)
    End Function

    Public Overridable Function spRPT_Presentacion(idpresentacion As Nullable(Of Long)) As ObjectResult(Of spRPT_Presentacion_Result)
        Dim idpresentacionParameter As ObjectParameter = If(idpresentacion.HasValue, New ObjectParameter("idpresentacion", idpresentacion), New ObjectParameter("idpresentacion", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Presentacion_Result)("spRPT_Presentacion", idpresentacionParameter)
    End Function

    Public Overridable Function spRPT_Presupuestos(iD As String) As Integer
        Dim iDParameter As ObjectParameter = If(iD IsNot Nothing, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_Presupuestos", iDParameter)
    End Function

    Public Overridable Function spRPT_Presupuestos_ManoObra(iD As String) As Integer
        Dim iDParameter As ObjectParameter = If(iD IsNot Nothing, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_Presupuestos_ManoObra", iDParameter)
    End Function

    Public Overridable Function spRPT_Presupuestos_ManoObra_311017(iD As String) As Integer
        Dim iDParameter As ObjectParameter = If(iD IsNot Nothing, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_Presupuestos_ManoObra_311017", iDParameter)
    End Function

    Public Overridable Function spRPT_Presupuestos_OfertaComercial(iD As String) As ObjectResult(Of spRPT_Presupuestos_OfertaComercial_Result)
        Dim iDParameter As ObjectParameter = If(iD IsNot Nothing, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Presupuestos_OfertaComercial_Result)("spRPT_Presupuestos_OfertaComercial", iDParameter)
    End Function

    Public Overridable Function spRPT_Presupuestos_OfertasComerciales_DetMateriales(iD As String) As ObjectResult(Of spRPT_Presupuestos_OfertasComerciales_DetMateriales_Result)
        Dim iDParameter As ObjectParameter = If(iD IsNot Nothing, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Presupuestos_OfertasComerciales_DetMateriales_Result)("spRPT_Presupuestos_OfertasComerciales_DetMateriales", iDParameter)
    End Function

    Public Overridable Function spRPT_Presupuestos_Status(desde As Nullable(Of Date), hasta As Nullable(Of Date), cliente As String, estado As String) As ObjectResult(Of spRPT_Presupuestos_Status_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim estadoParameter As ObjectParameter = If(estado IsNot Nothing, New ObjectParameter("Estado", estado), New ObjectParameter("Estado", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Presupuestos_Status_Result)("spRPT_Presupuestos_Status", desdeParameter, hastaParameter, clienteParameter, estadoParameter)
    End Function

    Public Overridable Function spRPT_Presupuestos_Trafos(iD As String) As ObjectResult(Of spRPT_Presupuestos_Trafos_Result)
        Dim iDParameter As ObjectParameter = If(iD IsNot Nothing, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Presupuestos_Trafos_Result)("spRPT_Presupuestos_Trafos", iDParameter)
    End Function

    Public Overridable Function spRPT_ProductosPresupuestados(desde As String, hasta As String) As ObjectResult(Of spRPT_ProductosPresupuestados_Result)
        Dim desdeParameter As ObjectParameter = If(desde IsNot Nothing, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(String)))

        Dim hastaParameter As ObjectParameter = If(hasta IsNot Nothing, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_ProductosPresupuestados_Result)("spRPT_ProductosPresupuestados", desdeParameter, hastaParameter)
    End Function

    Public Overridable Function spRPT_ProductosVendidos(desde As String, hasta As String, cliente As String, moneda As String) As ObjectResult(Of spRPT_ProductosVendidos_Result)
        Dim desdeParameter As ObjectParameter = If(desde IsNot Nothing, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(String)))

        Dim hastaParameter As ObjectParameter = If(hasta IsNot Nothing, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(String)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim monedaParameter As ObjectParameter = If(moneda IsNot Nothing, New ObjectParameter("Moneda", moneda), New ObjectParameter("Moneda", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_ProductosVendidos_Result)("spRPT_ProductosVendidos", desdeParameter, hastaParameter, clienteParameter, monedaParameter)
    End Function

    Public Overridable Function spRPT_Recaudacion_Repartidor(empleado As String, zona As String, fecha As Nullable(Of Date), hasta As Nullable(Of Date)) As ObjectResult(Of spRPT_Recaudacion_Repartidor_Result)
        Dim empleadoParameter As ObjectParameter = If(empleado IsNot Nothing, New ObjectParameter("Empleado", empleado), New ObjectParameter("Empleado", GetType(String)))

        Dim zonaParameter As ObjectParameter = If(zona IsNot Nothing, New ObjectParameter("Zona", zona), New ObjectParameter("Zona", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Recaudacion_Repartidor_Result)("spRPT_Recaudacion_Repartidor", empleadoParameter, zonaParameter, fechaParameter, hastaParameter)
    End Function

    Public Overridable Function spRPT_Remito(codigo As String) As ObjectResult(Of spRPT_Remito_Result)
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Remito_Result)("spRPT_Remito", codigoParameter)
    End Function

    Public Overridable Function spRPT_Remito_EquiposHerramientas(codigo As String) As ObjectResult(Of spRPT_Remito_EquiposHerramientas_Result)
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Remito_EquiposHerramientas_Result)("spRPT_Remito_EquiposHerramientas", codigoParameter)
    End Function

    Public Overridable Function spRPT_Remitos(codigo_Consumos As String) As Integer
        Dim codigo_ConsumosParameter As ObjectParameter = If(codigo_Consumos IsNot Nothing, New ObjectParameter("codigo_Consumos", codigo_Consumos), New ObjectParameter("codigo_Consumos", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_Remitos", codigo_ConsumosParameter)
    End Function

    Public Overridable Function spRPT_RemitosDuplicados() As ObjectResult(Of spRPT_RemitosDuplicados_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_RemitosDuplicados_Result)("spRPT_RemitosDuplicados")
    End Function

    Public Overridable Function spRPT_ResumenCuenta(desde As Nullable(Of Date), hasta As Nullable(Of Date), repartidor As String, cliente As String, estado As String) As ObjectResult(Of spRPT_ResumenCuenta_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim repartidorParameter As ObjectParameter = If(repartidor IsNot Nothing, New ObjectParameter("Repartidor", repartidor), New ObjectParameter("Repartidor", GetType(String)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim estadoParameter As ObjectParameter = If(estado IsNot Nothing, New ObjectParameter("Estado", estado), New ObjectParameter("Estado", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_ResumenCuenta_Result)("spRPT_ResumenCuenta", desdeParameter, hastaParameter, repartidorParameter, clienteParameter, estadoParameter)
    End Function

    Public Overridable Function spRPT_ResumenCuenta_121020(desde As Nullable(Of Date), hasta As Nullable(Of Date), repartidor As String, cliente As String, estado As String) As ObjectResult(Of spRPT_ResumenCuenta_121020_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim repartidorParameter As ObjectParameter = If(repartidor IsNot Nothing, New ObjectParameter("Repartidor", repartidor), New ObjectParameter("Repartidor", GetType(String)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim estadoParameter As ObjectParameter = If(estado IsNot Nothing, New ObjectParameter("Estado", estado), New ObjectParameter("Estado", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_ResumenCuenta_121020_Result)("spRPT_ResumenCuenta_121020", desdeParameter, hastaParameter, repartidorParameter, clienteParameter, estadoParameter)
    End Function

    Public Overridable Function spRPT_ResumenCuenta_OLD(desde As Nullable(Of Date), hasta As Nullable(Of Date), repartidor As String, cliente As String, estado As String) As ObjectResult(Of spRPT_ResumenCuenta_OLD_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim repartidorParameter As ObjectParameter = If(repartidor IsNot Nothing, New ObjectParameter("Repartidor", repartidor), New ObjectParameter("Repartidor", GetType(String)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim estadoParameter As ObjectParameter = If(estado IsNot Nothing, New ObjectParameter("Estado", estado), New ObjectParameter("Estado", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_ResumenCuenta_OLD_Result)("spRPT_ResumenCuenta_OLD", desdeParameter, hastaParameter, repartidorParameter, clienteParameter, estadoParameter)
    End Function

    Public Overridable Function spRPT_Retenciones(desde As Nullable(Of Date), hasta As Nullable(Of Date), cliente As String) As ObjectResult(Of spRPT_Retenciones_Result)
        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("Desde", desde), New ObjectParameter("Desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("Hasta", hasta), New ObjectParameter("Hasta", GetType(Date)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Retenciones_Result)("spRPT_Retenciones", desdeParameter, hastaParameter, clienteParameter)
    End Function

    Public Overridable Function spRPT_Stock_Actual_Valorizado(idFamilia As String, idSubrubro As String) As Integer
        Dim idFamiliaParameter As ObjectParameter = If(idFamilia IsNot Nothing, New ObjectParameter("IdFamilia", idFamilia), New ObjectParameter("IdFamilia", GetType(String)))

        Dim idSubrubroParameter As ObjectParameter = If(idSubrubro IsNot Nothing, New ObjectParameter("IdSubrubro", idSubrubro), New ObjectParameter("IdSubrubro", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_Stock_Actual_Valorizado", idFamiliaParameter, idSubrubroParameter)
    End Function

    Public Overridable Function spRPT_Stock2014(busqueda As String) As Integer
        Dim busquedaParameter As ObjectParameter = If(busqueda IsNot Nothing, New ObjectParameter("Busqueda", busqueda), New ObjectParameter("Busqueda", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_Stock2014", busquedaParameter)
    End Function

    Public Overridable Function spRPT_StockporRubrosySubrubros(idFamilia As String, idSubrubro As String) As Integer
        Dim idFamiliaParameter As ObjectParameter = If(idFamilia IsNot Nothing, New ObjectParameter("IdFamilia", idFamilia), New ObjectParameter("IdFamilia", GetType(String)))

        Dim idSubrubroParameter As ObjectParameter = If(idSubrubro IsNot Nothing, New ObjectParameter("IdSubrubro", idSubrubro), New ObjectParameter("IdSubrubro", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRPT_StockporRubrosySubrubros", idFamiliaParameter, idSubrubroParameter)
    End Function

    Public Overridable Function spRPT_Trafos_Ensayos_byPresupuesto(codigo As String) As ObjectResult(Of spRPT_Trafos_Ensayos_byPresupuesto_Result)
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Trafos_Ensayos_byPresupuesto_Result)("spRPT_Trafos_Ensayos_byPresupuesto", codigoParameter)
    End Function

    Public Overridable Function spRPT_Transferencias(codigo_Ordendecompra As String) As ObjectResult(Of spRPT_Transferencias_Result)
        Dim codigo_OrdendecompraParameter As ObjectParameter = If(codigo_Ordendecompra IsNot Nothing, New ObjectParameter("codigo_Ordendecompra", codigo_Ordendecompra), New ObjectParameter("codigo_Ordendecompra", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Transferencias_Result)("spRPT_Transferencias", codigo_OrdendecompraParameter)
    End Function

    Public Overridable Function spRPT_VentaConsumo(iD As String) As ObjectResult(Of spRPT_VentaConsumo_Result)
        Dim iDParameter As ObjectParameter = If(iD IsNot Nothing, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_VentaConsumo_Result)("spRPT_VentaConsumo", iDParameter)
    End Function

    Public Overridable Function spRPT_Ventas_Clientes(cliente As String, repartidor As String, desde As Nullable(Of Date), hasta As Nullable(Of Date)) As ObjectResult(Of spRPT_Ventas_Clientes_Result)
        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("cliente", cliente), New ObjectParameter("cliente", GetType(String)))

        Dim repartidorParameter As ObjectParameter = If(repartidor IsNot Nothing, New ObjectParameter("repartidor", repartidor), New ObjectParameter("repartidor", GetType(String)))

        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("desde", desde), New ObjectParameter("desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("hasta", hasta), New ObjectParameter("hasta", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_Ventas_Clientes_Result)("spRPT_Ventas_Clientes", clienteParameter, repartidorParameter, desdeParameter, hastaParameter)
    End Function

    Public Overridable Function spRPT_VentasDeposito(codigo_Ordendecompra As String) As ObjectResult(Of spRPT_VentasDeposito_Result)
        Dim codigo_OrdendecompraParameter As ObjectParameter = If(codigo_Ordendecompra IsNot Nothing, New ObjectParameter("codigo_Ordendecompra", codigo_Ordendecompra), New ObjectParameter("codigo_Ordendecompra", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_VentasDeposito_Result)("spRPT_VentasDeposito", codigo_OrdendecompraParameter)
    End Function

    Public Overridable Function spRPT_VentasDeposito_Clientes(cliente As String) As ObjectResult(Of spRPT_VentasDeposito_Clientes_Result)
        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRPT_VentasDeposito_Clientes_Result)("spRPT_VentasDeposito_Clientes", clienteParameter)
    End Function

    Public Overridable Function spRptMaestroRecepciones(codigo_Recepciones As String) As ObjectResult(Of spRptMaestroRecepciones_Result)
        Dim codigo_RecepcionesParameter As ObjectParameter = If(codigo_Recepciones IsNot Nothing, New ObjectParameter("codigo_Recepciones", codigo_Recepciones), New ObjectParameter("codigo_Recepciones", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRptMaestroRecepciones_Result)("spRptMaestroRecepciones", codigo_RecepcionesParameter)
    End Function

    Public Overridable Function spRptMaestroRecepciones_Det(codigo_Recepciones_Det As String) As ObjectResult(Of spRptMaestroRecepciones_Det_Result)
        Dim codigo_Recepciones_DetParameter As ObjectParameter = If(codigo_Recepciones_Det IsNot Nothing, New ObjectParameter("codigo_Recepciones_Det", codigo_Recepciones_Det), New ObjectParameter("codigo_Recepciones_Det", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRptMaestroRecepciones_Det_Result)("spRptMaestroRecepciones_Det", codigo_Recepciones_DetParameter)
    End Function

    Public Overridable Function spRptPerfiles() As ObjectResult(Of spRptPerfiles_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spRptPerfiles_Result)("spRptPerfiles")
    End Function

    Public Overridable Function spRptPerfilesAccesos() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRptPerfilesAccesos")
    End Function

    Public Overridable Function spRptSectores() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRptSectores")
    End Function

    Public Overridable Function spRptTipoControles() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRptTipoControles")
    End Function

    Public Overridable Function spRptUsuariosPerfiles() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spRptUsuariosPerfiles")
    End Function

    Public Overridable Function spSaldos_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spSaldos_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spSaldos_Select_All_Result)("spSaldos_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spSubRubros_Delete(id As Nullable(Of Long), userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spSubRubros_Delete", idParameter, userupdParameter, res)
    End Function

    Public Overridable Function spSubRubros_Insert(id As ObjectParameter, idFamilia As Nullable(Of Long), codigo As String, nombre As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idFamiliaParameter As ObjectParameter = If(idFamilia.HasValue, New ObjectParameter("IdFamilia", idFamilia), New ObjectParameter("IdFamilia", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spSubRubros_Insert", id, idFamiliaParameter, codigoParameter, nombreParameter, useraddParameter, res)
    End Function

    Public Overridable Function spSubrubros_Select_By_IDFamilia(idFamilia As Nullable(Of Long)) As ObjectResult(Of spSubrubros_Select_By_IDFamilia_Result)
        Dim idFamiliaParameter As ObjectParameter = If(idFamilia.HasValue, New ObjectParameter("IdFamilia", idFamilia), New ObjectParameter("IdFamilia", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spSubrubros_Select_By_IDFamilia_Result)("spSubrubros_Select_By_IDFamilia", idFamiliaParameter)
    End Function

    Public Overridable Function spSubRubros_Update(id As Nullable(Of Long), idFamilia As Nullable(Of Long), codigo As String, nombre As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim idFamiliaParameter As ObjectParameter = If(idFamilia.HasValue, New ObjectParameter("IdFamilia", idFamilia), New ObjectParameter("IdFamilia", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spSubRubros_Update", idParameter, idFamiliaParameter, codigoParameter, nombreParameter, userupdParameter, res)
    End Function

    Public Overridable Function spTableros_Det_Delete(idmp As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idmpParameter As ObjectParameter = If(idmp.HasValue, New ObjectParameter("Idmp", idmp), New ObjectParameter("Idmp", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTableros_Det_Delete", idmpParameter, res)
    End Function

    Public Overridable Function spTableros_Det_Insert(id As ObjectParameter, idtablero As Nullable(Of Integer), idmaterial As Nullable(Of Integer), qty As Nullable(Of Integer), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idtableroParameter As ObjectParameter = If(idtablero.HasValue, New ObjectParameter("idtablero", idtablero), New ObjectParameter("idtablero", GetType(Integer)))

        Dim idmaterialParameter As ObjectParameter = If(idmaterial.HasValue, New ObjectParameter("idmaterial", idmaterial), New ObjectParameter("idmaterial", GetType(Integer)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Integer)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTableros_Det_Insert", id, idtableroParameter, idmaterialParameter, qtyParameter, useraddParameter, res)
    End Function

    Public Overridable Function spTableros_Det_Select_By_IdTablero(idTablero As Nullable(Of Long)) As ObjectResult(Of spTableros_Det_Select_By_IdTablero_Result)
        Dim idTableroParameter As ObjectParameter = If(idTablero.HasValue, New ObjectParameter("IdTablero", idTablero), New ObjectParameter("IdTablero", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spTableros_Det_Select_By_IdTablero_Result)("spTableros_Det_Select_By_IdTablero", idTableroParameter)
    End Function

    Public Overridable Function spTableros_Importar() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTableros_Importar")
    End Function

    Public Overridable Function spTableros_Insert(id As ObjectParameter, codigo As String, nombre As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTableros_Insert", id, codigoParameter, nombreParameter, useraddParameter, res)
    End Function

    Public Overridable Function spTableros_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spTableros_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spTableros_Select_All_Result)("spTableros_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spTableros_Update(id As Nullable(Of Long), codigo As String, nombre As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTableros_Update", idParameter, codigoParameter, nombreParameter, userupdParameter, res)
    End Function

    Public Overridable Function spTarjetas_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTarjetas_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spTarjetas_Insert(id As ObjectParameter, codigo As String, nombre As String, porcenrecar As Nullable(Of Decimal), nota As String, cuotas As String, res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim porcenrecarParameter As ObjectParameter = If(porcenrecar.HasValue, New ObjectParameter("porcenrecar", porcenrecar), New ObjectParameter("porcenrecar", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Dim cuotasParameter As ObjectParameter = If(cuotas IsNot Nothing, New ObjectParameter("cuotas", cuotas), New ObjectParameter("cuotas", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTarjetas_Insert", id, codigoParameter, nombreParameter, porcenrecarParameter, notaParameter, cuotasParameter, res)
    End Function

    Public Overridable Function spTarjetas_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spTarjetas_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spTarjetas_Select_All_Result)("spTarjetas_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spTarjetas_Update(id As ObjectParameter, codigo As String, cuotas As String, nombre As String, porcenrecar As Nullable(Of Decimal), nota As String, res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim cuotasParameter As ObjectParameter = If(cuotas IsNot Nothing, New ObjectParameter("cuotas", cuotas), New ObjectParameter("cuotas", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim porcenrecarParameter As ObjectParameter = If(porcenrecar.HasValue, New ObjectParameter("porcenrecar", porcenrecar), New ObjectParameter("porcenrecar", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("nota", nota), New ObjectParameter("nota", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTarjetas_Update", id, codigoParameter, cuotasParameter, nombreParameter, porcenrecarParameter, notaParameter, res)
    End Function

    Public Overridable Function spTrafos_Ensayos_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTrafos_Ensayos_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spTrafos_Ensayos_Insert(id As ObjectParameter, item As Nullable(Of Double), descripcionensayo As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim itemParameter As ObjectParameter = If(item.HasValue, New ObjectParameter("item", item), New ObjectParameter("item", GetType(Double)))

        Dim descripcionensayoParameter As ObjectParameter = If(descripcionensayo IsNot Nothing, New ObjectParameter("descripcionensayo", descripcionensayo), New ObjectParameter("descripcionensayo", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTrafos_Ensayos_Insert", id, itemParameter, descripcionensayoParameter, useraddParameter, res)
    End Function

    Public Overridable Function spTrafos_Ensayos_Select_All() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTrafos_Ensayos_Select_All")
    End Function

    Public Overridable Function spTrafos_Ensayos_Update(id As Nullable(Of Long), item As Nullable(Of Double), descripcionensayo As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim itemParameter As ObjectParameter = If(item.HasValue, New ObjectParameter("item", item), New ObjectParameter("item", GetType(Double)))

        Dim descripcionensayoParameter As ObjectParameter = If(descripcionensayo IsNot Nothing, New ObjectParameter("descripcionensayo", descripcionensayo), New ObjectParameter("descripcionensayo", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTrafos_Ensayos_Update", idParameter, itemParameter, descripcionensayoParameter, userupdParameter, res)
    End Function

    Public Overridable Function spTransferencias_EliminarItems(idIngreso As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTransferencias_EliminarItems", idIngresoParameter, res)
    End Function

    Public Overridable Function spTransferencias_Ingreso_TMP(idIngreso As Nullable(Of Long), idTransferencia As Nullable(Of Long)) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim idTransferenciaParameter As ObjectParameter = If(idTransferencia.HasValue, New ObjectParameter("IdTransferencia", idTransferencia), New ObjectParameter("IdTransferencia", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTransferencias_Ingreso_TMP", idIngresoParameter, idTransferenciaParameter)
    End Function

    Public Overridable Function spTransferencias_Insert(idIngreso As Nullable(Of Long), cuentaorigen As String, cuentaDestino As String, bancoOrigen As String, bancoDestino As String, fechaTransf As Nullable(Of Date), idMoneda As Nullable(Of Long), nroOP As String, monto As Nullable(Of Decimal), observaciones As String, res As ObjectParameter) As Integer
        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim cuentaorigenParameter As ObjectParameter = If(cuentaorigen IsNot Nothing, New ObjectParameter("Cuentaorigen", cuentaorigen), New ObjectParameter("Cuentaorigen", GetType(String)))

        Dim cuentaDestinoParameter As ObjectParameter = If(cuentaDestino IsNot Nothing, New ObjectParameter("CuentaDestino", cuentaDestino), New ObjectParameter("CuentaDestino", GetType(String)))

        Dim bancoOrigenParameter As ObjectParameter = If(bancoOrigen IsNot Nothing, New ObjectParameter("BancoOrigen", bancoOrigen), New ObjectParameter("BancoOrigen", GetType(String)))

        Dim bancoDestinoParameter As ObjectParameter = If(bancoDestino IsNot Nothing, New ObjectParameter("BancoDestino", bancoDestino), New ObjectParameter("BancoDestino", GetType(String)))

        Dim fechaTransfParameter As ObjectParameter = If(fechaTransf.HasValue, New ObjectParameter("FechaTransf", fechaTransf), New ObjectParameter("FechaTransf", GetType(Date)))

        Dim idMonedaParameter As ObjectParameter = If(idMoneda.HasValue, New ObjectParameter("IdMoneda", idMoneda), New ObjectParameter("IdMoneda", GetType(Long)))

        Dim nroOPParameter As ObjectParameter = If(nroOP IsNot Nothing, New ObjectParameter("NroOP", nroOP), New ObjectParameter("NroOP", GetType(String)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("Observaciones", observaciones), New ObjectParameter("Observaciones", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTransferencias_Insert", idIngresoParameter, cuentaorigenParameter, cuentaDestinoParameter, bancoOrigenParameter, bancoDestinoParameter, fechaTransfParameter, idMonedaParameter, nroOPParameter, montoParameter, observacionesParameter, res)
    End Function

    Public Overridable Function spTransferencias_Porkys_Delete(ordenPedido As String, nota As String, iDAutoriza As String, userDel As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim ordenPedidoParameter As ObjectParameter = If(ordenPedido IsNot Nothing, New ObjectParameter("OrdenPedido", ordenPedido), New ObjectParameter("OrdenPedido", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim iDAutorizaParameter As ObjectParameter = If(iDAutoriza IsNot Nothing, New ObjectParameter("IDAutoriza", iDAutoriza), New ObjectParameter("IDAutoriza", GetType(String)))

        Dim userDelParameter As ObjectParameter = If(userDel.HasValue, New ObjectParameter("UserDel", userDel), New ObjectParameter("UserDel", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTransferencias_Porkys_Delete", ordenPedidoParameter, notaParameter, iDAutorizaParameter, userDelParameter, res)
    End Function

    Public Overridable Function spTransferencias_Porkys_Delete_Det(id As ObjectParameter, iDOrigen As Nullable(Of Double), iDDestino As Nullable(Of Double), iDTransferencia As String, iDMaterial As String, iDUnidad As String, cantidad As Nullable(Of Decimal), nota_Det As String, userDel As Nullable(Of Long), idStockMov_Orig As ObjectParameter, comprob As ObjectParameter, stock_Orig As ObjectParameter, idStockMov_Des As ObjectParameter, stock_Des As ObjectParameter, res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim iDOrigenParameter As ObjectParameter = If(iDOrigen.HasValue, New ObjectParameter("IDOrigen", iDOrigen), New ObjectParameter("IDOrigen", GetType(Double)))

        Dim iDDestinoParameter As ObjectParameter = If(iDDestino.HasValue, New ObjectParameter("IDDestino", iDDestino), New ObjectParameter("IDDestino", GetType(Double)))

        Dim iDTransferenciaParameter As ObjectParameter = If(iDTransferencia IsNot Nothing, New ObjectParameter("IDTransferencia", iDTransferencia), New ObjectParameter("IDTransferencia", GetType(String)))

        Dim iDMaterialParameter As ObjectParameter = If(iDMaterial IsNot Nothing, New ObjectParameter("IDMaterial", iDMaterial), New ObjectParameter("IDMaterial", GetType(String)))

        Dim iDUnidadParameter As ObjectParameter = If(iDUnidad IsNot Nothing, New ObjectParameter("IDUnidad", iDUnidad), New ObjectParameter("IDUnidad", GetType(String)))

        Dim cantidadParameter As ObjectParameter = If(cantidad.HasValue, New ObjectParameter("Cantidad", cantidad), New ObjectParameter("Cantidad", GetType(Decimal)))

        Dim nota_DetParameter As ObjectParameter = If(nota_Det IsNot Nothing, New ObjectParameter("Nota_Det", nota_Det), New ObjectParameter("Nota_Det", GetType(String)))

        Dim userDelParameter As ObjectParameter = If(userDel.HasValue, New ObjectParameter("UserDel", userDel), New ObjectParameter("UserDel", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTransferencias_Porkys_Delete_Det", id, iDOrigenParameter, iDDestinoParameter, iDTransferenciaParameter, iDMaterialParameter, iDUnidadParameter, cantidadParameter, nota_DetParameter, userDelParameter, idStockMov_Orig, comprob, stock_Orig, idStockMov_Des, stock_Des, res, mensaje)
    End Function

    Public Overridable Function spTransferencias_Porkys_Det_Insert(id As ObjectParameter, iDOrigen As Nullable(Of Double), iDDestino As Nullable(Of Double), iDTransferencia As String, iDMaterial As String, iDMarca As String, iDUnidad As String, cantidad As Nullable(Of Decimal), ordenItem As Nullable(Of Short), nota_Det As String, userAdd As Nullable(Of Long), idStockMov_Orig As ObjectParameter, comprob As ObjectParameter, stock_Orig As ObjectParameter, idStockMov_Des As ObjectParameter, stock_Des As ObjectParameter, res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim iDOrigenParameter As ObjectParameter = If(iDOrigen.HasValue, New ObjectParameter("IDOrigen", iDOrigen), New ObjectParameter("IDOrigen", GetType(Double)))

        Dim iDDestinoParameter As ObjectParameter = If(iDDestino.HasValue, New ObjectParameter("IDDestino", iDDestino), New ObjectParameter("IDDestino", GetType(Double)))

        Dim iDTransferenciaParameter As ObjectParameter = If(iDTransferencia IsNot Nothing, New ObjectParameter("IDTransferencia", iDTransferencia), New ObjectParameter("IDTransferencia", GetType(String)))

        Dim iDMaterialParameter As ObjectParameter = If(iDMaterial IsNot Nothing, New ObjectParameter("IDMaterial", iDMaterial), New ObjectParameter("IDMaterial", GetType(String)))

        Dim iDMarcaParameter As ObjectParameter = If(iDMarca IsNot Nothing, New ObjectParameter("IDMarca", iDMarca), New ObjectParameter("IDMarca", GetType(String)))

        Dim iDUnidadParameter As ObjectParameter = If(iDUnidad IsNot Nothing, New ObjectParameter("IDUnidad", iDUnidad), New ObjectParameter("IDUnidad", GetType(String)))

        Dim cantidadParameter As ObjectParameter = If(cantidad.HasValue, New ObjectParameter("Cantidad", cantidad), New ObjectParameter("Cantidad", GetType(Decimal)))

        Dim ordenItemParameter As ObjectParameter = If(ordenItem.HasValue, New ObjectParameter("OrdenItem", ordenItem), New ObjectParameter("OrdenItem", GetType(Short)))

        Dim nota_DetParameter As ObjectParameter = If(nota_Det IsNot Nothing, New ObjectParameter("Nota_Det", nota_Det), New ObjectParameter("Nota_Det", GetType(String)))

        Dim userAddParameter As ObjectParameter = If(userAdd.HasValue, New ObjectParameter("UserAdd", userAdd), New ObjectParameter("UserAdd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTransferencias_Porkys_Det_Insert", id, iDOrigenParameter, iDDestinoParameter, iDTransferenciaParameter, iDMaterialParameter, iDMarcaParameter, iDUnidadParameter, cantidadParameter, ordenItemParameter, nota_DetParameter, userAddParameter, idStockMov_Orig, comprob, stock_Orig, idStockMov_Des, stock_Des, res, mensaje)
    End Function

    Public Overridable Function spTransferencias_Porkys_Det_Select_By_IDTrans(idTransferencia As String) As ObjectResult(Of spTransferencias_Porkys_Det_Select_By_IDTrans_Result)
        Dim idTransferenciaParameter As ObjectParameter = If(idTransferencia IsNot Nothing, New ObjectParameter("IdTransferencia", idTransferencia), New ObjectParameter("IdTransferencia", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spTransferencias_Porkys_Det_Select_By_IDTrans_Result)("spTransferencias_Porkys_Det_Select_By_IDTrans", idTransferenciaParameter)
    End Function

    Public Overridable Function spTransferencias_Porkys_Insert(iD As ObjectParameter, ordenTrans As ObjectParameter, iDOrigen As Nullable(Of Double), iDDestino As Nullable(Of Double), fecha As Nullable(Of Date), nota As String, iDEmpleado As String, iDEncargado As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim iDOrigenParameter As ObjectParameter = If(iDOrigen.HasValue, New ObjectParameter("IDOrigen", iDOrigen), New ObjectParameter("IDOrigen", GetType(Double)))

        Dim iDDestinoParameter As ObjectParameter = If(iDDestino.HasValue, New ObjectParameter("IDDestino", iDDestino), New ObjectParameter("IDDestino", GetType(Double)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim iDEmpleadoParameter As ObjectParameter = If(iDEmpleado IsNot Nothing, New ObjectParameter("IDEmpleado", iDEmpleado), New ObjectParameter("IDEmpleado", GetType(String)))

        Dim iDEncargadoParameter As ObjectParameter = If(iDEncargado IsNot Nothing, New ObjectParameter("IDEncargado", iDEncargado), New ObjectParameter("IDEncargado", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTransferencias_Porkys_Insert", iD, ordenTrans, iDOrigenParameter, iDDestinoParameter, fechaParameter, notaParameter, iDEmpleadoParameter, iDEncargadoParameter, useraddParameter, res)
    End Function

    Public Overridable Function spTransferencias_Porkys_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spTransferencias_Porkys_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spTransferencias_Porkys_Select_All_Result)("spTransferencias_Porkys_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spTransferencias_Update(iD As Nullable(Of Long), idIngreso As Nullable(Of Long), cuentaorigen As String, cuentaDestino As String, bancoOrigen As String, bancoDestino As String, fechaTransf As Nullable(Of Date), idMoneda As Nullable(Of Long), nroOP As String, monto As Nullable(Of Decimal), observaciones As String, mensaje As ObjectParameter, res As ObjectParameter) As Integer
        Dim iDParameter As ObjectParameter = If(iD.HasValue, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(Long)))

        Dim idIngresoParameter As ObjectParameter = If(idIngreso.HasValue, New ObjectParameter("IdIngreso", idIngreso), New ObjectParameter("IdIngreso", GetType(Long)))

        Dim cuentaorigenParameter As ObjectParameter = If(cuentaorigen IsNot Nothing, New ObjectParameter("Cuentaorigen", cuentaorigen), New ObjectParameter("Cuentaorigen", GetType(String)))

        Dim cuentaDestinoParameter As ObjectParameter = If(cuentaDestino IsNot Nothing, New ObjectParameter("CuentaDestino", cuentaDestino), New ObjectParameter("CuentaDestino", GetType(String)))

        Dim bancoOrigenParameter As ObjectParameter = If(bancoOrigen IsNot Nothing, New ObjectParameter("BancoOrigen", bancoOrigen), New ObjectParameter("BancoOrigen", GetType(String)))

        Dim bancoDestinoParameter As ObjectParameter = If(bancoDestino IsNot Nothing, New ObjectParameter("BancoDestino", bancoDestino), New ObjectParameter("BancoDestino", GetType(String)))

        Dim fechaTransfParameter As ObjectParameter = If(fechaTransf.HasValue, New ObjectParameter("FechaTransf", fechaTransf), New ObjectParameter("FechaTransf", GetType(Date)))

        Dim idMonedaParameter As ObjectParameter = If(idMoneda.HasValue, New ObjectParameter("IdMoneda", idMoneda), New ObjectParameter("IdMoneda", GetType(Long)))

        Dim nroOPParameter As ObjectParameter = If(nroOP IsNot Nothing, New ObjectParameter("NroOP", nroOP), New ObjectParameter("NroOP", GetType(String)))

        Dim montoParameter As ObjectParameter = If(monto.HasValue, New ObjectParameter("Monto", monto), New ObjectParameter("Monto", GetType(Decimal)))

        Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("Observaciones", observaciones), New ObjectParameter("Observaciones", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTransferencias_Update", iDParameter, idIngresoParameter, cuentaorigenParameter, cuentaDestinoParameter, bancoOrigenParameter, bancoDestinoParameter, fechaTransfParameter, idMonedaParameter, nroOPParameter, montoParameter, observacionesParameter, mensaje, res)
    End Function

    Public Overridable Function spTransRecepWEB_Delete_Finalizar(ordenPedido As String, nota As String, userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim ordenPedidoParameter As ObjectParameter = If(ordenPedido IsNot Nothing, New ObjectParameter("OrdenPedido", ordenPedido), New ObjectParameter("OrdenPedido", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTransRecepWEB_Delete_Finalizar", ordenPedidoParameter, notaParameter, userdelParameter, res)
    End Function

    Public Overridable Function spTransRecepWEB_Det_Enviado_Insert(id As ObjectParameter, iDNroMov As String, iDMaterial As String, iDMarca As String, iDUnidad As String, unidadFac As Nullable(Of Decimal), cantidadPACK As Nullable(Of Decimal), precio As Nullable(Of Decimal), qtyPedida As Nullable(Of Decimal), subtotalPedido As Nullable(Of Decimal), nota_Det As String, ordenItem As Nullable(Of Short), res As ObjectParameter) As Integer
        Dim iDNroMovParameter As ObjectParameter = If(iDNroMov IsNot Nothing, New ObjectParameter("IDNroMov", iDNroMov), New ObjectParameter("IDNroMov", GetType(String)))

        Dim iDMaterialParameter As ObjectParameter = If(iDMaterial IsNot Nothing, New ObjectParameter("IDMaterial", iDMaterial), New ObjectParameter("IDMaterial", GetType(String)))

        Dim iDMarcaParameter As ObjectParameter = If(iDMarca IsNot Nothing, New ObjectParameter("IDMarca", iDMarca), New ObjectParameter("IDMarca", GetType(String)))

        Dim iDUnidadParameter As ObjectParameter = If(iDUnidad IsNot Nothing, New ObjectParameter("IDUnidad", iDUnidad), New ObjectParameter("IDUnidad", GetType(String)))

        Dim unidadFacParameter As ObjectParameter = If(unidadFac.HasValue, New ObjectParameter("UnidadFac", unidadFac), New ObjectParameter("UnidadFac", GetType(Decimal)))

        Dim cantidadPACKParameter As ObjectParameter = If(cantidadPACK.HasValue, New ObjectParameter("CantidadPACK", cantidadPACK), New ObjectParameter("CantidadPACK", GetType(Decimal)))

        Dim precioParameter As ObjectParameter = If(precio.HasValue, New ObjectParameter("Precio", precio), New ObjectParameter("Precio", GetType(Decimal)))

        Dim qtyPedidaParameter As ObjectParameter = If(qtyPedida.HasValue, New ObjectParameter("QtyPedida", qtyPedida), New ObjectParameter("QtyPedida", GetType(Decimal)))

        Dim subtotalPedidoParameter As ObjectParameter = If(subtotalPedido.HasValue, New ObjectParameter("SubtotalPedido", subtotalPedido), New ObjectParameter("SubtotalPedido", GetType(Decimal)))

        Dim nota_DetParameter As ObjectParameter = If(nota_Det IsNot Nothing, New ObjectParameter("Nota_Det", nota_Det), New ObjectParameter("Nota_Det", GetType(String)))

        Dim ordenItemParameter As ObjectParameter = If(ordenItem.HasValue, New ObjectParameter("OrdenItem", ordenItem), New ObjectParameter("OrdenItem", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTransRecepWEB_Det_Enviado_Insert", id, iDNroMovParameter, iDMaterialParameter, iDMarcaParameter, iDUnidadParameter, unidadFacParameter, cantidadPACKParameter, precioParameter, qtyPedidaParameter, subtotalPedidoParameter, nota_DetParameter, ordenItemParameter, res)
    End Function

    Public Overridable Function spTransRecepWEB_Det_Insert(id As ObjectParameter, iDNroMov As String, iDMaterial As String, iDMarca As String, iDUnidad As String, unidadFac As Nullable(Of Decimal), cantidadPACK As Nullable(Of Decimal), precio As Nullable(Of Decimal), qtyPedida As Nullable(Of Decimal), qtyEnviada As Nullable(Of Decimal), qtySaldo As Nullable(Of Decimal), subtotalPedido As Nullable(Of Decimal), subtotalRecepcionado As Nullable(Of Decimal), status As String, nota_Det As String, ordenItem As Nullable(Of Short), res As ObjectParameter) As ObjectResult(Of String)
        Dim iDNroMovParameter As ObjectParameter = If(iDNroMov IsNot Nothing, New ObjectParameter("IDNroMov", iDNroMov), New ObjectParameter("IDNroMov", GetType(String)))

        Dim iDMaterialParameter As ObjectParameter = If(iDMaterial IsNot Nothing, New ObjectParameter("IDMaterial", iDMaterial), New ObjectParameter("IDMaterial", GetType(String)))

        Dim iDMarcaParameter As ObjectParameter = If(iDMarca IsNot Nothing, New ObjectParameter("IDMarca", iDMarca), New ObjectParameter("IDMarca", GetType(String)))

        Dim iDUnidadParameter As ObjectParameter = If(iDUnidad IsNot Nothing, New ObjectParameter("IDUnidad", iDUnidad), New ObjectParameter("IDUnidad", GetType(String)))

        Dim unidadFacParameter As ObjectParameter = If(unidadFac.HasValue, New ObjectParameter("UnidadFac", unidadFac), New ObjectParameter("UnidadFac", GetType(Decimal)))

        Dim cantidadPACKParameter As ObjectParameter = If(cantidadPACK.HasValue, New ObjectParameter("CantidadPACK", cantidadPACK), New ObjectParameter("CantidadPACK", GetType(Decimal)))

        Dim precioParameter As ObjectParameter = If(precio.HasValue, New ObjectParameter("Precio", precio), New ObjectParameter("Precio", GetType(Decimal)))

        Dim qtyPedidaParameter As ObjectParameter = If(qtyPedida.HasValue, New ObjectParameter("QtyPedida", qtyPedida), New ObjectParameter("QtyPedida", GetType(Decimal)))

        Dim qtyEnviadaParameter As ObjectParameter = If(qtyEnviada.HasValue, New ObjectParameter("QtyEnviada", qtyEnviada), New ObjectParameter("QtyEnviada", GetType(Decimal)))

        Dim qtySaldoParameter As ObjectParameter = If(qtySaldo.HasValue, New ObjectParameter("QtySaldo", qtySaldo), New ObjectParameter("QtySaldo", GetType(Decimal)))

        Dim subtotalPedidoParameter As ObjectParameter = If(subtotalPedido.HasValue, New ObjectParameter("SubtotalPedido", subtotalPedido), New ObjectParameter("SubtotalPedido", GetType(Decimal)))

        Dim subtotalRecepcionadoParameter As ObjectParameter = If(subtotalRecepcionado.HasValue, New ObjectParameter("SubtotalRecepcionado", subtotalRecepcionado), New ObjectParameter("SubtotalRecepcionado", GetType(Decimal)))

        Dim statusParameter As ObjectParameter = If(status IsNot Nothing, New ObjectParameter("Status", status), New ObjectParameter("Status", GetType(String)))

        Dim nota_DetParameter As ObjectParameter = If(nota_Det IsNot Nothing, New ObjectParameter("Nota_Det", nota_Det), New ObjectParameter("Nota_Det", GetType(String)))

        Dim ordenItemParameter As ObjectParameter = If(ordenItem.HasValue, New ObjectParameter("OrdenItem", ordenItem), New ObjectParameter("OrdenItem", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spTransRecepWEB_Det_Insert", id, iDNroMovParameter, iDMaterialParameter, iDMarcaParameter, iDUnidadParameter, unidadFacParameter, cantidadPACKParameter, precioParameter, qtyPedidaParameter, qtyEnviadaParameter, qtySaldoParameter, subtotalPedidoParameter, subtotalRecepcionadoParameter, statusParameter, nota_DetParameter, ordenItemParameter, res)
    End Function

    Public Overridable Function spTransRecepWEB_Det_Select_By_IDPedidosWEB(iDTransRecepWEB As String) As ObjectResult(Of spTransRecepWEB_Det_Select_By_IDPedidosWEB_Result)
        Dim iDTransRecepWEBParameter As ObjectParameter = If(iDTransRecepWEB IsNot Nothing, New ObjectParameter("IDTransRecepWEB", iDTransRecepWEB), New ObjectParameter("IDTransRecepWEB", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spTransRecepWEB_Det_Select_By_IDPedidosWEB_Result)("spTransRecepWEB_Det_Select_By_IDPedidosWEB", iDTransRecepWEBParameter)
    End Function

    Public Overridable Function spTransRecepWEB_Det_Update(id As Nullable(Of Long), idAlmacen As Nullable(Of Long), iDNroMov As String, iDMaterial As String, iDUnidad As String, cantidadPACK As Nullable(Of Decimal), precio As Nullable(Of Decimal), qtyEnviada As Nullable(Of Decimal), subtotalPedido As Nullable(Of Decimal), subtotalRecepcionado As Nullable(Of Decimal), nOTA_DET As String, unidadFac As Nullable(Of Decimal), userupd As Nullable(Of Long), fechaCan As Nullable(Of Date), idStockMov As ObjectParameter, comprob As ObjectParameter, stock As ObjectParameter, res As ObjectParameter, mensaje As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim idAlmacenParameter As ObjectParameter = If(idAlmacen.HasValue, New ObjectParameter("idAlmacen", idAlmacen), New ObjectParameter("idAlmacen", GetType(Long)))

        Dim iDNroMovParameter As ObjectParameter = If(iDNroMov IsNot Nothing, New ObjectParameter("IDNroMov", iDNroMov), New ObjectParameter("IDNroMov", GetType(String)))

        Dim iDMaterialParameter As ObjectParameter = If(iDMaterial IsNot Nothing, New ObjectParameter("IDMaterial", iDMaterial), New ObjectParameter("IDMaterial", GetType(String)))

        Dim iDUnidadParameter As ObjectParameter = If(iDUnidad IsNot Nothing, New ObjectParameter("IDUnidad", iDUnidad), New ObjectParameter("IDUnidad", GetType(String)))

        Dim cantidadPACKParameter As ObjectParameter = If(cantidadPACK.HasValue, New ObjectParameter("CantidadPACK", cantidadPACK), New ObjectParameter("CantidadPACK", GetType(Decimal)))

        Dim precioParameter As ObjectParameter = If(precio.HasValue, New ObjectParameter("Precio", precio), New ObjectParameter("Precio", GetType(Decimal)))

        Dim qtyEnviadaParameter As ObjectParameter = If(qtyEnviada.HasValue, New ObjectParameter("QtyEnviada", qtyEnviada), New ObjectParameter("QtyEnviada", GetType(Decimal)))

        Dim subtotalPedidoParameter As ObjectParameter = If(subtotalPedido.HasValue, New ObjectParameter("SubtotalPedido", subtotalPedido), New ObjectParameter("SubtotalPedido", GetType(Decimal)))

        Dim subtotalRecepcionadoParameter As ObjectParameter = If(subtotalRecepcionado.HasValue, New ObjectParameter("SubtotalRecepcionado", subtotalRecepcionado), New ObjectParameter("SubtotalRecepcionado", GetType(Decimal)))

        Dim nOTA_DETParameter As ObjectParameter = If(nOTA_DET IsNot Nothing, New ObjectParameter("NOTA_DET", nOTA_DET), New ObjectParameter("NOTA_DET", GetType(String)))

        Dim unidadFacParameter As ObjectParameter = If(unidadFac.HasValue, New ObjectParameter("UnidadFac", unidadFac), New ObjectParameter("UnidadFac", GetType(Decimal)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Dim fechaCanParameter As ObjectParameter = If(fechaCan.HasValue, New ObjectParameter("FechaCan", fechaCan), New ObjectParameter("FechaCan", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTransRecepWEB_Det_Update", idParameter, idAlmacenParameter, iDNroMovParameter, iDMaterialParameter, iDUnidadParameter, cantidadPACKParameter, precioParameter, qtyEnviadaParameter, subtotalPedidoParameter, subtotalRecepcionadoParameter, nOTA_DETParameter, unidadFacParameter, userupdParameter, fechaCanParameter, idStockMov, comprob, stock, res, mensaje)
    End Function

    Public Overridable Function spTransRecepWEB_Enviado_Insert(iD As ObjectParameter, nroMov As ObjectParameter, nroAsociado As String, tipo As String, fecha As Nullable(Of Date), iDOrigen As Nullable(Of Long), iDDestino As Nullable(Of Long), totalPedido As Nullable(Of Decimal), nota As String, iDEmpleado As String, res As ObjectParameter) As Integer
        Dim nroAsociadoParameter As ObjectParameter = If(nroAsociado IsNot Nothing, New ObjectParameter("NroAsociado", nroAsociado), New ObjectParameter("NroAsociado", GetType(String)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("Tipo", tipo), New ObjectParameter("Tipo", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim iDOrigenParameter As ObjectParameter = If(iDOrigen.HasValue, New ObjectParameter("IDOrigen", iDOrigen), New ObjectParameter("IDOrigen", GetType(Long)))

        Dim iDDestinoParameter As ObjectParameter = If(iDDestino.HasValue, New ObjectParameter("IDDestino", iDDestino), New ObjectParameter("IDDestino", GetType(Long)))

        Dim totalPedidoParameter As ObjectParameter = If(totalPedido.HasValue, New ObjectParameter("TotalPedido", totalPedido), New ObjectParameter("TotalPedido", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim iDEmpleadoParameter As ObjectParameter = If(iDEmpleado IsNot Nothing, New ObjectParameter("IDEmpleado", iDEmpleado), New ObjectParameter("IDEmpleado", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTransRecepWEB_Enviado_Insert", iD, nroMov, nroAsociadoParameter, tipoParameter, fechaParameter, iDOrigenParameter, iDDestinoParameter, totalPedidoParameter, notaParameter, iDEmpleadoParameter, res)
    End Function

    Public Overridable Function spTransRecepWEB_Insert(iD As ObjectParameter, nroMov As ObjectParameter, nroAsociado As String, tipo As String, fecha As Nullable(Of Date), iDOrigen As Nullable(Of Long), iDDestino As Nullable(Of Long), totalPedido As Nullable(Of Decimal), totalRecepcionado As Nullable(Of Decimal), status As String, nota As String, iDEmpleado As String, descargarEnOrigen As Nullable(Of Boolean), descargarEnDestino As Nullable(Of Boolean), res As ObjectParameter) As ObjectResult(Of String)
        Dim nroAsociadoParameter As ObjectParameter = If(nroAsociado IsNot Nothing, New ObjectParameter("NroAsociado", nroAsociado), New ObjectParameter("NroAsociado", GetType(String)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("Tipo", tipo), New ObjectParameter("Tipo", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim iDOrigenParameter As ObjectParameter = If(iDOrigen.HasValue, New ObjectParameter("IDOrigen", iDOrigen), New ObjectParameter("IDOrigen", GetType(Long)))

        Dim iDDestinoParameter As ObjectParameter = If(iDDestino.HasValue, New ObjectParameter("IDDestino", iDDestino), New ObjectParameter("IDDestino", GetType(Long)))

        Dim totalPedidoParameter As ObjectParameter = If(totalPedido.HasValue, New ObjectParameter("TotalPedido", totalPedido), New ObjectParameter("TotalPedido", GetType(Decimal)))

        Dim totalRecepcionadoParameter As ObjectParameter = If(totalRecepcionado.HasValue, New ObjectParameter("TotalRecepcionado", totalRecepcionado), New ObjectParameter("TotalRecepcionado", GetType(Decimal)))

        Dim statusParameter As ObjectParameter = If(status IsNot Nothing, New ObjectParameter("Status", status), New ObjectParameter("Status", GetType(String)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim iDEmpleadoParameter As ObjectParameter = If(iDEmpleado IsNot Nothing, New ObjectParameter("IDEmpleado", iDEmpleado), New ObjectParameter("IDEmpleado", GetType(String)))

        Dim descargarEnOrigenParameter As ObjectParameter = If(descargarEnOrigen.HasValue, New ObjectParameter("DescargarEnOrigen", descargarEnOrigen), New ObjectParameter("DescargarEnOrigen", GetType(Boolean)))

        Dim descargarEnDestinoParameter As ObjectParameter = If(descargarEnDestino.HasValue, New ObjectParameter("DescargarEnDestino", descargarEnDestino), New ObjectParameter("DescargarEnDestino", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spTransRecepWEB_Insert", iD, nroMov, nroAsociadoParameter, tipoParameter, fechaParameter, iDOrigenParameter, iDDestinoParameter, totalPedidoParameter, totalRecepcionadoParameter, statusParameter, notaParameter, iDEmpleadoParameter, descargarEnOrigenParameter, descargarEnDestinoParameter, res)
    End Function

    Public Overridable Function spTransRecepWEB_Select_All(origen As Nullable(Of Long), eliminado As Nullable(Of Boolean), pendientes As Nullable(Of Boolean), pendientesyCumplidas As Nullable(Of Boolean), enviados As Nullable(Of Boolean)) As ObjectResult(Of spTransRecepWEB_Select_All_Result)
        Dim origenParameter As ObjectParameter = If(origen.HasValue, New ObjectParameter("Origen", origen), New ObjectParameter("Origen", GetType(Long)))

        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Dim pendientesParameter As ObjectParameter = If(pendientes.HasValue, New ObjectParameter("Pendientes", pendientes), New ObjectParameter("Pendientes", GetType(Boolean)))

        Dim pendientesyCumplidasParameter As ObjectParameter = If(pendientesyCumplidas.HasValue, New ObjectParameter("PendientesyCumplidas", pendientesyCumplidas), New ObjectParameter("PendientesyCumplidas", GetType(Boolean)))

        Dim enviadosParameter As ObjectParameter = If(enviados.HasValue, New ObjectParameter("Enviados", enviados), New ObjectParameter("Enviados", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spTransRecepWEB_Select_All_Result)("spTransRecepWEB_Select_All", origenParameter, eliminadoParameter, pendientesParameter, pendientesyCumplidasParameter, enviadosParameter)
    End Function

    Public Overridable Function spTransRecepWEB_Update(iD As Nullable(Of Long), iDALMACEN As Nullable(Of Long), nROMOV As String, tOTALPEDIDO As Nullable(Of Decimal), tOTALRECEP As Nullable(Of Decimal), nOTA As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim iDParameter As ObjectParameter = If(iD.HasValue, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(Long)))

        Dim iDALMACENParameter As ObjectParameter = If(iDALMACEN.HasValue, New ObjectParameter("IDALMACEN", iDALMACEN), New ObjectParameter("IDALMACEN", GetType(Long)))

        Dim nROMOVParameter As ObjectParameter = If(nROMOV IsNot Nothing, New ObjectParameter("NROMOV", nROMOV), New ObjectParameter("NROMOV", GetType(String)))

        Dim tOTALPEDIDOParameter As ObjectParameter = If(tOTALPEDIDO.HasValue, New ObjectParameter("TOTALPEDIDO", tOTALPEDIDO), New ObjectParameter("TOTALPEDIDO", GetType(Decimal)))

        Dim tOTALRECEPParameter As ObjectParameter = If(tOTALRECEP.HasValue, New ObjectParameter("TOTALRECEP", tOTALRECEP), New ObjectParameter("TOTALRECEP", GetType(Decimal)))

        Dim nOTAParameter As ObjectParameter = If(nOTA IsNot Nothing, New ObjectParameter("NOTA", nOTA), New ObjectParameter("NOTA", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spTransRecepWEB_Update", iDParameter, iDALMACENParameter, nROMOVParameter, tOTALPEDIDOParameter, tOTALRECEPParameter, nOTAParameter, userupdParameter, res)
    End Function

    Public Overridable Function spUnidades_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUnidades_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spUnidades_Insert(id As ObjectParameter, codigo As String, nombre As String, useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUnidades_Insert", id, codigoParameter, nombreParameter, useraddParameter, res)
    End Function

    Public Overridable Function spUnidades_Select_All(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spUnidades_Select_All_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("Eliminado", eliminado), New ObjectParameter("Eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spUnidades_Select_All_Result)("spUnidades_Select_All", eliminadoParameter)
    End Function

    Public Overridable Function spUnidades_Select_By_Codigo(codigo As String, iDunidad As ObjectParameter, unidad As ObjectParameter, codunidad As ObjectParameter, res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUnidades_Select_By_Codigo", codigoParameter, iDunidad, unidad, codunidad, res)
    End Function

    Public Overridable Function spUnidades_Update(id As Nullable(Of Long), codigo As String, nombre As String, userupd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUnidades_Update", idParameter, codigoParameter, nombreParameter, userupdParameter, res)
    End Function

    Public Overridable Function spUsuarios_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuarios_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spUsuarios_Insert(id As ObjectParameter, codigo As String, nombre As String, apellido As String, pass As String, email As String, tipo As String, gerencia As Nullable(Of Long), useradd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("apellido", apellido), New ObjectParameter("apellido", GetType(String)))

        Dim passParameter As ObjectParameter = If(pass IsNot Nothing, New ObjectParameter("pass", pass), New ObjectParameter("pass", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("email", email), New ObjectParameter("email", GetType(String)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("tipo", tipo), New ObjectParameter("tipo", GetType(String)))

        Dim gerenciaParameter As ObjectParameter = If(gerencia.HasValue, New ObjectParameter("gerencia", gerencia), New ObjectParameter("gerencia", GetType(Long)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuarios_Insert", id, codigoParameter, nombreParameter, apellidoParameter, passParameter, emailParameter, tipoParameter, gerenciaParameter, useraddParameter, res)
    End Function

    Public Overridable Function spUsuarios_Seg_Insert(id As ObjectParameter, codigo As String, nombre As String, apellido As String, pass As String, email As String, tipo As String, gerencia As Nullable(Of Long), useradd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("apellido", apellido), New ObjectParameter("apellido", GetType(String)))

        Dim passParameter As ObjectParameter = If(pass IsNot Nothing, New ObjectParameter("pass", pass), New ObjectParameter("pass", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("email", email), New ObjectParameter("email", GetType(String)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("tipo", tipo), New ObjectParameter("tipo", GetType(String)))

        Dim gerenciaParameter As ObjectParameter = If(gerencia.HasValue, New ObjectParameter("gerencia", gerencia), New ObjectParameter("gerencia", GetType(Long)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuarios_Seg_Insert", id, codigoParameter, nombreParameter, apellidoParameter, passParameter, emailParameter, tipoParameter, gerenciaParameter, useraddParameter, res)
    End Function

    Public Overridable Function spUsuarios_Seg_Select_All() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuarios_Seg_Select_All")
    End Function

    Public Overridable Function spUsuarios_Seg_Update(id As Nullable(Of Long), codigo As String, nombre As String, apellido As String, idsector As Nullable(Of Long), email As String, userupd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("apellido", apellido), New ObjectParameter("apellido", GetType(String)))

        Dim idsectorParameter As ObjectParameter = If(idsector.HasValue, New ObjectParameter("idsector", idsector), New ObjectParameter("idsector", GetType(Long)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("email", email), New ObjectParameter("email", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuarios_Seg_Update", idParameter, codigoParameter, nombreParameter, apellidoParameter, idsectorParameter, emailParameter, userupdParameter, res)
    End Function

    Public Overridable Function spUsuarios_Select_All() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuarios_Select_All")
    End Function

    Public Overridable Function spUsuarios_Select_By_ID(iD As Nullable(Of Long)) As ObjectResult(Of spUsuarios_Select_By_ID_Result)
        Dim iDParameter As ObjectParameter = If(iD.HasValue, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spUsuarios_Select_By_ID_Result)("spUsuarios_Select_By_ID", iDParameter)
    End Function

    Public Overridable Function spUsuarios_Update(id As Nullable(Of Long), codigo As String, nombre As String, apellido As String, pass As String, email As String, tipo As String, gerencia As Nullable(Of Long), userupd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("apellido", apellido), New ObjectParameter("apellido", GetType(String)))

        Dim passParameter As ObjectParameter = If(pass IsNot Nothing, New ObjectParameter("pass", pass), New ObjectParameter("pass", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("email", email), New ObjectParameter("email", GetType(String)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("tipo", tipo), New ObjectParameter("tipo", GetType(String)))

        Dim gerenciaParameter As ObjectParameter = If(gerencia.HasValue, New ObjectParameter("gerencia", gerencia), New ObjectParameter("gerencia", GetType(Long)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuarios_Update", idParameter, codigoParameter, nombreParameter, apellidoParameter, passParameter, emailParameter, tipoParameter, gerenciaParameter, userupdParameter, res)
    End Function

    Public Overridable Function spUsuarios_Update_Pass(id As Nullable(Of Long), pass As String, userupd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim passParameter As ObjectParameter = If(pass IsNot Nothing, New ObjectParameter("pass", pass), New ObjectParameter("pass", GetType(String)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuarios_Update_Pass", idParameter, passParameter, userupdParameter, res)
    End Function

    Public Overridable Function spUsuariosCambiarContrasena(iduser As Nullable(Of Long), pass As String, res As ObjectParameter) As Integer
        Dim iduserParameter As ObjectParameter = If(iduser.HasValue, New ObjectParameter("iduser", iduser), New ObjectParameter("iduser", GetType(Long)))

        Dim passParameter As ObjectParameter = If(pass IsNot Nothing, New ObjectParameter("pass", pass), New ObjectParameter("pass", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuariosCambiarContrasena", iduserParameter, passParameter, res)
    End Function

    Public Overridable Function spUsuariosComprobar(iduser As ObjectParameter, codigo As String, nombre As ObjectParameter, pass As String, ok As ObjectParameter, vencida As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Dim passParameter As ObjectParameter = If(pass IsNot Nothing, New ObjectParameter("pass", pass), New ObjectParameter("pass", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuariosComprobar", iduser, codigoParameter, nombre, passParameter, ok, vencida)
    End Function

    Public Overridable Function spUsuariosComprobar2(iduser As ObjectParameter, usuario As String, nombre As ObjectParameter, celular As ObjectParameter, email As ObjectParameter, pass As String, ok As ObjectParameter, vencida As ObjectParameter, repetida As ObjectParameter) As Integer
        Dim usuarioParameter As ObjectParameter = If(usuario IsNot Nothing, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(String)))

        Dim passParameter As ObjectParameter = If(pass IsNot Nothing, New ObjectParameter("pass", pass), New ObjectParameter("pass", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuariosComprobar2", iduser, usuarioParameter, nombre, celular, email, passParameter, ok, vencida, repetida)
    End Function

    Public Overridable Function spUsuariosEnviarContrasena(iduser As String, pass As String, sHA As String, res As ObjectParameter) As Integer
        Dim iduserParameter As ObjectParameter = If(iduser IsNot Nothing, New ObjectParameter("iduser", iduser), New ObjectParameter("iduser", GetType(String)))

        Dim passParameter As ObjectParameter = If(pass IsNot Nothing, New ObjectParameter("pass", pass), New ObjectParameter("pass", GetType(String)))

        Dim sHAParameter As ObjectParameter = If(sHA IsNot Nothing, New ObjectParameter("SHA", sHA), New ObjectParameter("SHA", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuariosEnviarContrasena", iduserParameter, passParameter, sHAParameter, res)
    End Function

    Public Overridable Function spUsuariosPerfiles_Delete(id As Nullable(Of Long), userdel As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim userdelParameter As ObjectParameter = If(userdel.HasValue, New ObjectParameter("userdel", userdel), New ObjectParameter("userdel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuariosPerfiles_Delete", idParameter, userdelParameter, res)
    End Function

    Public Overridable Function spUsuariosPerfiles_Insert(id As ObjectParameter, iduser As Nullable(Of Long), idperfil As Nullable(Of Long), useradd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim iduserParameter As ObjectParameter = If(iduser.HasValue, New ObjectParameter("iduser", iduser), New ObjectParameter("iduser", GetType(Long)))

        Dim idperfilParameter As ObjectParameter = If(idperfil.HasValue, New ObjectParameter("idperfil", idperfil), New ObjectParameter("idperfil", GetType(Long)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuariosPerfiles_Insert", id, iduserParameter, idperfilParameter, useraddParameter, res)
    End Function

    Public Overridable Function spUsuariosPerfiles_Select_All() As ObjectResult(Of spUsuariosPerfiles_Select_All_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spUsuariosPerfiles_Select_All_Result)("spUsuariosPerfiles_Select_All")
    End Function

    Public Overridable Function spUsuariosPerfiles_Update(id As Nullable(Of Long), iduser As Nullable(Of Long), idperfil As Nullable(Of Long), userupd As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Long)))

        Dim iduserParameter As ObjectParameter = If(iduser.HasValue, New ObjectParameter("iduser", iduser), New ObjectParameter("iduser", GetType(Long)))

        Dim idperfilParameter As ObjectParameter = If(idperfil.HasValue, New ObjectParameter("idperfil", idperfil), New ObjectParameter("idperfil", GetType(Long)))

        Dim userupdParameter As ObjectParameter = If(userupd.HasValue, New ObjectParameter("userupd", userupd), New ObjectParameter("userupd", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUsuariosPerfiles_Update", idParameter, iduserParameter, idperfilParameter, userupdParameter, res)
    End Function

    Public Overridable Function spVentas_Clientes_Select_All() As ObjectResult(Of spVentas_Clientes_Select_All_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spVentas_Clientes_Select_All_Result)("spVentas_Clientes_Select_All")
    End Function

    Public Overridable Function spVentas_Clientes_Select_All2(cliente As String, desde As Nullable(Of Date), hasta As Nullable(Of Date)) As ObjectResult(Of spVentas_Clientes_Select_All2_Result)
        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("cliente", cliente), New ObjectParameter("cliente", GetType(String)))

        Dim desdeParameter As ObjectParameter = If(desde.HasValue, New ObjectParameter("desde", desde), New ObjectParameter("desde", GetType(Date)))

        Dim hastaParameter As ObjectParameter = If(hasta.HasValue, New ObjectParameter("hasta", hasta), New ObjectParameter("hasta", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spVentas_Clientes_Select_All2_Result)("spVentas_Clientes_Select_All2", clienteParameter, desdeParameter, hastaParameter)
    End Function

    Public Overridable Function spVentas_Delete_All(id As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spVentas_Delete_All", idParameter, res)
    End Function

    Public Overridable Function spVentas_Det_Insert(idVenta As Nullable(Of Long), idAlmacen As Nullable(Of Long), idProducto As String, idUnidad As String, producto As String, cantidad As Nullable(Of Integer), precioUni As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), descxUnidad As Nullable(Of Decimal), totalDesc As Nullable(Of Decimal), subtotalFinal As Nullable(Of Decimal), transInterna As Nullable(Of Boolean), idStockMov As ObjectParameter, stock As ObjectParameter, res As ObjectParameter, idStockMovReceptor As ObjectParameter, stockReceptor As ObjectParameter) As Integer
        Dim idVentaParameter As ObjectParameter = If(idVenta.HasValue, New ObjectParameter("IdVenta", idVenta), New ObjectParameter("IdVenta", GetType(Long)))

        Dim idAlmacenParameter As ObjectParameter = If(idAlmacen.HasValue, New ObjectParameter("IdAlmacen", idAlmacen), New ObjectParameter("IdAlmacen", GetType(Long)))

        Dim idProductoParameter As ObjectParameter = If(idProducto IsNot Nothing, New ObjectParameter("IdProducto", idProducto), New ObjectParameter("IdProducto", GetType(String)))

        Dim idUnidadParameter As ObjectParameter = If(idUnidad IsNot Nothing, New ObjectParameter("IdUnidad", idUnidad), New ObjectParameter("IdUnidad", GetType(String)))

        Dim productoParameter As ObjectParameter = If(producto IsNot Nothing, New ObjectParameter("Producto", producto), New ObjectParameter("Producto", GetType(String)))

        Dim cantidadParameter As ObjectParameter = If(cantidad.HasValue, New ObjectParameter("Cantidad", cantidad), New ObjectParameter("Cantidad", GetType(Integer)))

        Dim precioUniParameter As ObjectParameter = If(precioUni.HasValue, New ObjectParameter("PrecioUni", precioUni), New ObjectParameter("PrecioUni", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim descxUnidadParameter As ObjectParameter = If(descxUnidad.HasValue, New ObjectParameter("DescxUnidad", descxUnidad), New ObjectParameter("DescxUnidad", GetType(Decimal)))

        Dim totalDescParameter As ObjectParameter = If(totalDesc.HasValue, New ObjectParameter("TotalDesc", totalDesc), New ObjectParameter("TotalDesc", GetType(Decimal)))

        Dim subtotalFinalParameter As ObjectParameter = If(subtotalFinal.HasValue, New ObjectParameter("SubtotalFinal", subtotalFinal), New ObjectParameter("SubtotalFinal", GetType(Decimal)))

        Dim transInternaParameter As ObjectParameter = If(transInterna.HasValue, New ObjectParameter("TransInterna", transInterna), New ObjectParameter("TransInterna", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spVentas_Det_Insert", idVentaParameter, idAlmacenParameter, idProductoParameter, idUnidadParameter, productoParameter, cantidadParameter, precioUniParameter, subtotalParameter, descxUnidadParameter, totalDescParameter, subtotalFinalParameter, transInternaParameter, idStockMov, stock, res, idStockMovReceptor, stockReceptor)
    End Function

    Public Overridable Function spVentas_Det_Select_By_IdVenta(idVenta As Nullable(Of Long)) As ObjectResult(Of spVentas_Det_Select_By_IdVenta_Result)
        Dim idVentaParameter As ObjectParameter = If(idVenta.HasValue, New ObjectParameter("IdVenta", idVenta), New ObjectParameter("IdVenta", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spVentas_Det_Select_By_IdVenta_Result)("spVentas_Det_Select_By_IdVenta", idVentaParameter)
    End Function

    Public Overridable Function spVentas_Insert(id As ObjectParameter, idCliente As String, cliente As String, idVendedor As String, vendedor As String, fecha As Nullable(Of Date), subtotal As Nullable(Of Decimal), descuento As Nullable(Of Boolean), porcentaje As Nullable(Of Boolean), valorDescuento As Nullable(Of Decimal), total As Nullable(Of Decimal), observacion As String, pagoContado As Nullable(Of Boolean), transInterna As Nullable(Of Boolean), userAdd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idClienteParameter As ObjectParameter = If(idCliente IsNot Nothing, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(String)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim idVendedorParameter As ObjectParameter = If(idVendedor IsNot Nothing, New ObjectParameter("IdVendedor", idVendedor), New ObjectParameter("IdVendedor", GetType(String)))

        Dim vendedorParameter As ObjectParameter = If(vendedor IsNot Nothing, New ObjectParameter("Vendedor", vendedor), New ObjectParameter("Vendedor", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim descuentoParameter As ObjectParameter = If(descuento.HasValue, New ObjectParameter("Descuento", descuento), New ObjectParameter("Descuento", GetType(Boolean)))

        Dim porcentajeParameter As ObjectParameter = If(porcentaje.HasValue, New ObjectParameter("Porcentaje", porcentaje), New ObjectParameter("Porcentaje", GetType(Boolean)))

        Dim valorDescuentoParameter As ObjectParameter = If(valorDescuento.HasValue, New ObjectParameter("ValorDescuento", valorDescuento), New ObjectParameter("ValorDescuento", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim observacionParameter As ObjectParameter = If(observacion IsNot Nothing, New ObjectParameter("Observacion", observacion), New ObjectParameter("Observacion", GetType(String)))

        Dim pagoContadoParameter As ObjectParameter = If(pagoContado.HasValue, New ObjectParameter("PagoContado", pagoContado), New ObjectParameter("PagoContado", GetType(Boolean)))

        Dim transInternaParameter As ObjectParameter = If(transInterna.HasValue, New ObjectParameter("TransInterna", transInterna), New ObjectParameter("TransInterna", GetType(Boolean)))

        Dim userAddParameter As ObjectParameter = If(userAdd.HasValue, New ObjectParameter("UserAdd", userAdd), New ObjectParameter("UserAdd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spVentas_Insert", id, idClienteParameter, clienteParameter, idVendedorParameter, vendedorParameter, fechaParameter, subtotalParameter, descuentoParameter, porcentajeParameter, valorDescuentoParameter, totalParameter, observacionParameter, pagoContadoParameter, transInternaParameter, userAddParameter, res)
    End Function

    Public Overridable Function spVentas_PagoTarjetas_Insert(id As ObjectParameter, idVenta As Nullable(Of Long), codTarjeta1 As String, planTarjeta1 As String, cuotas1 As Nullable(Of Integer), montoTarjeta1 As Nullable(Of Decimal), porcenRecar1 As Nullable(Of Integer), montotarjeta1final As Nullable(Of Decimal), codTarjeta2 As String, planTarjeta2 As String, cuotas2 As Nullable(Of Integer), montoTarjeta2 As Nullable(Of Decimal), porcenRecar2 As Nullable(Of Integer), montotarjeta2final As Nullable(Of Decimal), diferenciaMonto As Nullable(Of Decimal), diferenciaMontoSinIVA As Nullable(Of Decimal), dateadd As Nullable(Of Date), res As ObjectParameter) As Integer
        Dim idVentaParameter As ObjectParameter = If(idVenta.HasValue, New ObjectParameter("IdVenta", idVenta), New ObjectParameter("IdVenta", GetType(Long)))

        Dim codTarjeta1Parameter As ObjectParameter = If(codTarjeta1 IsNot Nothing, New ObjectParameter("CodTarjeta1", codTarjeta1), New ObjectParameter("CodTarjeta1", GetType(String)))

        Dim planTarjeta1Parameter As ObjectParameter = If(planTarjeta1 IsNot Nothing, New ObjectParameter("PlanTarjeta1", planTarjeta1), New ObjectParameter("PlanTarjeta1", GetType(String)))

        Dim cuotas1Parameter As ObjectParameter = If(cuotas1.HasValue, New ObjectParameter("Cuotas1", cuotas1), New ObjectParameter("Cuotas1", GetType(Integer)))

        Dim montoTarjeta1Parameter As ObjectParameter = If(montoTarjeta1.HasValue, New ObjectParameter("MontoTarjeta1", montoTarjeta1), New ObjectParameter("MontoTarjeta1", GetType(Decimal)))

        Dim porcenRecar1Parameter As ObjectParameter = If(porcenRecar1.HasValue, New ObjectParameter("PorcenRecar1", porcenRecar1), New ObjectParameter("PorcenRecar1", GetType(Integer)))

        Dim montotarjeta1finalParameter As ObjectParameter = If(montotarjeta1final.HasValue, New ObjectParameter("Montotarjeta1final", montotarjeta1final), New ObjectParameter("Montotarjeta1final", GetType(Decimal)))

        Dim codTarjeta2Parameter As ObjectParameter = If(codTarjeta2 IsNot Nothing, New ObjectParameter("CodTarjeta2", codTarjeta2), New ObjectParameter("CodTarjeta2", GetType(String)))

        Dim planTarjeta2Parameter As ObjectParameter = If(planTarjeta2 IsNot Nothing, New ObjectParameter("PlanTarjeta2", planTarjeta2), New ObjectParameter("PlanTarjeta2", GetType(String)))

        Dim cuotas2Parameter As ObjectParameter = If(cuotas2.HasValue, New ObjectParameter("Cuotas2", cuotas2), New ObjectParameter("Cuotas2", GetType(Integer)))

        Dim montoTarjeta2Parameter As ObjectParameter = If(montoTarjeta2.HasValue, New ObjectParameter("MontoTarjeta2", montoTarjeta2), New ObjectParameter("MontoTarjeta2", GetType(Decimal)))

        Dim porcenRecar2Parameter As ObjectParameter = If(porcenRecar2.HasValue, New ObjectParameter("PorcenRecar2", porcenRecar2), New ObjectParameter("PorcenRecar2", GetType(Integer)))

        Dim montotarjeta2finalParameter As ObjectParameter = If(montotarjeta2final.HasValue, New ObjectParameter("Montotarjeta2final", montotarjeta2final), New ObjectParameter("Montotarjeta2final", GetType(Decimal)))

        Dim diferenciaMontoParameter As ObjectParameter = If(diferenciaMonto.HasValue, New ObjectParameter("DiferenciaMonto", diferenciaMonto), New ObjectParameter("DiferenciaMonto", GetType(Decimal)))

        Dim diferenciaMontoSinIVAParameter As ObjectParameter = If(diferenciaMontoSinIVA.HasValue, New ObjectParameter("DiferenciaMontoSinIVA", diferenciaMontoSinIVA), New ObjectParameter("DiferenciaMontoSinIVA", GetType(Decimal)))

        Dim dateaddParameter As ObjectParameter = If(dateadd.HasValue, New ObjectParameter("dateadd", dateadd), New ObjectParameter("dateadd", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spVentas_PagoTarjetas_Insert", id, idVentaParameter, codTarjeta1Parameter, planTarjeta1Parameter, cuotas1Parameter, montoTarjeta1Parameter, porcenRecar1Parameter, montotarjeta1finalParameter, codTarjeta2Parameter, planTarjeta2Parameter, cuotas2Parameter, montoTarjeta2Parameter, porcenRecar2Parameter, montotarjeta2finalParameter, diferenciaMontoParameter, diferenciaMontoSinIVAParameter, dateaddParameter, res)
    End Function

    Public Overridable Function spVentas_Salon_Det_Insert(idVenta As Nullable(Of Long), idAlmacen As Nullable(Of Long), codigoProducto As String, qty As Nullable(Of Decimal), idunidad As String, precioVta As Nullable(Of Decimal), precioSinIVA As Nullable(Of Decimal), subtotal As Nullable(Of Decimal), subtotalSinIVA As Nullable(Of Decimal), descuento As Nullable(Of Decimal), peso As Nullable(Of Decimal), cambio As Nullable(Of Integer), fecha As Nullable(Of Date), codigoBarra As String, productoPesable As Nullable(Of Boolean), dateadd As Nullable(Of Date), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idVentaParameter As ObjectParameter = If(idVenta.HasValue, New ObjectParameter("idVenta", idVenta), New ObjectParameter("idVenta", GetType(Long)))

        Dim idAlmacenParameter As ObjectParameter = If(idAlmacen.HasValue, New ObjectParameter("IdAlmacen", idAlmacen), New ObjectParameter("IdAlmacen", GetType(Long)))

        Dim codigoProductoParameter As ObjectParameter = If(codigoProducto IsNot Nothing, New ObjectParameter("CodigoProducto", codigoProducto), New ObjectParameter("CodigoProducto", GetType(String)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Decimal)))

        Dim idunidadParameter As ObjectParameter = If(idunidad IsNot Nothing, New ObjectParameter("idunidad", idunidad), New ObjectParameter("idunidad", GetType(String)))

        Dim precioVtaParameter As ObjectParameter = If(precioVta.HasValue, New ObjectParameter("PrecioVta", precioVta), New ObjectParameter("PrecioVta", GetType(Decimal)))

        Dim precioSinIVAParameter As ObjectParameter = If(precioSinIVA.HasValue, New ObjectParameter("PrecioSinIVA", precioSinIVA), New ObjectParameter("PrecioSinIVA", GetType(Decimal)))

        Dim subtotalParameter As ObjectParameter = If(subtotal.HasValue, New ObjectParameter("Subtotal", subtotal), New ObjectParameter("Subtotal", GetType(Decimal)))

        Dim subtotalSinIVAParameter As ObjectParameter = If(subtotalSinIVA.HasValue, New ObjectParameter("SubtotalSinIVA", subtotalSinIVA), New ObjectParameter("SubtotalSinIVA", GetType(Decimal)))

        Dim descuentoParameter As ObjectParameter = If(descuento.HasValue, New ObjectParameter("Descuento", descuento), New ObjectParameter("Descuento", GetType(Decimal)))

        Dim pesoParameter As ObjectParameter = If(peso.HasValue, New ObjectParameter("Peso", peso), New ObjectParameter("Peso", GetType(Decimal)))

        Dim cambioParameter As ObjectParameter = If(cambio.HasValue, New ObjectParameter("Cambio", cambio), New ObjectParameter("Cambio", GetType(Integer)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim codigoBarraParameter As ObjectParameter = If(codigoBarra IsNot Nothing, New ObjectParameter("CodigoBarra", codigoBarra), New ObjectParameter("CodigoBarra", GetType(String)))

        Dim productoPesableParameter As ObjectParameter = If(productoPesable.HasValue, New ObjectParameter("ProductoPesable", productoPesable), New ObjectParameter("ProductoPesable", GetType(Boolean)))

        Dim dateaddParameter As ObjectParameter = If(dateadd.HasValue, New ObjectParameter("dateadd", dateadd), New ObjectParameter("dateadd", GetType(Date)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spVentas_Salon_Det_Insert", idVentaParameter, idAlmacenParameter, codigoProductoParameter, qtyParameter, idunidadParameter, precioVtaParameter, precioSinIVAParameter, subtotalParameter, subtotalSinIVAParameter, descuentoParameter, pesoParameter, cambioParameter, fechaParameter, codigoBarraParameter, productoPesableParameter, dateaddParameter, useraddParameter, res)
    End Function

    Public Overridable Function spVentas_Salon_Insert(id As ObjectParameter, idCliente As Nullable(Of Long), nombreCF As String, cAE As String, dNICF As Nullable(Of Long), direccionCF As String, numVendedor As String, codComprobante As String, ptoVta As Nullable(Of Long), codigo As ObjectParameter, nroFac As String, fecha As Nullable(Of Date), condicionIVA As String, totalSinIVA As Nullable(Of Decimal), iva As Nullable(Of Decimal), montoIva As Nullable(Of Decimal), total As Nullable(Of Decimal), totalOriginal As Nullable(Of Decimal), contado As Nullable(Of Boolean), montoContado As Nullable(Of Decimal), tarjeta1 As Nullable(Of Boolean), montoTarjeta1 As Nullable(Of Decimal), tarjeta2 As Nullable(Of Boolean), montoTarjeta2 As Nullable(Of Decimal), debito As Nullable(Of Boolean), montoDebito As Nullable(Of Decimal), notaCredito As Nullable(Of Boolean), montoCredito As Nullable(Of Decimal), nota As String, ctaCte As Nullable(Of Boolean), recargo1 As Nullable(Of Integer), porcenRecargo1 As Nullable(Of Decimal), recargo2 As Nullable(Of Integer), porcenRecargo2 As Nullable(Of Decimal), descuentoGlobal As Nullable(Of Boolean), porcenGlobalDesc As Nullable(Of Decimal), montoGlobalDesc As Nullable(Of Decimal), montoGlobalDescSinIVA As Nullable(Of Decimal), seña As Nullable(Of Boolean), comprasInterna As Nullable(Of Boolean), cancelado As Nullable(Of Boolean), fechaCanc As Nullable(Of Date), deuda As Nullable(Of Decimal), cambio As Nullable(Of Integer), nroFacAnulada As String, procesado As Nullable(Of Boolean), cantArt As Nullable(Of Integer), montoTotalTarj As Nullable(Of Decimal), ventaManual As Nullable(Of Boolean), dateadd As Nullable(Of Date), useradd As Nullable(Of Long), res As ObjectParameter) As Integer
        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Long)))

        Dim nombreCFParameter As ObjectParameter = If(nombreCF IsNot Nothing, New ObjectParameter("NombreCF", nombreCF), New ObjectParameter("NombreCF", GetType(String)))

        Dim cAEParameter As ObjectParameter = If(cAE IsNot Nothing, New ObjectParameter("CAE", cAE), New ObjectParameter("CAE", GetType(String)))

        Dim dNICFParameter As ObjectParameter = If(dNICF.HasValue, New ObjectParameter("DNICF", dNICF), New ObjectParameter("DNICF", GetType(Long)))

        Dim direccionCFParameter As ObjectParameter = If(direccionCF IsNot Nothing, New ObjectParameter("DireccionCF", direccionCF), New ObjectParameter("DireccionCF", GetType(String)))

        Dim numVendedorParameter As ObjectParameter = If(numVendedor IsNot Nothing, New ObjectParameter("NumVendedor", numVendedor), New ObjectParameter("NumVendedor", GetType(String)))

        Dim codComprobanteParameter As ObjectParameter = If(codComprobante IsNot Nothing, New ObjectParameter("CodComprobante", codComprobante), New ObjectParameter("CodComprobante", GetType(String)))

        Dim ptoVtaParameter As ObjectParameter = If(ptoVta.HasValue, New ObjectParameter("PtoVta", ptoVta), New ObjectParameter("PtoVta", GetType(Long)))

        Dim nroFacParameter As ObjectParameter = If(nroFac IsNot Nothing, New ObjectParameter("NroFac", nroFac), New ObjectParameter("NroFac", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim condicionIVAParameter As ObjectParameter = If(condicionIVA IsNot Nothing, New ObjectParameter("CondicionIVA", condicionIVA), New ObjectParameter("CondicionIVA", GetType(String)))

        Dim totalSinIVAParameter As ObjectParameter = If(totalSinIVA.HasValue, New ObjectParameter("TotalSinIVA", totalSinIVA), New ObjectParameter("TotalSinIVA", GetType(Decimal)))

        Dim ivaParameter As ObjectParameter = If(iva.HasValue, New ObjectParameter("Iva", iva), New ObjectParameter("Iva", GetType(Decimal)))

        Dim montoIvaParameter As ObjectParameter = If(montoIva.HasValue, New ObjectParameter("MontoIva", montoIva), New ObjectParameter("MontoIva", GetType(Decimal)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Dim totalOriginalParameter As ObjectParameter = If(totalOriginal.HasValue, New ObjectParameter("TotalOriginal", totalOriginal), New ObjectParameter("TotalOriginal", GetType(Decimal)))

        Dim contadoParameter As ObjectParameter = If(contado.HasValue, New ObjectParameter("Contado", contado), New ObjectParameter("Contado", GetType(Boolean)))

        Dim montoContadoParameter As ObjectParameter = If(montoContado.HasValue, New ObjectParameter("MontoContado", montoContado), New ObjectParameter("MontoContado", GetType(Decimal)))

        Dim tarjeta1Parameter As ObjectParameter = If(tarjeta1.HasValue, New ObjectParameter("Tarjeta1", tarjeta1), New ObjectParameter("Tarjeta1", GetType(Boolean)))

        Dim montoTarjeta1Parameter As ObjectParameter = If(montoTarjeta1.HasValue, New ObjectParameter("MontoTarjeta1", montoTarjeta1), New ObjectParameter("MontoTarjeta1", GetType(Decimal)))

        Dim tarjeta2Parameter As ObjectParameter = If(tarjeta2.HasValue, New ObjectParameter("Tarjeta2", tarjeta2), New ObjectParameter("Tarjeta2", GetType(Boolean)))

        Dim montoTarjeta2Parameter As ObjectParameter = If(montoTarjeta2.HasValue, New ObjectParameter("MontoTarjeta2", montoTarjeta2), New ObjectParameter("MontoTarjeta2", GetType(Decimal)))

        Dim debitoParameter As ObjectParameter = If(debito.HasValue, New ObjectParameter("Debito", debito), New ObjectParameter("Debito", GetType(Boolean)))

        Dim montoDebitoParameter As ObjectParameter = If(montoDebito.HasValue, New ObjectParameter("MontoDebito", montoDebito), New ObjectParameter("MontoDebito", GetType(Decimal)))

        Dim notaCreditoParameter As ObjectParameter = If(notaCredito.HasValue, New ObjectParameter("NotaCredito", notaCredito), New ObjectParameter("NotaCredito", GetType(Boolean)))

        Dim montoCreditoParameter As ObjectParameter = If(montoCredito.HasValue, New ObjectParameter("MontoCredito", montoCredito), New ObjectParameter("MontoCredito", GetType(Decimal)))

        Dim notaParameter As ObjectParameter = If(nota IsNot Nothing, New ObjectParameter("Nota", nota), New ObjectParameter("Nota", GetType(String)))

        Dim ctaCteParameter As ObjectParameter = If(ctaCte.HasValue, New ObjectParameter("CtaCte", ctaCte), New ObjectParameter("CtaCte", GetType(Boolean)))

        Dim recargo1Parameter As ObjectParameter = If(recargo1.HasValue, New ObjectParameter("Recargo1", recargo1), New ObjectParameter("Recargo1", GetType(Integer)))

        Dim porcenRecargo1Parameter As ObjectParameter = If(porcenRecargo1.HasValue, New ObjectParameter("PorcenRecargo1", porcenRecargo1), New ObjectParameter("PorcenRecargo1", GetType(Decimal)))

        Dim recargo2Parameter As ObjectParameter = If(recargo2.HasValue, New ObjectParameter("Recargo2", recargo2), New ObjectParameter("Recargo2", GetType(Integer)))

        Dim porcenRecargo2Parameter As ObjectParameter = If(porcenRecargo2.HasValue, New ObjectParameter("PorcenRecargo2", porcenRecargo2), New ObjectParameter("PorcenRecargo2", GetType(Decimal)))

        Dim descuentoGlobalParameter As ObjectParameter = If(descuentoGlobal.HasValue, New ObjectParameter("DescuentoGlobal", descuentoGlobal), New ObjectParameter("DescuentoGlobal", GetType(Boolean)))

        Dim porcenGlobalDescParameter As ObjectParameter = If(porcenGlobalDesc.HasValue, New ObjectParameter("PorcenGlobalDesc", porcenGlobalDesc), New ObjectParameter("PorcenGlobalDesc", GetType(Decimal)))

        Dim montoGlobalDescParameter As ObjectParameter = If(montoGlobalDesc.HasValue, New ObjectParameter("MontoGlobalDesc", montoGlobalDesc), New ObjectParameter("MontoGlobalDesc", GetType(Decimal)))

        Dim montoGlobalDescSinIVAParameter As ObjectParameter = If(montoGlobalDescSinIVA.HasValue, New ObjectParameter("MontoGlobalDescSinIVA", montoGlobalDescSinIVA), New ObjectParameter("MontoGlobalDescSinIVA", GetType(Decimal)))

        Dim señaParameter As ObjectParameter = If(seña.HasValue, New ObjectParameter("Seña", seña), New ObjectParameter("Seña", GetType(Boolean)))

        Dim comprasInternaParameter As ObjectParameter = If(comprasInterna.HasValue, New ObjectParameter("ComprasInterna", comprasInterna), New ObjectParameter("ComprasInterna", GetType(Boolean)))

        Dim canceladoParameter As ObjectParameter = If(cancelado.HasValue, New ObjectParameter("Cancelado", cancelado), New ObjectParameter("Cancelado", GetType(Boolean)))

        Dim fechaCancParameter As ObjectParameter = If(fechaCanc.HasValue, New ObjectParameter("FechaCanc", fechaCanc), New ObjectParameter("FechaCanc", GetType(Date)))

        Dim deudaParameter As ObjectParameter = If(deuda.HasValue, New ObjectParameter("deuda", deuda), New ObjectParameter("deuda", GetType(Decimal)))

        Dim cambioParameter As ObjectParameter = If(cambio.HasValue, New ObjectParameter("Cambio", cambio), New ObjectParameter("Cambio", GetType(Integer)))

        Dim nroFacAnuladaParameter As ObjectParameter = If(nroFacAnulada IsNot Nothing, New ObjectParameter("NroFacAnulada", nroFacAnulada), New ObjectParameter("NroFacAnulada", GetType(String)))

        Dim procesadoParameter As ObjectParameter = If(procesado.HasValue, New ObjectParameter("Procesado", procesado), New ObjectParameter("Procesado", GetType(Boolean)))

        Dim cantArtParameter As ObjectParameter = If(cantArt.HasValue, New ObjectParameter("CantArt", cantArt), New ObjectParameter("CantArt", GetType(Integer)))

        Dim montoTotalTarjParameter As ObjectParameter = If(montoTotalTarj.HasValue, New ObjectParameter("MontoTotalTarj", montoTotalTarj), New ObjectParameter("MontoTotalTarj", GetType(Decimal)))

        Dim ventaManualParameter As ObjectParameter = If(ventaManual.HasValue, New ObjectParameter("VentaManual", ventaManual), New ObjectParameter("VentaManual", GetType(Boolean)))

        Dim dateaddParameter As ObjectParameter = If(dateadd.HasValue, New ObjectParameter("dateadd", dateadd), New ObjectParameter("dateadd", GetType(Date)))

        Dim useraddParameter As ObjectParameter = If(useradd.HasValue, New ObjectParameter("useradd", useradd), New ObjectParameter("useradd", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spVentas_Salon_Insert", id, idClienteParameter, nombreCFParameter, cAEParameter, dNICFParameter, direccionCFParameter, numVendedorParameter, codComprobanteParameter, ptoVtaParameter, codigo, nroFacParameter, fechaParameter, condicionIVAParameter, totalSinIVAParameter, ivaParameter, montoIvaParameter, totalParameter, totalOriginalParameter, contadoParameter, montoContadoParameter, tarjeta1Parameter, montoTarjeta1Parameter, tarjeta2Parameter, montoTarjeta2Parameter, debitoParameter, montoDebitoParameter, notaCreditoParameter, montoCreditoParameter, notaParameter, ctaCteParameter, recargo1Parameter, porcenRecargo1Parameter, recargo2Parameter, porcenRecargo2Parameter, descuentoGlobalParameter, porcenGlobalDescParameter, montoGlobalDescParameter, montoGlobalDescSinIVAParameter, señaParameter, comprasInternaParameter, canceladoParameter, fechaCancParameter, deudaParameter, cambioParameter, nroFacAnuladaParameter, procesadoParameter, cantArtParameter, montoTotalTarjParameter, ventaManualParameter, dateaddParameter, useraddParameter, res)
    End Function

    Public Overridable Function spVentas_Salon_Select_All(fecha As Nullable(Of Date)) As ObjectResult(Of spVentas_Salon_Select_All_Result)
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spVentas_Salon_Select_All_Result)("spVentas_Salon_Select_All", fechaParameter)
    End Function

    Public Overridable Function spVentas_Salon_Update_FEAFIP(iDFacturacion As Nullable(Of Long), cAE As String, venc_CAE As String, codigoBarra As String, comprobanteNro As Nullable(Of Long), comprobanteTipo As Nullable(Of Integer), conceptoTipo As Nullable(Of Integer), res As ObjectParameter) As Integer
        Dim iDFacturacionParameter As ObjectParameter = If(iDFacturacion.HasValue, New ObjectParameter("IDFacturacion", iDFacturacion), New ObjectParameter("IDFacturacion", GetType(Long)))

        Dim cAEParameter As ObjectParameter = If(cAE IsNot Nothing, New ObjectParameter("CAE", cAE), New ObjectParameter("CAE", GetType(String)))

        Dim venc_CAEParameter As ObjectParameter = If(venc_CAE IsNot Nothing, New ObjectParameter("Venc_CAE", venc_CAE), New ObjectParameter("Venc_CAE", GetType(String)))

        Dim codigoBarraParameter As ObjectParameter = If(codigoBarra IsNot Nothing, New ObjectParameter("CodigoBarra", codigoBarra), New ObjectParameter("CodigoBarra", GetType(String)))

        Dim comprobanteNroParameter As ObjectParameter = If(comprobanteNro.HasValue, New ObjectParameter("ComprobanteNro", comprobanteNro), New ObjectParameter("ComprobanteNro", GetType(Long)))

        Dim comprobanteTipoParameter As ObjectParameter = If(comprobanteTipo.HasValue, New ObjectParameter("ComprobanteTipo", comprobanteTipo), New ObjectParameter("ComprobanteTipo", GetType(Integer)))

        Dim conceptoTipoParameter As ObjectParameter = If(conceptoTipo.HasValue, New ObjectParameter("ConceptoTipo", conceptoTipo), New ObjectParameter("ConceptoTipo", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spVentas_Salon_Update_FEAFIP", iDFacturacionParameter, cAEParameter, venc_CAEParameter, codigoBarraParameter, comprobanteNroParameter, comprobanteTipoParameter, conceptoTipoParameter, res)
    End Function

    Public Overridable Function spVentas_Select_ALL(eliminado As Nullable(Of Boolean)) As ObjectResult(Of spVentas_Select_ALL_Result)
        Dim eliminadoParameter As ObjectParameter = If(eliminado.HasValue, New ObjectParameter("eliminado", eliminado), New ObjectParameter("eliminado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spVentas_Select_ALL_Result)("spVentas_Select_ALL", eliminadoParameter)
    End Function

    Public Overridable Function spVerificarCodigo(codigo As String, res As ObjectParameter) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("codigo", codigo), New ObjectParameter("codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spVerificarCodigo", codigoParameter, res)
    End Function

End Class
